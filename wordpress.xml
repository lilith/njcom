<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/3.2.1" created="2012-02-01 20:48" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.1/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.1/"
>

<channel>
	<title>Nathanael Jones</title>
	<link>http://nathanaeljones.com</link>
	<description>Ramblings of a computer linguist</description>
	<pubDate>Wed, 01 Feb 2012 20:48:00 +0000</pubDate>
	<language>en</language>
	<wp:wxr_version>1.1</wp:wxr_version>
	<wp:base_site_url>http://nathanaeljones.com</wp:base_site_url>
	<wp:base_blog_url>http://nathanaeljones.com</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login>admin</wp:author_login><wp:author_email>nathanael.jones@gmail.com</wp:author_email><wp:author_display_name><![CDATA[Nathanael Jones]]></wp:author_display_name><wp:author_first_name><![CDATA[Nathanael]]></wp:author_first_name><wp:author_last_name><![CDATA[Jones]]></wp:author_last_name></wp:author>

	<wp:category><wp:term_id>3</wp:term_id><wp:category_nicename>asp-net</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[ASP.NET]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>8</wp:term_id><wp:category_nicename>general-programming</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[General Programming]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>6</wp:term_id><wp:category_nicename>image-resizing</wp:category_nicename><wp:category_parent>asp-net</wp:category_parent><wp:cat_name><![CDATA[Image Resizing]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>1</wp:term_id><wp:category_nicename>uncategorized</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Uncategorized]]></wp:cat_name></wp:category>
	<wp:tag><wp:term_id>3</wp:term_id><wp:tag_slug>asp-net</wp:tag_slug><wp:tag_name><![CDATA[ASP.NET]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>7</wp:term_id><wp:tag_slug>computerlinguist-com</wp:tag_slug><wp:tag_name><![CDATA[computerlinguist.com]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>4</wp:term_id><wp:tag_slug>image-resizer</wp:tag_slug><wp:tag_name><![CDATA[image resizer]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>6</wp:term_id><wp:tag_slug>image-resizing</wp:tag_slug><wp:tag_name><![CDATA[Image Resizing]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>5</wp:term_id><wp:tag_slug>pageclass</wp:tag_slug><wp:tag_name><![CDATA[PageClass]]></wp:tag_name></wp:tag>

	<generator>http://wordpress.org/?v=3.2.1</generator>

	<item>
		<title>quality-600px-24bit</title>
		<link>http://nathanaeljones.com/?attachment_id=164</link>
		<pubDate>Sun, 18 Oct 2009 20:17:04 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/wp-content/uploads/2009/10/quality-600px-24bit.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>164</wp:post_id>
		<wp:post_date>2009-10-18 16:17:04</wp:post_date>
		<wp:post_date_gmt>2009-10-18 20:17:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>quality-600px-24bit</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nathanaeljones.com/wp-content/uploads/2009/10/quality-600px-24bit.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/10/quality-600px-24bit.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:5:"width";s:3:"600";s:6:"height";s:3:"388";s:14:"hwstring_small";s:23:"height='82' width='128'";s:4:"file";s:31:"2009/10/quality-600px-24bit.png";}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>quality-600px-q-100</title>
		<link>http://nathanaeljones.com/?attachment_id=165</link>
		<pubDate>Sun, 18 Oct 2009 20:17:09 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/wp-content/uploads/2009/10/quality-600px-q-100.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>165</wp:post_id>
		<wp:post_date>2009-10-18 16:17:09</wp:post_date>
		<wp:post_date_gmt>2009-10-18 20:17:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>quality-600px-q-100</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nathanaeljones.com/wp-content/uploads/2009/10/quality-600px-q-100.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/10/quality-600px-q-100.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:5:"width";s:3:"600";s:6:"height";s:3:"388";s:14:"hwstring_small";s:23:"height='82' width='128'";s:4:"file";s:31:"2009/10/quality-600px-q-100.jpg";}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>quality-600px-quality-80</title>
		<link>http://nathanaeljones.com/?attachment_id=166</link>
		<pubDate>Sun, 18 Oct 2009 20:17:11 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/wp-content/uploads/2009/10/quality-600px-quality-80.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>166</wp:post_id>
		<wp:post_date>2009-10-18 16:17:11</wp:post_date>
		<wp:post_date_gmt>2009-10-18 20:17:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>quality-600px-quality-80</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nathanaeljones.com/wp-content/uploads/2009/10/quality-600px-quality-80.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/10/quality-600px-quality-80.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:5:"width";s:3:"600";s:6:"height";s:3:"388";s:14:"hwstring_small";s:23:"height='82' width='128'";s:4:"file";s:36:"2009/10/quality-600px-quality-80.jpg";}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>quality-600px-quality-90</title>
		<link>http://nathanaeljones.com/?attachment_id=167</link>
		<pubDate>Sun, 18 Oct 2009 20:17:15 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/wp-content/uploads/2009/10/quality-600px-quality-90.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>167</wp:post_id>
		<wp:post_date>2009-10-18 16:17:15</wp:post_date>
		<wp:post_date_gmt>2009-10-18 20:17:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>quality-600px-quality-90</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nathanaeljones.com/wp-content/uploads/2009/10/quality-600px-quality-90.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/10/quality-600px-quality-90.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:5:"width";s:3:"600";s:6:"height";s:3:"388";s:14:"hwstring_small";s:23:"height='82' width='128'";s:4:"file";s:36:"2009/10/quality-600px-quality-90.jpg";}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>quality-600px-selective-diffusion-256c</title>
		<link>http://nathanaeljones.com/?attachment_id=168</link>
		<pubDate>Sun, 18 Oct 2009 20:17:19 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/wp-content/uploads/2009/10/quality-600px-selective-diffusion-256c.gif</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>168</wp:post_id>
		<wp:post_date>2009-10-18 16:17:19</wp:post_date>
		<wp:post_date_gmt>2009-10-18 20:17:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>quality-600px-selective-diffusion-256c</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nathanaeljones.com/wp-content/uploads/2009/10/quality-600px-selective-diffusion-256c.gif</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/10/quality-600px-selective-diffusion-256c.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:5:"width";s:3:"600";s:6:"height";s:3:"388";s:14:"hwstring_small";s:23:"height='82' width='128'";s:4:"file";s:50:"2009/10/quality-600px-selective-diffusion-256c.gif";}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>quality-original</title>
		<link>http://nathanaeljones.com/?attachment_id=169</link>
		<pubDate>Sun, 18 Oct 2009 20:17:37 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/wp-content/uploads/2009/10/quality-original.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>169</wp:post_id>
		<wp:post_date>2009-10-18 16:17:37</wp:post_date>
		<wp:post_date_gmt>2009-10-18 20:17:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>quality-original</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nathanaeljones.com/wp-content/uploads/2009/10/quality-original.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/10/quality-original.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:5:"width";s:4:"1306";s:6:"height";s:3:"845";s:14:"hwstring_small";s:23:"height='82' width='128'";s:4:"file";s:28:"2009/10/quality-original.jpg";}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>grass</title>
		<link>http://nathanaeljones.com/?attachment_id=170</link>
		<pubDate>Sun, 18 Oct 2009 20:17:41 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/wp-content/uploads/2009/10/grass.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>170</wp:post_id>
		<wp:post_date>2009-10-18 16:17:41</wp:post_date>
		<wp:post_date_gmt>2009-10-18 20:17:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>grass</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nathanaeljones.com/wp-content/uploads/2009/10/grass.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/10/grass.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:5:"width";s:3:"800";s:6:"height";s:3:"600";s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:17:"2009/10/grass.jpg";}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>heading</title>
		<link>http://nathanaeljones.com/?attachment_id=171</link>
		<pubDate>Sun, 18 Oct 2009 20:17:42 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/wp-content/uploads/2009/10/heading.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>171</wp:post_id>
		<wp:post_date>2009-10-18 16:17:42</wp:post_date>
		<wp:post_date_gmt>2009-10-18 20:17:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>heading</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nathanaeljones.com/wp-content/uploads/2009/10/heading.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/10/heading.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:5:"width";s:3:"455";s:6:"height";s:3:"129";s:14:"hwstring_small";s:23:"height='36' width='128'";s:4:"file";s:19:"2009/10/heading.jpg";}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>image</title>
		<link>http://nathanaeljones.com/?attachment_id=172</link>
		<pubDate>Sun, 18 Oct 2009 20:17:44 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/wp-content/uploads/2009/10/image.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>172</wp:post_id>
		<wp:post_date>2009-10-18 16:17:44</wp:post_date>
		<wp:post_date_gmt>2009-10-18 20:17:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>image</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nathanaeljones.com/wp-content/uploads/2009/10/image.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/10/image.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:5:"width";s:3:"400";s:6:"height";s:3:"265";s:14:"hwstring_small";s:23:"height='84' width='128'";s:4:"file";s:17:"2009/10/image.jpg";}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Moon_256</title>
		<link>http://nathanaeljones.com/?attachment_id=173</link>
		<pubDate>Sun, 18 Oct 2009 20:17:46 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/wp-content/uploads/2009/10/Moon_256.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>173</wp:post_id>
		<wp:post_date>2009-10-18 16:17:46</wp:post_date>
		<wp:post_date_gmt>2009-10-18 20:17:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>moon_256</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nathanaeljones.com/wp-content/uploads/2009/10/Moon_256.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/10/Moon_256.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:5:"width";s:3:"256";s:6:"height";s:3:"256";s:14:"hwstring_small";s:22:"height='96' width='96'";s:4:"file";s:20:"2009/10/Moon_256.png";}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>red-leaf</title>
		<link>http://nathanaeljones.com/?attachment_id=174</link>
		<pubDate>Sun, 18 Oct 2009 20:17:49 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/wp-content/uploads/2009/10/red-leaf.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>174</wp:post_id>
		<wp:post_date>2009-10-18 16:17:49</wp:post_date>
		<wp:post_date_gmt>2009-10-18 20:17:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>red-leaf</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nathanaeljones.com/wp-content/uploads/2009/10/red-leaf.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/10/red-leaf.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:5:"width";s:3:"800";s:6:"height";s:3:"600";s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:20:"2009/10/red-leaf.jpg";}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>rose-leaf</title>
		<link>http://nathanaeljones.com/?attachment_id=175</link>
		<pubDate>Sun, 18 Oct 2009 20:17:52 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/wp-content/uploads/2009/10/rose-leaf.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>175</wp:post_id>
		<wp:post_date>2009-10-18 16:17:52</wp:post_date>
		<wp:post_date_gmt>2009-10-18 20:17:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rose-leaf</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nathanaeljones.com/wp-content/uploads/2009/10/rose-leaf.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/10/rose-leaf.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:5:"width";s:3:"800";s:6:"height";s:3:"600";s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:21:"2009/10/rose-leaf.jpg";}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Saturn_256</title>
		<link>http://nathanaeljones.com/?attachment_id=176</link>
		<pubDate>Sun, 18 Oct 2009 20:17:54 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/wp-content/uploads/2009/10/Saturn_256.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>176</wp:post_id>
		<wp:post_date>2009-10-18 16:17:54</wp:post_date>
		<wp:post_date_gmt>2009-10-18 20:17:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>saturn_256</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nathanaeljones.com/wp-content/uploads/2009/10/Saturn_256.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/10/Saturn_256.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:5:"width";s:3:"256";s:6:"height";s:3:"256";s:14:"hwstring_small";s:22:"height='96' width='96'";s:4:"file";s:22:"2009/10/Saturn_256.png";}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Sun_256</title>
		<link>http://nathanaeljones.com/?attachment_id=177</link>
		<pubDate>Sun, 18 Oct 2009 20:17:57 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/wp-content/uploads/2009/10/Sun_256.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>177</wp:post_id>
		<wp:post_date>2009-10-18 16:17:57</wp:post_date>
		<wp:post_date_gmt>2009-10-18 20:17:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sun_256</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nathanaeljones.com/wp-content/uploads/2009/10/Sun_256.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/10/Sun_256.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:5:"width";s:3:"256";s:6:"height";s:3:"256";s:14:"hwstring_small";s:22:"height='96' width='96'";s:4:"file";s:19:"2009/10/Sun_256.png";}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>tractor</title>
		<link>http://nathanaeljones.com/?attachment_id=178</link>
		<pubDate>Sun, 18 Oct 2009 20:18:01 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/wp-content/uploads/2009/10/tractor.JPG</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>178</wp:post_id>
		<wp:post_date>2009-10-18 16:18:01</wp:post_date>
		<wp:post_date_gmt>2009-10-18 20:18:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tractor</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nathanaeljones.com/wp-content/uploads/2009/10/tractor.JPG</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/10/tractor.JPG]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:5:"width";s:3:"800";s:6:"height";s:3:"600";s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:19:"2009/10/tractor.JPG";}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>tractor-tiny</title>
		<link>http://nathanaeljones.com/?attachment_id=179</link>
		<pubDate>Sun, 18 Oct 2009 20:18:02 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/wp-content/uploads/2009/10/tractor-tiny.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>179</wp:post_id>
		<wp:post_date>2009-10-18 16:18:02</wp:post_date>
		<wp:post_date_gmt>2009-10-18 20:18:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tractor-tiny</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nathanaeljones.com/wp-content/uploads/2009/10/tractor-tiny.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/10/tractor-tiny.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:5:"width";s:3:"100";s:6:"height";s:2:"75";s:14:"hwstring_small";s:23:"height='75' width='100'";s:4:"file";s:24:"2009/10/tractor-tiny.jpg";}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>tulip-leaf</title>
		<link>http://nathanaeljones.com/?attachment_id=180</link>
		<pubDate>Sun, 18 Oct 2009 20:18:06 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/wp-content/uploads/2009/10/tulip-leaf.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>180</wp:post_id>
		<wp:post_date>2009-10-18 16:18:06</wp:post_date>
		<wp:post_date_gmt>2009-10-18 20:18:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tulip-leaf</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nathanaeljones.com/wp-content/uploads/2009/10/tulip-leaf.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/10/tulip-leaf.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:5:"width";s:3:"800";s:6:"height";s:3:"600";s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:22:"2009/10/tulip-leaf.jpg";}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Image resizing module</title>
		<link>http://nathanaeljones.com/featured/resize-images-dynamically/ad4/</link>
		<pubDate>Sun, 25 Oct 2009 00:24:01 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://nathanaeljones.com/wp-content/uploads/2009/10/ad41.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>336</wp:post_id>
		<wp:post_date>2009-10-24 20:24:01</wp:post_date>
		<wp:post_date_gmt>2009-10-25 00:24:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ad4</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>293</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nathanaeljones.com/wp-content/uploads/2009/10/ad41.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/10/ad41.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"900";s:6:"height";s:3:"300";s:14:"hwstring_small";s:23:"height='42' width='128'";s:4:"file";s:16:"2009/10/ad41.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:16:"ad41-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:16:"ad41-300x100.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"100";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Quick Key</title>
		<link>http://nathanaeljones.com/products/quickkey/qksmall/</link>
		<pubDate>Mon, 26 Oct 2009 15:27:05 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://nathanaeljones.com/wp-content/uploads/2009/10/qksmall.gif</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>384</wp:post_id>
		<wp:post_date>2009-10-26 11:27:05</wp:post_date>
		<wp:post_date_gmt>2009-10-26 15:27:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>qksmall</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>188</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nathanaeljones.com/wp-content/uploads/2009/10/qksmall.gif</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/10/qksmall.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:2:"80";s:6:"height";s:3:"165";s:14:"hwstring_small";s:22:"height='96' width='46'";s:4:"file";s:19:"2009/10/qksmall.gif";s:5:"sizes";a:1:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"qksmall-80x150.gif";s:5:"width";s:2:"80";s:6:"height";s:3:"150";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Download files</title>
		<link>http://nathanaeljones.com/152/extending-page-adding-metadata-and-stylesheet-management/metadatastylesheetmanagement/</link>
		<pubDate>Mon, 26 Oct 2009 15:37:15 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://nathanaeljones.com/wp-content/uploads/2009/02/MetadataStylesheetManagement.zip</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>390</wp:post_id>
		<wp:post_date>2009-10-26 11:37:15</wp:post_date>
		<wp:post_date_gmt>2009-10-26 15:37:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>metadatastylesheetmanagement</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>152</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nathanaeljones.com/wp-content/uploads/2009/02/MetadataStylesheetManagement.zip</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/02/MetadataStylesheetManagement.zip]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>About</title>
		<link>http://nathanaeljones.com/about-2/</link>
		<pubDate>Wed, 20 Aug 2008 16:22:47 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/?page_id=89</guid>
		<description></description>
		<content:encoded><![CDATA[Hi!

I've been writing software for nearly a decade. This doesn't make me anything special - there are far, far more experienced people out there.

However, I'm a little obsessed with ROI. Return on investment of <em>my time.</em> So I'm perpetually looking for better tools, better languages, and better frameworks.  Most importantly, I'm always looking for better <em>concepts</em>. Better approaches, better practices.

Along the way, I started to question a lot of classic 'wisdom' about software. I realized that I'd fallen into the same rut with everyone else, and it stunk. I'd started believing that the object-oriented, imperative, strictly-typed way was the only <em>good</em> way to do things.

I was entirely wrong, and guilty of groupthink. And I don't want it to happen again.

My e-mail address is computer.linguist@gmail.com.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>89</wp:post_id>
		<wp:post_date>2008-08-20 12:22:47</wp:post_date>
		<wp:post_date_gmt>2008-08-20 16:22:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>about-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>99</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Image Resizer Installation</title>
		<link>http://nathanaeljones.com/image-resizer-installation/</link>
		<pubDate>Thu, 11 Nov 2010 19:44:48 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/?page_id=91</guid>
		<description></description>
		<content:encoded><![CDATA[Installation is quick and simple, provided you follow the steps carefully. 99% of problems users encounter are due to skipping a step.

1) <strong>Copy and paste</strong> ImageResizer.dll and ImageResizer.pdb into the /bin directory of your app. Alternatively, you can copy the inner ImageResizer folder (which contains .cs files) into App_Code. The second approach allows modification of CustomFolders.cs and Watermark.cs.

2) <a href="~/11161">Copy and paste these settings</a> into web.config to configure the module.

Users of 2.1+ who are using the "image.jpg.ashx?width=500" syntax can stop here. You're done!

For versions prior to 2.1, or for users wanting the cleaner "image.jpg?width=500" syntax, some additional IIS configuration is needed.

You will need to <a href="~/11111">configure IIS to pass image requests to ASP.NET</a>. This is default behavior for Cassini and IIS7 integrated mode, but not for IIS5, 6, and 7 classic pipeline.
<h2>Upgrading?</h2>
Follow the upgrade instructions instead.

<a href="/11171">v1.0-v1.2 upgrade notes</a>
<a href="/11181">v1.2 to v2.0 upgrade notes
</a><a href="/438/version-2-1b-released/">v2.0 to v2.1b upgrade notes
</a><a href="/489">v2.1b to v2.6 upgrade notes</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>91</wp:post_id>
		<wp:post_date>2010-11-11 14:44:48</wp:post_date>
		<wp:post_date_gmt>2010-11-11 19:44:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>image-resizer-installation</wp:post_name>
		<wp:status>private</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Quick Key</title>
		<link>http://nathanaeljones.com/products/quickkey/</link>
		<pubDate>Sun, 18 Oct 2009 20:33:12 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/?page_id=188</guid>
		<description></description>
		<content:encoded><![CDATA[<p class="introduction">
Quick Key extends your keyboard, letting you type all 65,000 characters
that there are today. It does so without cluttering your screen or interfering with your work. 
To type a character, click it. Quick Key is completely free of charge, and is 
licensed under the Open Source <a href="about.html#licensing">GPL license</a>.
</p>

<h1>
            <a id="intro"></a>Introduction</h1>
       <img src="http://nathanaeljones.com/wp-content/uploads/2009/10/qksmall.gif" alt="The character grid displaying one of many character sets" title="Quick Key" width="80" height="165" class="alignright size-full wp-image-384" /> 
	<p>
	Quick Key is primarily a flexible keyboard extension, although it has dozens of unique features
	that make it indispensible for developers as well as regular users. Quick Key is an alternative to
	using Microsoft Character Map or <a href="alt.html">Alt Codes</a>, both of which are difficult to use.
        Quick Key is the ideal solution for people who need to input foreign characters or mathematical
            symbols quickly, but do not want to spend time learning a new <a href="alt.html#layouts">keyboard
                layout</a>.
        </p>
        <h1>
	    <a id="gettingstarted"></a>Installation
        </h1>
        <p>
            After you have downloaded the Quick Key <a href="http://sourceforge.net/projects/quickkeydotnet/files/QuickKey/QuickKey-5.2.2311.29002/QuickKey-5.2.2311.29002.zip/download">
                zip file</a> , right click on the file and choose <strong>Extract All</strong>.
            Now double-click on <strong>setup.exe</strong> and follow the provided instructions.
            Once the installation is finished, click the <strong>Start Menu</strong>&gt;<strong>Programs</strong>&gt;<strong>Quick
                Key</strong>&gt;<strong>Quick Key</strong>. A red and black icon should appear
    in the bottom-right corner of your screen. Click this icon to display the <a href="charsets.html#chargrid">Character Grid</a>.</p>
     <h1>
	    <a id="usage"></a>Using Quick Key
    </h1>
		<ul>
			<li><strong>Quick Key</strong> supports drag-and-drop for almost everything. You can move characters
			around inside Quick Key, out of Quick Key, and into Quick Key using drag-and-drop.
			</li><li>
			<strong>Quick Key</strong> also allows you to copy and paste characters, as well as their HTML code.
			</li><li>
			<strong>Quick Key</strong> allows you to <a href="keystroke.html">
			send characters to a specific application</a> using a program code. For example, <strong>MSN Messenger</strong> is MSBLClass.
			</li><li>
			<strong>Quick Key</strong> can function as a reference for <strong>Alt codes</strong>. To see information about a symbol or letter, move your mouse over it.
			</li><li>
			<strong>Quick Key</strong> allows you to save <a href="charsets.html">
			customized groups of characters to disk</a>.
			</li><li>
			<strong>Quick Key</strong> <a href="charsets.html#filters">filters your character sets</a>, 
			displaying only a certain category of characters. 
			For example, by default, Control and Format characters are hidden.
   			</li>
			
			
		</ul>
        <h1>
            <a id="bugs"></a>Bugs?</h1>
        <p>
            Please help me make Quick Key better by reporting bugs when you find them. All I
            need is a sentence describing what was clicked when Quick Key crashed, and the contents
            of the <strong>Error Log</strong>. After you have restarted Quick Key, right click
            the icon in the system tray and choose <strong>Error Log</strong>. Make sure you
            select <strong>Last Five Instances</strong> before you copy and paste into the email.
            My email address is <a href="mailto:support@imageresizing.net">support@imageresizing.net</a></p>
        <p>
            <strong>Please don't limit your feedback to bugs</strong> - I'd love to hear your
            comments, suggestions, and criticisms. If you have any ideas for this website, or
            know of something that should be included in the documentation, please let me know.
        </p>
        <h1>
            <a id="licensing"></a>Licensing
        </h1>
        <p>
            Quick Key is an Open Source project. That means you can send it to your friends,
            modify the source code, and put it on every computer you own. Just make sure you
            don't restrict these rights to anybody else, and you keep the notices attached.
            Any modifications you make are under the same rules. Please read the <a href="http://www.gnu.org/licenses/gpl.html">
                GNU General Public License</a>. Quite a bit of Quick Key is located in a separate
            package called the <strong>JCL</strong> (Jones Control Library). This part is licensed
            under the <a href="http://www.gnu.org/licenses/lgpl.html">GNU Lesser Public License</a>,
            which is the same as above, except it can be used in proprietary programs.
        </p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>188</wp:post_id>
		<wp:post_date>2009-10-18 16:33:12</wp:post_date>
		<wp:post_date_gmt>2009-10-18 20:33:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>quickkey</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>206</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>sidebar</wp:meta_key>
			<wp:meta_value><![CDATA[<h1>Help Out!</h1>
	<div class="submenu">
		<a href="about.html#waystohelp">Report a bug</a>
		<a href="translate.html">Translate a page</a>
	</div>
        <h1>
            Related
        </h1>
        <div class="submenu">
            <a href="http://people.w3.org/rishida/utilities.html">UniView by Richard Ishida</a>
		<a href="http://www.ergonis.com/products/popchar/">PopChar</a>
		<a href="http://www.braser.com/morekeys.html">MoreKeys</a>
		<a href="http://www.camsoftpartners.co.uk/frkeys.htm">FrKeys</a> 
		<a href="http://www.diacrit.sandrila.co.uk/">Diacrit</a>
        </div>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[page-full.php]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>268</wp:comment_id>
			<wp:comment_author><![CDATA[Free QuickKey Software to Type 65000 Characters on Standard Keyboard – Type Foreign Languages on Keyboards with QuickKey | Pro Digital Blog]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://prodigitalblog.com/free-quickkey-software-to-type-65000-characters-on-standard-keyboard-%e2%80%93-type-foreign-languages-on-keyboards-with-quickkey/</wp:comment_author_url>
			<wp:comment_author_IP>74.220.219.70</wp:comment_author_IP>
			<wp:comment_date>2009-11-13 17:27:28</wp:comment_date>
			<wp:comment_date_gmt>2009-11-13 22:27:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Quick Key is an alternative to using Microsoft Character Map or Alt Codes, and is a Free Computer Keyboard Extension to Type Foreign Fonts. The software is an ideal solution for people who need to input foreign characters or mathematical [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Keystroke Emulation in Quick Key</title>
		<link>http://nathanaeljones.com/products/quickkey/keystroke-emulation-in-quick-key/</link>
		<pubDate>Sun, 18 Oct 2009 20:36:24 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/?page_id=190</guid>
		<description></description>
		<content:encoded><![CDATA[    <div id="header">
        <h1>
		Keystroke Emulation</h1>
        <h2>
		Targeting Specific Windows</h2>
    </div>

<p class="introduction">
Keystroke Emulation is the quickest way to type characters with Quick Key. It is instantaneous, and
allows you to target specific applications like MS Word or Excel.</p>

<h1>
                <a id="keystroke"></a>Sending Characters</h1>
            <p>
                In addition to standard copy and paste methods for transferring characters, Quick
                Key also supports keystroke sending and drag and drop. Keystroke emulation is often
                the preferred method of transferring characters, as it requires only one click and
                can target individual applications. Unfortunately, keystroke emulation is only as
                reliable as application that is receiving the keystrokes. Some applications respond
                to key presses slowly and may miss the emulated keystroke due to its short duration.
            </p>
            <h1>
                <a id="keywords"></a>Keywords</h1>
            <p>
                Keystroke emulation first requires that the target application have focus. Quick
                Key takes an unusual approach to determining which window to bring to the front
                by using <strong>Keywords</strong>. The <strong>keyword</strong> for an application
                is determined by its internal class name. Most applications will already have their
                keywords listed in the <a href="charsets.html#toolbar">Toolbar</a>, but more can be added in
                <a href="#options">Options</a>.
            </p>
            <strong>Default Keywords</strong>
            <ul>
                <li>Microsoft Word - OpusApp</li>
                <li>Microsoft Excel - XLMAIN</li>
                <li>Microsoft Outlook - rctrl_renwnd32</li>
                <li>Microsoft Access - OMain</li>
                <li>Microsoft PowerPoint - PP10FrameClass</li>
                <li>OpenOffice - SALFRAME</li>
                <li>MSN Messenger - MSBLClass</li>
                <li>Outlook Express (Compose E-mail) - ATH_Note</li>
                <li>Calculator - SciCalc</li>
                <li>Notepad - Notepad</li>
                <li>Word Pad - WordPadClass</li>
                <li>My Computer - CabinetWClass</li>
                <li>Internet Explorer - IEFrame</li>
                <li>Mozilla Firefox - MozillaUIWindowClass</li>
                <li>Registry Editor - RegEdit_RegEdit</li>
                <li>Microsoft Visual Studio - wndclass_desked_gsk</li>
                <li>CMD.EXE Console - ConsoleWindowClass</li>
                <li>PuTTY - PuTTY</li>
                <li>Picasa - ytWindow</li>
            </ul>
            <h1>
                <a id="options"></a>Options</h1>
            <p>
                In the <strong>Options</strong> window you can modify <a href="#keywords">Keywords</a> and
                mouse settings. There is a tab for each mouse button, and the checks on that tab
                represent actions that will take place when the button is clicked on a character.
                To find the keyword for an application, you must enter the title bar text <strong>exactly</strong>
                as it appears into the find utility.
            </p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>190</wp:post_id>
		<wp:post_date>2009-10-18 16:36:24</wp:post_date>
		<wp:post_date_gmt>2009-10-18 20:36:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>keystroke-emulation-in-quick-key</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>188</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>sidebar</wp:meta_key>
			<wp:meta_value><![CDATA[<h1>Help Out!</h1>
<div class="submenu">
	<a href="about.html#waystohelp">Reccomend a Keyword</a>
</div>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[page-full.php]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Character Groups</title>
		<link>http://nathanaeljones.com/products/quickkey/charsets-html/</link>
		<pubDate>Sun, 18 Oct 2009 20:38:36 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/?page_id=192</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="header">
<h1>Character Sets</h1>
<h2>Grouping Characters</h2>
</div>

<p class="introduction">
Quick Key allows you to group characters into personalized sets, and save them to disk.
</p>

 <h1>
                <a id="charsets"></a>Usage</h1>

            	<p>
			Quick Key can't fit all 65,000 characters on your screen at the same time, so they
		 	are organized in to logical groups called "charsets".	These are saved as .charset
			files, and are used and modified in the Character Grid.
		</p>
		<p>
			By creating personalized character sets you will save yourself time and screen space.
			Smaller, more focused groups are easier to manage, and are faster to respond
		   	Although Quick Key can display charsets with more than a few hundred characters,
			it can become unresponsive for long periods of time. 
            </p>
		
            <h1>
                <a id="includedcharsets"></a>Included Charsets</h1>
	    <p>To load a character set, click <strong>File &gt; Open</strong> on the <a href="#toolbar">Toolbar</a>, and choose
		a charset. Quick Key includes about 220 charsets.</p>
		<h3>Directories</h3>
		<ul>
			<li><strong>By Language</strong><br />Character sets by category</li>
			<li><strong>By Font</strong><br /> Font-specific character sets</li>
			<li><strong>All</strong><br /> All 65,000 chracters, split into 1024 chraracter groups</li>
			<li><strong>View Filters</strong><br /> Can be used in conjunction with charsets to apply filters.</li>
			<li><strong>Text Styles</strong><br /> Similar to View Filters, but these overlay formatting when opened instead.</li>
            </ul>
		<h3>Files</h3>
		<ul>
			<li><strong>Ascii</strong><br />The 256 characters that are almost universally supported</li>
			<li><strong>&lt;Language&gt;</strong><br />Language-optimized character groups. Contains only
			the freqently used characters for each language.</li>
		 </ul>

            <h1>
                <a id="makecharset"></a>Making your own charsets</h1>
            <p>
                Although many charsets are included by default, you may wish to create your own.
                The recommended procedure for this is to start with a larger character set that
                already has most of the characters you need, and then delete the unnecessary ones. If
                you find yourself needing a character that is not in the provided sets, press <strong>
                    Ctrl-Shift-U</strong> to add characters by decimal or hexadecimal code. Another
                feature found in the <strong>Tools</strong> menu of the <a href="#toolbar">Toolbar</a>
                is the <strong>Edit Characters as Text</strong> dialog box, where the list of characters
                is placed into a normal text box for regular editing. Note, however, that text boxes
                display characters differently than the character grid does. Some characters (combining
                marks) are displayed over preceding characters, and some are only visible as squares.</p>
            <p>
                <strong>Tips:</strong> To quickly create a charset from an existing one, choose
                <strong>New Copy of this Charset</strong> from the <strong>File</strong> menu. If
                you are in possession of a document that already contains the characters you need,
                use <strong>Import from File</strong>. Use this to drag and drop (right mouse button)
                text selections to the character grid.</p>
            <h1>
                <a id="charsethelp"></a>Help Wanted</h1>
            <p>
                Help us out! You can make your donation to the Quick Key project in the form of
                a charset. The Unicode standard defines tens of thousands of characters, and we
                are a long way from organizing all those into really useful groups. Please <a href="mailto:nathanaeljones@users.sourceforge.net">
                    email us</a> the characters sets you have customized to help you with your job;
                we will upload them to this page for everyone to enjoy. With each new release these
                files will be included.</p>

                        <h1>
                <a id="filters"></a>Filtering Character Categories</h1>
            <p>
                Filters may cause some headaches, but I think once you get used to them they will
                come in handy. Filters are categories of characters, defined by the Unicode standard,
                which can be used selectively to narrow the number of characters you see in the
                <a href="#chargrid">Character Grid</a>. For example, by default, characters in the
                categories <strong>Format, Control, Private Use, Other Not Assigned, Other Number</strong>,
                and <strong>Surrogate</strong> are hidden. These characters are unlikely to be used
                by anybody but a software developer or systems administrator. Your filter selections
                will be saved with your character set, but you can turn this off in the <strong>File</strong>
                menu. Character set files can contain any combination of <strong>Font Settings</strong>,
                <strong>Filters</strong>, and <strong>Characters</strong>. When a character set
                is opened and it does not contain one of these categories of information, the font
                settings, filters, and even characters are used from the last character set, essentially
                merging the two. Filter settings are found in the <strong>Filters</strong> menu
                on the <strong>Toolbar Form</strong>.
            </p>
			<h1>
                <a id="fontrec"></a>Picking a Font</h1>
            <p>
                Most <a href="#fonts">fonts</a> only support a small subset of the available characters;
                 for the rest they display a generic rectangle. <a href="http://en.wikipedia.org/wiki/Arial_Unicode_MS">
                    Arial Unicode MS</a> supports an amazing selection of the Unicode specification.
                It contains 51,180 glyphs, and is bundled with Microsoft Word. I recommend that
                you use this font as much as possible while working with Quick Key, so that you
                can view the largest number of characters. Keep in mind, however, which font the
                destination application is using, as this will determine the result.</p>
			<h1>
                <a id="fonts"></a>All fonts are different
            </h1>
            <p>
                In Quick Key, all characters will be displayed using whatever font is currently
                selected in the Toolbar. You may notice that when a character is transferred to
                another application, the appearance or shape of the character changes. This is because
                Quick Key and the destination application are using different fonts to render the
                character. If both fonts are correctly designed, and use the <a href="http://www.unicode.org">
                    Unicode</a> standard, the only change should be the style of the character.
                If a completely different character appears, you are using a non-standard font in
                either Quick Key or the application. Always use a standardized font to ensure
                sure that the document will be readable in the future. If in doubt, change the
                font to <strong>Times New Roman</strong> and verify that the letters appear correctly.
                As Quick Key does not transfer font information along with characters, I recommend that
                you set the font to <strong>Arial Unicode MS</strong> and leave it there. This eliminates
                any confusion you may have when opening a charset and seeing <a href="#fontrec">
                    rectangles</a>.
            </p>
			            <h1>
                <a id="toolbar"></a>The Toolbar
            </h1>
            <p>
                Here you can load a different character set, save one you have modified, or change
                how characters are displayed. <a href="keystroke.html">Keywords</a> and <a href="#filters">
                    Filters</a> are controlled here. To display the toolbar, right click the <a href="#chargrid">
                        Character Grid</a> title bar or the <strong>system tray icon</strong>, and
                choose <strong>Toolbar</strong>.
            </p>
			            <h1>
                <a id="chargrid"></a>Character Grid
            </h1>
            <p>
                The character grid is what you will use when sending characters to other applications.
                Most functions can be accessed by right-clicking objects in this window. The title
                bar menu allows you to modify appearance, functionality, and open a recently used
                charset. You will also notice the two icons next to the close button. These enable
                the auto-hide and lock features respectively. The character grid displays all characters
                in the current charset that match the currently selected <a href="#filters">filters</a>.
                To move characters around, click the <strong>Drag</strong> mouse button (left) on
                a character.</p>
            <p>
                Although using right-click menus to deal with characters one-by-one is often sufficient,
                you may need to make mass deletions or modifications that require a more powerful
                method. To do this, open the <a href="#toolbar">Toolbar</a>, the click <strong>Tools</strong>><strong>Edit
                    Characters as Text</strong>. Now you can perform modifications on selections
                of characters.</p>

		           
            <h1>
                <a id="legacy"></a>Legacy charsets
            </h1>
            <p>
                If you have a version of Quick Key released before January 24, 2006, please avoid
                the following character sets. These character sets are extremely large, and unsuitable for viewing in
	 Quick Key. These were generated by an automatic utility.
            </p>
            <ul>
                <li>Unicode Ranges\CJK Unified Ideograph Extension A.charset</li>
                <li>Unicode Ranges\Chars (31,130-42,124).charset </li>
                <li>Unicode Ranges\Chars (1-31,129).charset</li>
                <li>Unicode Ranges\Hangul.charset</li>
                <li>Unicode Ranges\Private Use Area.charset</li>
                <li>Unicode Ranges\Yi &amp; Yi Radicals.charset</li>
                <li>Symbols\Mathematical Operators.charset</li>
                <li>Symbols\Daash Punctuation.charset</li>
                <li>Languages\Times New Roman\Times New Roman.charset</li>
            </ul>
            <strong>These have been left in newer versions because they are useful, but will display a warning.</strong>
            <ul>
                <li>Fonts\Times New Roman.charset</li>
                <li>Fonts\Microsoft Sans Serif.charset</li>
                <li>Fonts\Courier New.charset</li>
            </ul>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>192</wp:post_id>
		<wp:post_date>2009-10-18 16:38:36</wp:post_date>
		<wp:post_date_gmt>2009-10-18 20:38:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>charsets-html</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>188</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>sidebar</wp:meta_key>
			<wp:meta_value><![CDATA[<h1>Help Out!</h1>
<div class="submenu">
	<a href="about.html#waystohelp">Submit a Charset</a>
</div>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[page-full.php]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>275</wp:comment_id>
			<wp:comment_author><![CDATA[Free QuickKey Software to Type 65000 Characters on Standard Keyboard – Type Foreign Languages on Keyboards with QuickKey | Pro Digital Blog]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://prodigitalblog.com/free-quickkey-software-to-type-65000-characters-on-standard-keyboard-%e2%80%93-type-foreign-languages-on-keyboards-with-quickkey/</wp:comment_author_url>
			<wp:comment_author_IP>74.220.219.70</wp:comment_author_IP>
			<wp:comment_date>2009-11-13 23:29:38</wp:comment_date>
			<wp:comment_date_gmt>2009-11-14 04:29:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...]  [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>What are Alt Codes?</title>
		<link>http://nathanaeljones.com/products/quickkey/what-are-alt-codes/</link>
		<pubDate>Sun, 18 Oct 2009 20:40:59 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/?page_id=194</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>Other ways to type characters</h3>

<p class="introduction">
This page explains <a href="#altcodes">Alt Codes</a> and <a href="#layouts">Keyboard Layouts</a>.
</p>

            <h1>
                <a id="altcodes"></a>Alt Codes
            </h1>
            <p>
                Alt codes allow you to enter characters by their code point (Computer do not store
                text as graphics, but in numerical format). Characters are stored on your computer
                as numbers; each letter or symbol is assigned to number. To make sure that text
                looks the same on all computers, there is a standard called 
                    Unicode that defines this. Due to the number of alphabets in the world,
                <a href="http://www.unicode.org">Unicode</a> defines tens of thousands of characters.
            </p>
            <p>
                Most English characters are located in the first 128 characters. Everything you
                see on your keyboard is mashed in there. Uppercase, lowercase, numbers, symbols,
                and control keys. Originally, it seems, there were only 7 bits available per letter.
                Then there were 8, and the next 128 characters were used for accents and such. Finally,
                we got 16, and even 32. For more information, see the <a href="http://en.wikipedia.org/wiki/UTF-8">
                    Wikipedia article on UTF-8</a>.</p>
            <p>
                Anyway, back to the subject: when you hold down an alt key and type a number on
                the right side of the keyboard, a character appears. Make sure <strong>Num Lock</strong>
                is turned on, or your efforts will be fruitless. Note that this only works with
                some Microsoft software. A variant of alt codes are alt-X codes. Unlike alt codes,
                which require a decimal code point, Alt-X codes work with <a href="http://en.wikipedia.org/wiki/Hexadecimal">
                    hexadecimal</a> numbers. After you type in the hexadecimal value for a character,
                press Alt and the X key simultaneously to convert the code into a character, and
                vice versa.  <br />
	More information can be found in the
	<a href="http://en.wikipedia.org/wiki/Alt_codes">Wikipedia article on Alt Codes</a>.
            </p>
	
            <ul>
	<li>Cardbox Software <a href="http://www.cardbox.com/quick/download.htm"> has created a 
                    utility</a> that is supposed to enable alt codes accross all applications.</li>
	<li>	
	The Unicode Consortium has created <a href="http://www.unicode.org/charts/">PDF charts of each language 			</a>, 	with the corresponding numeric code and
		a picture of the letter (Quick Key has a copy of these charts in the <strong>By Language</strong> directory).
              </li></ul>
            
            <h1>
                <a id="layouts"></a>Keyboard Layouts
            </h1>
            <p>
                For people who use a different alphabet often enough to justify learning a new typing
                pattern, keyboard layouts should be used. Keyboard layouts map keys and key combinations
                to characters. Microsoft Windows includes keyboard layouts for most languages, although
                they may not be installed by default. Go to <strong>Control Panel</strong>><strong>Regional
                    and Language settings</strong>><strong>Languages Tab</strong>><strong>Details Button</strong>.
                You should now see the <strong>Text Services and Input Languages</strong> window.
                Click Add for more keyboard layouts.
            </p>
            <p>
                For those who need to customize their keyboard layout, try the <a href="http://www.microsoft.com/globaldev/tools/msklc.mspx">
                    Microsoft Keyboard Layout Creator</a>, or <a href="http://www.tavultesoft.com/keyman/">
                        Tavueltesoft Keyman</a>.
            </p>

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>194</wp:post_id>
		<wp:post_date>2009-10-18 16:40:59</wp:post_date>
		<wp:post_date_gmt>2009-10-18 20:40:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>what-are-alt-codes</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>188</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>sidebar</wp:meta_key>
			<wp:meta_value><![CDATA[        <h1>
            Related
        </h1>
        <div class="submenu">
	<a href="http://www.tavultesoft.com/keyman/">Tavultesoft Keyman</a>
	<a href="http://allchars.zwolnet.com/">AllChars</a>
	<a href="http://www.microsoft.com/globaldev/tools/msklc.mspx">Microsoft Keyboard Layout Creator</a>
	<a href="http://www.cardbox.com/quick/download.htm">Quick Unicode Input Tool</a>
        </div>
]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Software</title>
		<link>http://nathanaeljones.com/products/</link>
		<pubDate>Sun, 18 Oct 2009 21:21:01 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/?page_id=206</guid>
		<description></description>
		<content:encoded><![CDATA[<h2><a href="http://imageresizing.net">ASP.NET Image Resizer</a></h2>
The leading dynamic image resizer and processing solution for IIS and ASP.NET. Free & Open-source.
<h2><a href="http://windowsgit.com">WindowsGit</a></h2>
5-minute installer for setting up a GIt server on Windows. Open source, $9 download fee.
<h2><a href="http://quickkeydotnet.sourceforge.net/">Quick Key</a></h2>
Allows you to type the other several thousand symbols that couldn't fit on your keyboard. Free, open-source.
<h2><a href="http://codeplex.com/SuperCopy">Super Copy</a></h2>
A wrapper for xcopy that makes it easy-to-use. Annoyance-free directory transfers guaranteed. Free, open-source.
<h2></h2>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>206</wp:post_id>
		<wp:post_date>2009-10-18 17:21:01</wp:post_date>
		<wp:post_date_gmt>2009-10-18 21:21:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>products</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[page-full.php]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Contact</title>
		<link>http://nathanaeljones.com/contact/</link>
		<pubDate>Sun, 18 Oct 2009 21:21:51 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/?page_id=208</guid>
		<description></description>
		<content:encoded><![CDATA[  <p>
            Feel free to contact me with feedback, questions, or suggestions. E-mail me at <strong>computer.linguist@gmail.com</strong></p>

<p>You can call me using this link.</p>

<object type="application/x-shockwave-flash" data="https://clients4.google.com/voice/embed/webCallButton" width="230" height="85"><param name="movie" value="https://clients4.google.com/voice/embed/webCallButton" /><param name="wmode" value="transparent" /><param name="FlashVars" value="id=488b164378299e5d6624d4d504afe901088171c1&style=0" /></object>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>208</wp:post_id>
		<wp:post_date>2009-10-18 17:21:51</wp:post_date>
		<wp:post_date_gmt>2009-10-18 21:21:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>contact</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>100</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>111</wp:comment_id>
			<wp:comment_author><![CDATA[James]]></wp:comment_author>
			<wp:comment_author_email>registrations@rationalpath.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>173.77.167.192</wp:comment_author_IP>
			<wp:comment_date>2009-10-22 13:36:17</wp:comment_date>
			<wp:comment_date_gmt>2009-10-22 17:36:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Don't know if it's important, but the page for your dynamic thumbnail generation module is a bit off kilter (image missing, links broken).

Thanks!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>113</wp:comment_id>
			<wp:comment_author><![CDATA[Nathanael Jones]]></wp:comment_author>
			<wp:comment_author_email>nathanael.jones@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>216.205.223.34</wp:comment_author_IP>
			<wp:comment_date>2009-10-22 17:39:26</wp:comment_date>
			<wp:comment_date_gmt>2009-10-22 21:39:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yeah - still bringing the site back up on the new CMS. *most* stuff is broken still.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>111</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Server-side Image Resizing Module for ASP.NET, ASP, &amp; PHP/IIS</title>
		<link>http://nathanaeljones.com/products/asp-net-image-resizer-v2/</link>
		<pubDate>Mon, 19 Oct 2009 03:34:55 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/?page_id=234</guid>
		<description></description>
		<content:encoded><![CDATA[<div style="padding:10px; color:red; font-size:11pt; border:1px solid red; margin-bottom:1.5em;">This is regarding a depreciated version. <a href="http://imageresizing.net/">Visit the V3 website for the latest information</a>. <a href="http://imageresizing.net/docs/2to3/">Click here for the migration guide</a></div>
<div id="tabs">
<ul>
	<li><a href="#why">Why</a></li>
	<li><a href="#opensource">Open Source</a></li>
	<li><a href="#features">Features</a></li>
	<li><a href="#quality">Quality</a></li>
	<li><a href="#performance">Performance</a></li>
	<li><a href="#requirements">Requirements</a></li>
	<li><a href="#faq">FAQ</a></li>
</ul>
<div id="why">
<div class="rightbox" style="line-height:1em;"><a class="download" href="http://imageresizing.net/download">Download Source</a>


<p style="margin-bottom: 0; padding-top: 0; font-size: 7.5pt; color: #909090;">Includes v2.6 - Nov. 11 2010</p>
<p style="margin-bottom: 0; padding-top: 0; font-size: 7.5pt; color: #909090;">Purchase securely using Paypal, Visa, MasterCard, Discover, or American Express.</p>
<a href="/products/asp-net-image-resizer-v2/changelog/">Changelog</a><a href="../../11151_Image_Resizer_License">License</a><a href="../../11201_Image_Resizer_v2_Examples">Samples</a><a href="/11141_Image_Resizer_Installation">Installation</a>

If you have any questions after reading the documentation, leave a comment or e-mail <strong>support@imageresizing.net</strong>.

</div>
<h3>You need this module if you work with images.</h3>
Once installed, you can size, crop, and change the format of images from anywhere... HTML, ASP.NET, ASP, PHP, Flex, or Flash ... Just add the desired behavior to the URL with "?width=100" or "?format=jpg". It supports scaling, cropping, rotating, flipping, stretching, padding, borders, transparency, jpeg, png, and gif formats. Aspect ratio is <em>always</em> maintained unless &amp;stretch=fill is specified.

Server-side image resizing is one of those little features that can have incredible ROI. It can save webmasters several hours each day, and gives you the ability to change the resolution of an image without having to hunt up the original.

I first developed this image resizing system in early 2007. I needed something very intuitive, simple, secure, and efficient. Hundreds of customers, millions of images, three years of traffic, and zero memory leaks have been discovered. Less than 4 stability or security related bugs have slipped through the testing process, and all were in alpha or beta versions.

.NET 2.0 through 4.0 are supported, along with IIS5, IIS6, IIS7, and IIS7.5.

No code is required, but a full API is present if you want to integrate resizing and cropping into your upload process, or even hook it into a database. All .NET languages are supported.
<p class="rightbox">The difference between the actual size and wanted size  of an uploaded image is inversely proportional to the quantiy of time available and the sluggishness of Photoshop.</p>
Check out the <a href="../../11201_Image_Resizer_v2_Examples">samples page</a> to see what it can do. The <a href="../../11151_Image_Resizer_License">license</a> is much like the GPL, and allows you to redistribute the source code as part of a larger project. You'll find the source code very clean, organized, and well commented.

Although I typically release my components for free, I decided to charge a 'download fee' for this one to help support my other open-source projects. Don't worry, this component is still open-source, and the license permits source redistribution as part of a larger system. However, I'm asking that people who want to integrate this component purchase the download instead of ripping it out of another open-source project. My free to non-free LOC (lines of code) ratio is still over 40 to 1, and I plan on keeping it that way.  I trust this will keep everybody happy.

Your donations are the reason Version 2 exists.
<h2>A few user comments...</h2>
<div class="smallcomments">
<blockquote>To anyone thinking of using this module, it worked great and saved me lots of custom-coding time for a client project. On top of that, Nathanael reworked some of the code to my needs for a very reasonable rate, so I have the custom solution I needed.

If you're working on an image display project in asp.net, just use this code and enjoy. It's bullet proof!

Jason

<a href="http://webmanufactory.blogspot.com/">http://webmanufactory.blogspot.com/</a></blockquote>
<blockquote>Nathanael, I downloaded your code this weekend to use in our portal code base. I was tired of writing code to pick between icon/medium/large/original sizes of the images for different pickers / viewers etc. I was skeptical as to whether the component would be fast enough for the performance we are after in our software, but I am glad to report that your code is super fast and does exactly what you say it does. It was easy to install, and works perfectly. Thank you so much for building this tool, it is going to come in handy!

I do have one question though, which is why the tool will not resize an image to be larger than the original source image. I have a few images that are 800X600 jpegs, and when I tried ?width=1024 the code returned the original image size of 800X600? Is this by design? How hard would it be to make the code upsize and image? <em>[v2 allows this with &amp;scale=both]</em>

Again, thank you for the tool, and to other skeptic developers, Nathan's code rocks out of the box.

Thanks,

Steve</blockquote>
<blockquote>By Dave
just like to say, since using the code (and getting working and donating in next to no time) we have moved three or four of our sites over to using this technique. Previously we had manually run batch resizes initially and then made clients create multiple sizes of the image... very time consuming and some clients weren't technically up to the task. Having been after such a solution for so long, i was really worried that the time to generate images on the fly and the resultant quality would be a problem, but WOW..... this code nails it entirely...i can only say if you are reading these comments, worry not and get this code straight away.... so much work seems to have gone into this solution, i can't rate it too highly... my find of the year....... thanks Nathanael....</blockquote>
</div>
</div>
<div id="features">

Querystring-based resizing is super-simple and can be used from any language (HTML, ASP.NET, PHP, Flash, Flex, etc).

Supports scaling, cropping, rotating, flipping, stretching, padding, borders, transparency, and the 4 main image formats. Aspect ratio is maintained unless <strong>&amp;stretch=fill</strong> is specified.

For example, to make an image 400px or less wide, just add <strong>?width=400</strong>. If you want to set both the maximum height and width, use <strong>?maxwidth=400&amp;maxheight=400</strong>.

Sometimes you need all your images to be exactly the same size, regardless of the original aspect ratio. There are several solutions to this. If you specify both <strong>width</strong> and <strong>height</strong>, whitespace will be automatically added to two sides to make up the difference. Set whitespace color with <strong>&amp;bgcolor</strong>. If you don't want whitespace, you can try <strong>&amp;crop=auto</strong>. This "smart cropping" will figure out the minimal amount of cropping needed to center the image in the box without changing the aspect ratio or leaving whitespace. And, of course, you could stretch your images with <strong>&amp;stretch=fill</strong>... if you really wanted to.

Convert between jpg, png, gif, tiff, and bmp images with <strong>&amp;format=jpg|png|gif</strong>. Adjust the quality/size tradeoff of Jpegs with <strong>&amp;quality=1-100</strong>, and the palette size of GIFs and PNGs with <strong>&amp;colors=2-255</strong>

Not just for thumbnails - useful for resizing entire slideshows in real-time as the user changes the window size.

You can select any frame of an animated GIF with <strong>?frame=x</strong>, and any page from a TIFF file with <strong>?page=x</strong>.

Manually crop out parts of an image with <strong>?crop=(x1,y1,x2,y2).</strong> Rotate with <strong>?rotate=degrees</strong>. Flip with <strong>?flip=h|v|both</strong>.
And the best part - add borders and paddings without causing CSS layout bugs!

Check out the <a href="/11201_Image_Resizer_v2_Examples">samples page</a> to see all the features in action.
<ul class="normallist">
	<li>Supported input formats: BMP, GIF, JPG, PNG and TIFF</li>
	<li>Supported output formats: <strong>JPG, PNG, and GIF</strong></li>
</ul>
<h3>Command Reference</h3>
<ul class="normallist">
	<li>width, height - force the width and/or height to certain dimensions. Whitespace will be added if the aspect ratio is different.</li>
	<li>maxwidth, maxheight - fit the image within the specified bounds. (Most often used)</li>
	<li>crop=auto - Crop the image the the size specified by width and height. Centers and minimally crops to preserve aspect ratio.</li>
	<li>crop=(x1,y1,x2,y2) - Crop the image to the specified rectangle on the source image. You can use negative coordinates to specifiy bottom-right relative locations.</li>
	<li>rotate=degress - Rotate the image.</li>
	<li>bgcolor=color name| hex code (6-char). Sets the background/whitespace color.</li>
	<li>stretch=fill - Stretches the image to width and height if both are specified. This is the only way to lose aspect ratio.</li>
	<li>scale=both|upscaleonly|downscaleonly|upscalecanvas - By default, images are never upscaled. Use &amp;scale=both to grow an image.</li>
	<li>flip=h|v|both - Flips the image after resizing.</li>
	<li>sourceFlip=h|v|both - Flips the source image before resizing/rotation.</li>
	<li>paddingWidth=px &amp; paddingColor=color|hex. paddingColor defaults to bgcolor, which defaults to white.</li>
	<li>borderWidth=px, borderColor=color|hex.</li>
	<li>format=jpg|png|gif</li>
	<li>colors=2-255 - Control the palette size of PNG and GIF images. If omitted, PNGs will be 24-bit.</li>
	<li>frame=x - Choose which frame of an animated GIF to display.</li>
	<li>page=x - Choose which page of a multi-page TIFF document to display.</li>
</ul>
</div>
<div id="quality">

Bicubic resampling is used exclusively, resulting in very high-quality output. Jpeg compression is excellent, and uses the native windows JPEG encoder. Version 2.0 adds octree quantization for GIF and 8-bit PNG output, providing excellent palette generation for those also.

In my tests, the native windows JPEG encoder and Photoshop have the same visual quality and file size results. Expect photoshop-quality results for both JPEG and PNG output.

GIF and 8-bit PNG output is drastically improved in version 2.0 due to the addition of octree quantization. The primary difference you will notice between Photoshop and module output is the lack of dithering. In most scenarios this doesn't affect visual quality much and actually makes the image look 'cleaner'. Very gentle gradients do benefit from dithering, as do gradients against transparency.

File sizes are excellent - don't expect a measurable improvement when you use Photoshop or ImageReady to compress your images with the same quality settings.

</div>
<div id="performance">

The key to the excellent performance of this module is the disk caching system. This allows even a relatively low-end server to handle the same number of dynamic requests as static file requests. Each image only has to be resized once; subsequent requests are served directly from disk.
<ul class="normallist">
	<li>Caching doesn't get in your way - if you modify the source file, the resized versions are also updated.</li>
	<li>You can resize the same image to several different sizes, and the different versions are cached separately.</li>
	<li><strong>Managed disk cache</strong>. If the number of cached files exceeds the configured threshold, a cleanup pass is made on the directory, and a block of the least recently used files are removed.</li>
	<li>Client-side caching directives are sent, minimizing repetitive requests from the same client.</li>
	<li>Thumbnail generation in <strong>under 20 milliseconds</strong> for most images.</li>
	<li>Suitable for slideshows and lists of images. Even the initial resizing of 50 images concurrently isn't noticeably slow.</li>
	<li>Good with large source files (1-5MB)</li>
</ul>
</div>
<div id="requirements">
<ul class="normallist">
	<li>Runs on any of the following following: Windows 2000,  Server 2000, XP, Server 2003, Vista, or Server 2008.</li>
	<li>Requires .NET 2.0 or higher to be installed on the server and enabled on the website. .NET 4 is suported</li>
	<li>Users of version 1.0 should get the free upgrade to 1.2 if they wish to use IIS7 Integrated Mode.</li>
</ul>
</div>
<div id="opensource" style="padding-left: 25px;">

While I do charge a download fee, the license allows you to redistribute the source as part of another open-source project. I'm trying to achieve several objectives: 1) Remove the need for users to track licenses, 2) Promote use in open-source projects, 3) Still provide financial support so the project can continue to evolve rapidly.
<ul class="normallist">
	<li>Complete source code and an example project is included</li>
	<li>Clean, well documented, well designed code.</li>
	<li>Great platform to build your own image processing systems on. You can use the disk caching system or image processing code independently from each other.</li>
	<li>Very extensible, easy to add new features.</li>
</ul>
CustomFolders.cs can be *easily* modified to do all kinds of work:
<ul class="normallist">
	<li>Build rules to automatically resize images based on folder name or other criteria.</li>
	<li>Add a new syntax for abbreviating or simplifying common resizing operations. Like /resize(w,h)/.</li>
	<li>Easily perform URL rewriting for your images with String.Replace calls. (Regexes work too, if you like them).</li>
</ul>
By purchasing the download, you are permitted to
<ol>
	<li>Modify and use the component in all of your projects.</li>
	<li>Redistribute the source code as part of another project, provided the component
is less than 5% of the project (in lines of code), and you keep this information attached.</li>
	<li>If you received the source code as part of another open source project,
you cannot extract it (by itself) for use in another project without purchasing a download
from http://nathanaeljones.com/. If nathanaeljones.com is no longer running, and a download
cannot be purchased, then you may extract the code.</li>
</ol>
This is basically a developer license - if you aren't a developer (i.e., a hosting company wanting a site or server license), please e-mail me (nathanael.jones@gmail.com).

</div>
<div id="faq"><dl class="faq"> <dt>Q: Is it possible to specify the width and height, and have your resize and crop to fit the aspect ratio, losing as little image area as possible? </dt> <dd>A: Yes, and it is easy. Use ?width=x&amp;height=y&amp;crop=auto.

</dd> <dt>Q: Are animated GIFs supported? </dt> <dd>A: Only one frame is resized. You can choose the frame using &amp;frame=x. Animated GIFs are not supported by .NET, and require lots of extra code.
I've developed a custom add-on to the resizer that supports them, but it costs extra. Send me an e-mail if you wish to purchase it.

</dd> <dt>Q: Are multi-page .TIFFs supported? </dt> <dd>A: Yes - you can convert any page of a multi-page .TIFF to .jpg, .png, or .gif. Use ?page=x&amp;format=jpg

</dd> <dt>Q: Can I resize the same image to different sizes? </dt> <dd>A: Yes - there is no limit on how many sizes of an image can be cached.

</dd> <dt>Q: Is load balancing across multiple servers supported? </dt> <dd>A: Each server needs its own /imagecache directory. If you disable file system synchronization for /imagecache, it should work fine.

</dd> <dt>Q: Do the image names change when they are resized? Is SEO affected? </dt> <dd>A: No, image names are retained - SEO isn't affected.

</dd> <dt>Q: If I resize a photo to its original size, will a new photo be returned, or the original? </dt> <dd>A: All photos are re-compressed, even if the original photo is the same size. This allows ICC correction, file size improvement, and metadata removal.

</dd> <dt>Q: Can the resizer both crop, then resize at the same time? </dt> <dd>A: Yes, you can specify a crop rectangle with ?crop=(x1,y1,x2,y2) or ?crop=auto, and add &amp;width=x or any of the resizing commands to resizing the resulting crop.
All commands can be combined.

</dd> <dt>Q: Can I use this on images not located on the server? </dt> <dd>A: No - it only works for local images. Resizing remote images requires a different architecture, and a different syntax.
Speedy performance is more difficult.
If you are interested in funding this feature, e-mail me. If enough people are interested, they can split the cost of development.

</dd> <dt>Q: Do the image names change when they are resized? Is SEO affected? </dt> <dd>A: No, image names are retained - SEO isn't affected.

</dd> <dt>Q: When I resize a small image to larger dimensions, it stays at the original size. </dt> <dd>A: This is by design - add &amp;scale=both to allow images to be upscaled. You might want to consider up-scaling client-side to save bandwidth... Just set both width and height on the &lt;img&gt; tag.

</dd> <dt>Q: Can I use this with images stored in a database? </dt> <dd>A: Sure, but you'll have to do a little work. The hard part is done for you, but you'll need to write the SQL code and call
ImageManager.getBestInstance().BuildImage(). You can pass in a Bitmap object - which can be created from a SQL blob field. The Bitmap that is returned
can be written to disk easily using the ImageOutputSettings class.

</dd> <dt>Q: Can I use this to resize images as users upload them? </dt> <dd>A: Sure! I suggest keeping the original images around, and using the resizer normally (in case you later want larger images).
However, it's easy to resize and overwrite an image - 1 line of code.

ImageManager.getBestInstance().BuildImage(sourceFile, destFile, new yrl("?maxwidth=80&amp;maxheight=80&amp;format=png").QueryString);

</dd> <dt>Q: Is in neccessary to wildcard map everything to ASP.NET when using IIS6? </dt> <dd>A: No - you can map .jpg, .png, and .gif individually, but I've had numerous reports of IIS issues when using this configuration. I suggest you avoid it.

</dd> <dt>Q: I'm seeing a username and password dialog when resizing some images. What is causing this? </dt> <dd>A: You are probably using IIS6, and have inserted individual mappings for .jpg, .gif, and .png instead of using the wildcard mapping as suggested.
The best solution is to add the wildcard mapping.

</dd> <dt>Q: I asked my hosting company to add the wildcard mapping, but images don't resize when I add ?width=x; they appear in their original size. I've verified that the HttpModule entry is in Web.Config </dt> <dd>A: The tech support person didn't add the wildcard mapping correctly. Sorry. You can prove it to them by enabling tracing and verifying that the
image requests never reach asp.net.
Add
to your web.config temporarily (never leave it in long on a production site - slows things down).
Visit mysite.com/anyimage.jpg
Visit mysite.com/trace.axd. If the JPG URL isn't in here, it is impossible that the wildcard mapping is installed correctly.

</dd> <dt>Q: I'm getting OutOfMemory exceptions when I try to resize certain large images for the first time (subsequent requests are fine). They're only 15MB in jpeg form, and I have 100MB of free RAM. </dt> <dd>A:
A 15MB JPG uncompresses to about 80MB in bitmap form (depending upon the compression level). If you are resizing to a 2MB jpeg (15MB BMP), memory requirements for the
operation are roughly 110MB (15 + 80 + 15). If you plan on using the resizer for very high-resolution photos (above 8MP), I suggest making sure you have ample amounts of RAM.

</dd> <dt>Q: I've upgraded from the trial version, but I'm still seeing watermarks on my images. </dt> <dd>A: You need to delete the contents of the /imagecache folder, which still contains some cached images generated by the trial version.

</dd> <dt>Q: My website is hosted on a UNC share, and it's not working. I have 2.0a or earlier. </dt> <dd>A: Upgrade. It works in 2.0b.

</dd> <dt>Q: I'm getting a .NET security error when resizing GIF images, and when using ?format=png&amp;colors=255. All other image types work fine.

</dt> <dd>A: Your hosting provider has messed with the machine.config on the server, and
has prohibited the Marshal class from being used. Upgrade to 2.1+ and set DisableCustomQuantization=true in web.config. GIF quality will be noticeably lower,
but errors should go away. Alternatively, find yourself a better hosting provider.

</dd> <dt>Q: Image resizing is slow. The number of files in /imagecache/ is constantly hovering around the MaxCachedImages value. </dt> <dd>A: If MaxCachedImages is too low, images will be constantly deleted, then resized again as the get requested next.

</dd> <dt>Q: When I resize a dark image, I noticed that there is a 1 pixel border around the image that is slightly brighter than the rest - like a dark gray. What causes this? </dt> <dd>A: This is a bug in Microsoft's GDI code. I've tried over 8 different workarounds, and I don't think any exist.
I may switch to a different image processing library for this reason, but I've had very, very few complaints about the issue.

</dd> <dt>Q: I've written my own code that uses your classes. I'm getting "A generic error occurred in GDI+" with PNGs. </dt> <dd>A: PNGs can only be written to seekable streams (such as files). Response.OutputStream is not seekable.
Use the ImageOutputSettings.SaveImageToNonSeekableStream() method to fix this. Make sure you are using 2.0rc2 or later.

</dd> <dt>Q: My problem isn't listed here. What do I do? </dt> <dd>A: First, make sure you are using wildcard mapping instead of individual mappings. And that you are using the latest version.
This is the #1 problem (other than forgetting mappings entirely).
Next, go through the instructions again and double-check your settings.
If that doesn't help, leave a comment on the main page with
your problem, complete error message (you may have to enable debug=true),
version of IIS, and the URLs you are using.

</dd> </dl></div>
</div>
Looking for the 60+ comments that used to be here? They're on the <a href="../../11131_Image_Resizer_v1_2_Product_Page">old (v1.2) product page</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>234</wp:post_id>
		<wp:post_date>2009-10-18 23:34:55</wp:post_date>
		<wp:post_date_gmt>2009-10-19 03:34:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>asp-net-image-resizer-v2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>206</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_js_logic_wp_script</wp:meta_key>
			<wp:meta_value><![CDATA[jquery-ui-tabs]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[page-product.php]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>articlebanner</wp:meta_key>
			<wp:meta_value><![CDATA[        
    <div class="resizerDemo">
<img src="/wp-content/themes/overeasy-ndj/images-custom/product-top2.png" class="product-top-image" />
<div class="imageSelection">

<div id="imageList"></div>

<p class="liveDemo">Live Demo!</p>
 <p class="chooseImage">Click an image</p>
</div>

<div class="imageBackground">

<div class="interface">
<ul class="sizes">
 

</ul>
<p class="command"><a target="_tab" id="demo_openInNewTab">Modify the query string directly</a>.</p>

</div>
  </div>
</div>]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>116</wp:comment_id>
			<wp:comment_author><![CDATA[20 Image Resizing Pitfalls &#8211; Nathanael Jones]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://nathanaeljones.com/163/20-image-resizing-pitfalls/</wp:comment_author_url>
			<wp:comment_author_IP>66.29.219.39</wp:comment_author_IP>
			<wp:comment_date>2009-10-23 15:06:47</wp:comment_date>
			<wp:comment_date_gmt>2009-10-23 19:06:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Server-side Image Resizing Module for ASP.NET, ASP, &amp; PHP/IIS [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Resize images dynamically</title>
		<link>http://nathanaeljones.com/featured/resize-images-dynamically/</link>
		<pubDate>Sat, 24 Oct 2009 22:26:41 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://nathanaeljones.com/?page_id=293</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="/products/asp-net-image-resizer/"><img src="http://nathanaeljones.com/wp-content/uploads/2009/10/ad41.jpg?width=770" alt="Image resizing module" title="Image resizing module" width="770" class="aligncenter size-full wp-image-336" /></a>

<div style="display:none;">
Resize, crop, rotate, and manipulate images without ever leaving your markup. 

&lt;img src="image.jpg" />

Need a 400 pixel wide version? Easy.

&lt;img src="image.jpg?width=400" />

Everything is done on-the-fly, but cached to provide blazing performance. 
Try the demo now!
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>293</wp:post_id>
		<wp:post_date>2009-10-24 18:26:41</wp:post_date>
		<wp:post_date_gmt>2009-10-24 22:26:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>resize-images-dynamically</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>296</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[page-full.php]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Lousiville, KY</title>
		<link>http://nathanaeljones.com/contact/roadmap-and-architecture-design/roadmap-louisville/</link>
		<pubDate>Mon, 26 Oct 2009 20:02:01 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://nathanaeljones.com/wp-content/uploads/2009/10/roadmap-louisville.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>394</wp:post_id>
		<wp:post_date>2009-10-26 16:02:01</wp:post_date>
		<wp:post_date_gmt>2009-10-26 20:02:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>roadmap-louisville</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>302</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nathanaeljones.com/wp-content/uploads/2009/10/roadmap-louisville.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/10/roadmap-louisville.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"940";s:6:"height";s:3:"358";s:14:"hwstring_small";s:23:"height='48' width='128'";s:4:"file";s:30:"2009/10/roadmap-louisville.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:30:"roadmap-louisville-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:30:"roadmap-louisville-300x114.jpg";s:5:"width";s:3:"300";s:6:"height";s:3:"114";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ImageResizer2.0rc2-jun-3-Trial</title>
		<link>http://nathanaeljones.com/199/demo-version-of-image-resizing-module/imageresizer2-0rc2-jun-3-trial/</link>
		<pubDate>Tue, 27 Oct 2009 20:49:07 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://nathanaeljones.com/wp-content/uploads/2009/05/ImageResizer2.0rc2-jun-3-Trial.zip</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>413</wp:post_id>
		<wp:post_date>2009-10-27 16:49:07</wp:post_date>
		<wp:post_date_gmt>2009-10-27 20:49:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>imageresizer2-0rc2-jun-3-trial</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>199</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nathanaeljones.com/wp-content/uploads/2009/05/ImageResizer2.0rc2-jun-3-Trial.zip</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/05/ImageResizer2.0rc2-jun-3-Trial.zip]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Portfolio</title>
		<link>http://nathanaeljones.com/?page_id=415</link>
		<pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://nathanaeljones.com/?page_id=415</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>415</wp:post_id>
		<wp:post_date>2009-11-03 08:39:15</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Portfolio</title>
		<link>http://nathanaeljones.com/?page_id=416</link>
		<pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://nathanaeljones.com/?page_id=416</guid>
		<description></description>
		<content:encoded><![CDATA[<div class="project>
Heuristic audio pattern recognition system in Python

"Parses" the waveform data of an audio file using a combination of LMS and probability heuristics to locate beeps within an audio recording.
</div>

<div>
Early 2004
ServerLogger
MS SQL-backed issue tracker for servers, with searching and streamlined interface.
Asynchronous event log collection from network servers - allowed easy conversion of a server error into an TODO item. 

Development time: 2 weeks.
MS SQL, .NET, WinForms
</div>

<div>
Nevada Law - Heuristic text processing, information retrieval - Computer assisted repair of OCR errors on a massive text database.

Regular Expressions, 
</div>

<div>
ShowYourHome.com

Query parser and search engine.

Google and Microsoft Maps integration

Data feed integration (Streaming XML decompression and import to SQL)

----


Folio Integrator - C# wrapper for C API of Folio Integrator. Extremely advanced Interop P/Invoke code.


--- 

Zero -day analysis of NMIDAHEMA virus using IDA Pro, Boomerang. Two weeks prior to signature release or any documentation by security companies.

--

DhcpManager

HTA using OOJ, advanced output parsing, WScript, and the YUI library. Allows reservation management and replication across multiple DHCP servers. Turn a lease into a reservation in a couple clicks...

---

Folio Flat File to XML conversion through regular expressions.  99.99% perfect conversion using looped regular expressions. Proccessed several FFF files, totalling over 200MB of ext.

Superseded by the new Java compiler I wrote to allow additional flexibility and fuller support. 
---

ASP/HTML->ASP.NET markup translator, reference spider for upgrading to the FBS CMS..

---

Device driver for the X-KEYS foot pedal, .NET interface for application integration.

---
TagEdit

Command-line MP3 ID3 editor for batch processing of music files (very useful when reformatting of tag data is needed). 

--- 

Programmatically formatted large eBook collection for ETI-1 and ETI-2 eBook readers, with easy navigation headers and indexes.

- 

Character set converter (VB.NET)

Allows conversion between custom 8-bit character sets using simple mapping files.

--

acrobatHtmlImport - Simple HTML parser designed for Acrobat's "Save as HTML" feature. 

Written in Action Script 3.

--

IIS work for State Farm Agents website

--

Integration, modification of Yet Another Forum framework.

--

micomments.com  Embeddable comment widget for your website.

Python/Django.

Yep, intensedebate beat me to release date, with more features, more advertising, and more developers. I'm a good sport. 
---

Flash-based RSS ticker component

---

Flex-based Music uploading and tagging interface with album art uploading. 

---

SuperCopy

---
Quick Key

---

FBS - File Based cmS... With a database cache to combine the best of both worlds.
User has the freedom to use desktop WYSIWYG tools like Expression Web and Dreamweaver to edit articles and pages, while still retaining the ability to make spelling corrections from any iPhone or web browser.

---

sIFR work on NewsWeek

---

Joomla menu plugin modifications  (PHP and advanced javascript/CSS)








]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>416</wp:post_id>
		<wp:post_date>2009-11-03 14:47:52</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>89</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[page-full-portfolio.php]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ImageResizer2.1b-Nov-3-09-Trial-Version</title>
		<link>http://nathanaeljones.com/?attachment_id=445</link>
		<pubDate>Sat, 14 Nov 2009 00:21:10 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://nathanaeljones.com/wp-content/uploads/2009/11/ImageResizer2.1b-Nov-3-09-Trial-Version.zip</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>445</wp:post_id>
		<wp:post_date>2009-11-13 19:21:10</wp:post_date>
		<wp:post_date_gmt>2009-11-14 00:21:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>imageresizer2-1b-nov-3-09-trial-version</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nathanaeljones.com/wp-content/uploads/2009/11/ImageResizer2.1b-Nov-3-09-Trial-Version.zip</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/11/ImageResizer2.1b-Nov-3-09-Trial-Version.zip]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>2_computers</title>
		<link>http://nathanaeljones.com/?attachment_id=456</link>
		<pubDate>Mon, 16 Nov 2009 12:26:54 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://nathanaeljones.com/wp-content/uploads/2009/11/2_computers.gif</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>456</wp:post_id>
		<wp:post_date>2009-11-16 07:26:54</wp:post_date>
		<wp:post_date_gmt>2009-11-16 12:26:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>2_computers</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nathanaeljones.com/wp-content/uploads/2009/11/2_computers.gif</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2009/11/2_computers.gif]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";s:3:"107";s:6:"height";s:2:"35";s:14:"hwstring_small";s:23:"height='35' width='107'";s:4:"file";s:23:"2009/11/2_computers.gif";s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ImageResizerTrial2.6-nov-11-2010</title>
		<link>http://nathanaeljones.com/?attachment_id=503</link>
		<pubDate>Thu, 11 Nov 2010 21:36:48 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://nathanaeljones.com/wp-content/uploads/2010/11/ImageResizerTrial2.6-nov-11-2010.zip</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>503</wp:post_id>
		<wp:post_date>2010-11-11 16:36:48</wp:post_date>
		<wp:post_date_gmt>2010-11-11 21:36:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>imageresizertrial2-6-nov-11-2010</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nathanaeljones.com/wp-content/uploads/2010/11/ImageResizerTrial2.6-nov-11-2010.zip</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/ImageResizerTrial2.6-nov-11-2010.zip]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ImageResizerTrial2.6-nov-11-2010</title>
		<link>http://nathanaeljones.com/?attachment_id=504</link>
		<pubDate>Thu, 11 Nov 2010 21:37:18 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://nathanaeljones.com/wp-content/uploads/2010/11/ImageResizerTrial2.6-nov-11-20101.zip</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>504</wp:post_id>
		<wp:post_date>2010-11-11 16:37:18</wp:post_date>
		<wp:post_date_gmt>2010-11-11 21:37:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>imageresizertrial2-6-nov-11-2010-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nathanaeljones.com/wp-content/uploads/2010/11/ImageResizerTrial2.6-nov-11-20101.zip</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2010/11/ImageResizerTrial2.6-nov-11-20101.zip]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>web.config</title>
		<link>http://nathanaeljones.com/573/combining-jcrop-and-server-side-image-resizing/web-config/</link>
		<pubDate>Mon, 30 May 2011 21:14:53 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://nathanaeljones.com/wp-content/uploads/2011/05/web.config.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>574</wp:post_id>
		<wp:post_date>2011-05-30 17:14:53</wp:post_date>
		<wp:post_date_gmt>2011-05-30 21:14:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>web-config</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>573</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nathanaeljones.com/wp-content/uploads/2011/05/web.config.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/05/web.config.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"540";s:6:"height";s:3:"303";s:14:"hwstring_small";s:23:"height='71' width='128'";s:4:"file";s:22:"2011/05/web.config.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:3:{s:4:"file";s:22:"web.config-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:22:"web.config-300x168.png";s:5:"width";s:3:"300";s:6:"height";s:3:"168";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>massive-dynamic-resume</title>
		<link>http://nathanaeljones.com/602/massive-dynamic-hasnt-responded/massive-dynamic-resume/</link>
		<pubDate>Fri, 05 Aug 2011 15:28:38 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://nathanaeljones.com/wp-content/uploads/2011/08/massive-dynamic-resume.pdf</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>603</wp:post_id>
		<wp:post_date>2011-08-05 11:28:38</wp:post_date>
		<wp:post_date_gmt>2011-08-05 15:28:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>massive-dynamic-resume</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>602</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nathanaeljones.com/wp-content/uploads/2011/08/massive-dynamic-resume.pdf</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2011/08/massive-dynamic-resume.pdf]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>The Ideal Language</title>
		<link>http://nathanaeljones.com/?p=48</link>
		<pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://computerlinguist.wordpress.com/?p=48</guid>
		<description></description>
		<content:encoded><![CDATA[Documentation as data.

Metadata as data

Functions as objects

code is data]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>48</wp:post_id>
		<wp:post_date>2008-11-14 17:39:47</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Add a &#039;once&#039; feature to your language</title>
		<link>http://nathanaeljones.com/?p=50</link>
		<pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://computerlinguist.wordpress.com/?p=50</guid>
		<description></description>
		<content:encoded><![CDATA['once' is a feature that makes a method callable... once. Subsequent calls are cached.

 

Javascript:

Actionscript 2:

Actionscript 3:

Python:

Ruby:

Clojure:

C#... wait... you'll need a delegate for each function type! Sorry...

Java... sorry]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>50</wp:post_id>
		<wp:post_date>2008-11-11 09:50:14</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[4794681]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Never use IDs in your CSS</title>
		<link>http://nathanaeljones.com/?p=53</link>
		<pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://computerlinguist.wordpress.com/?p=53</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>53</wp:post_id>
		<wp:post_date>2008-11-13 09:09:59</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[4794681]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Document smart, not long</title>
		<link>http://nathanaeljones.com/?p=64</link>
		<pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://computerlinguist.wordpress.com/?p=64</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>64</wp:post_id>
		<wp:post_date>2008-11-13 09:10:50</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[4794681]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Want to be more effective? Learn typography.</title>
		<link>http://nathanaeljones.com/?p=65</link>
		<pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://computerlinguist.wordpress.com/?p=65</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>65</wp:post_id>
		<wp:post_date>2008-11-13 09:16:52</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[4794681]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Do you hear laughter when you write code?</title>
		<link>http://nathanaeljones.com/?p=70</link>
		<pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://computerlinguist.wordpress.com/?p=70</guid>
		<description></description>
		<content:encoded><![CDATA[<span class="Apple-style-span" style="border-collapse:separate;color:#444444;font-family:arial;font-size:15px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:18px;orphans:2;text-indent:0;text-transform:none;widows:2;word-spacing:0;">All languages are easy if you understand the general superset of programming concepts. If you don't 'get' the 5 basic problem-solving approaches (functional, object-oriented, imperative, reflective, dynamic (yes, dynamic is also an approach)), then you are definitely writing ineffective code, because *every* application of even moderate size needs a combination of all of these.  Usually the easiest way to learn these concepts is to learn languages that are focused around each of them. Most programmers already think in object-oriented imperative mode, but few seem to realize that the other approaches are a cleaner, better choice 50% of the time.  To sum up - keep learning languages until it becomes easy. Then you have the basic concepts. After that - continue to languages, because it will make you a better programmer. Trying to work without all 5 in your toolbox is like trying to build a house without a hammer or saw. Yeah, you can do it. But you're not being very effective and all the other builders are laughing at you.</span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>70</wp:post_id>
		<wp:post_date>2008-11-20 07:19:38</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[4794681]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Boot Camp, the hybrid GPT/MBR , and what *NOT* to do</title>
		<link>http://nathanaeljones.com/?p=72</link>
		<pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://computerlinguist.com/?p=72</guid>
		<description></description>
		<content:encoded><![CDATA[I have a MacBook Pro with a 320GB drive (300GiB). I have OS X installed on the first 150GiB, Vista on the next 100GiB, and Ubuntu on the last 50GiB.

My drive started the click of death about a month ago, and I started seeing system freezes. I backed everything up in a hurry and left on vacation. I'm back now, and I have a brand new 500GB drive to replace it with.

So... now the question is how to move my partitions over the the new drive and expand my OS X partition.

SRC

&gt; dd_rescue /dev/sda /dev/sdb - Note, the GPT will have incorrect information about the drive's size. No tools will work until this is fixed.

&gt; wizard

&gt;terminal

&gt;parted

&gt;print

&gt;type "fix" when prompted to fix the GPT

&gt; Click GParted

Click the last 3 partitions (including linux swap)

copy the value from Free Space Following into Free Space Preceding, click Free Space Following to make it enter 0, and click Move

If you have any filesystem errors on any of the drives (I did on the NTFS parition), GParted will stop right there (it works on the partitions right-to-left).

My solution was to delete the NTFS partition and create a new one where I wanted it moved to. I then used dd_rescue again to copy the filesystem over again for just that partition.

Unfortunately, creation occurred before the deletion, and got numbered 6 instead of 3 in the partition table. Therefore gptsync (part of rEFIt) wouldn't put it in the MBR.

So... I opened GParted, wrote down the start/end sector numbers, and deleted it. I then opened parted from the command line and ran

mkpart primary ntfs 651612465s 865052054s  (the Ss are needed to tell it we are using sectors).

At which point it reappeared as sd3 again... yay.

I ran gptsync from rEFIt, and it now made it into the top-4 list for the MBR... however, it was marked as C0 (unknown) instead of 07 (NTFS/HPFS) And the asterisk was on the linux partition instead of the ntfs partition.

Since rEFIt is directing the partition to boot from, it still would probably been fine... except for the Vista's boot configuration store.

Attempts to boot resulted in "An error occurred while attempting to read the boot configuration data."

Like this guy's attempts: <a href="http://dreamlayers.blogspot.com/2008/02/manually-moving-vista-ntfs-partition.html">http://dreamlayers.blogspot.com/2008/02/manually-moving-vista-ntfs-partition.html</a>

heat related lock-ups?

In addition, I needed to mark it as a system boot partition.

<a href="http://dreamlayers.blogspot.com/2008/02/manually-moving-vista-ntfs-partition.html">http://dreamlayers.blogspot.com/2008/02/manually-moving-vista-ntfs-partition.html</a>

Don't spend $49 on Acrons Disk Director. It locks up at the boot menu on my MacBook Pro with bootcamp installed.

Dont's spend $69 on Symantec Partition Magic. Don't ever boot from the Partition Magic 8 disk with boot camp installed. It automagically destroys the hybrid gpt/mbr without any user intervention. OS X may repair your first partition, but you'll probably have to use forensic tools to find the geometry for the remainder.

If you're interested in more than your OS X partition, don't use CarbonCopyCloner or probably any other desktop-based tool to clone your drive. I don't believe any currently exist to handle a

Use those nice free bootable linux CDs. You'll have to run rEFIt parition sync (if you're doing a 3-way bootcamp you probably already installed it), or use gptsync afterwards. Clonezilla and SystemRestoreCD both include dd_rescue, which is by far the simplest way to clone one drive to another. It's pretty fast, even over a USB link. Expect 2-3 hours for a 320MB system.
<h2>Fixing the partition offset</h2>
I tried 0xED and HexFiend, nether allowed direct disk editing.

So... thankfully it's easy to copy a section of the hard disk to a file

I executed "sudo dd if=/dev/disk0s3 count=500 of=vistabootpart"

Which placed a vistabootpart file in my home directory with 250KiB  of the 3rd partition (2nd if you don't count the EFI partition) on my first hard drive.

I then opened it up in OxED and selected 4 bytes starting at 1C.

The 32-but signed value is the number you're looking at - this should match the sector offset of the partition. Mine was 314982440/0x2840C612

I changed it to 651612465, the new location of the partition.

To save the file, I first had to change permissions (Cmd+I in finder), unlock, and give staff and everyone read/write instead of just read. I think this is because I used sudo to write the file under elevated priviledges (which are required for disk-level access).

I then ran dd again, just switching if and of:

sudo dd if=vistabootpart count=500 of=/dev/disk0s3

After this, Vista appeared to start booting up.... then croaked "autochk not found - AUTOCHK program" and subsequently bluescreened.

Reading http://www.pcguide.com/vb/showthread.php?t=45339

led me to believe this was because I wasn't able to choose the right partition type in the GPT (and subsequently the MBR).

Orginially the GPT type was Basic Data and the MBR type was 0x07 NTFS/HPFS - however, recreating in parted changed it to MS Reserved 0xC0.

Running the Vista repair disk marked the partition active.

I'm tired of rebooting by now, so I found an OS X version of gptsync

http://netkas.org/?p=39

Download http://rapidshare.com/files/73933573/gptsync_tools.zip.html

I dropped the executables in my home directory.

I ran "sudo ./showpart /dev/disk0" to see my gpt and mbr tables.

MS Reserved is getting translated to 0xC0....

Which I think is being interpreted as a hidden partiton by Vista, causing my boot problems.

According to http://en.wikipedia.org/wiki/GUID_Partition_Table

MS Reserved = E3C9E316-0B5C-4DB8-817D-F92DF00215AE

Basic Data Partition = <span> </span>EBD0A0A2-B9E5-4433-87C0-68B6B72699C7

So... I'm going to head back to the System Rescue CD and see if I can fix this...
GPT

1     40    409639 EFI System (FAT)
2    409640    314720295 Mac OS X HFS+
3    314982440    510296893 Basic Data
4    510296894    613812519 Basic Data (ext3)
5    613812520    623578145 Linux Swap

MBR

1    1    409638    EE    EFI Protective
2    409640    314720295 AF Mac OS X HFS+
3 *    314982440    510296893    07 NTFS/HPFS
4    510296894    613812519 83 Linux

moved NTFS to

651612465
865052054

total sectors =
976768065
sectors per MB = 1953536130

parted

select /dev/sda
unit s

rm 3

mkpart basicdata 651612465s 865052054s

reboot (shutdown -h now)

rEFIt, gptsync

Fixed to 0x07, and maintained active flag on MBR

---

Windows failed to start.  Repair your computer

Windowssystem32winload.exe
0xC000000e
The selected entry could not be loeaded because the applicaiton is missing or corrupt.

---

Trying to boot from the vista disk generated the same error...

http://www.multibooters.co.uk/cloning.html
http://www.multibooters.co.uk/mbr.html

Sounds like it's time for me to get BartPE+Partition saving running..
Grabbed my XPSP2 disk... so far it's building away... downloading partsaving and added it as a plugin.
I burned the resulting ISO with InfraRecorder... and viola! it booted.

BartPE ran great - partition saving allowed me to edit the Vista Boot Configuration on paritition 3 and edit all the BCD entries to point to the right sectors.

Didn't help, even though some wrong.

I held down the option key while booting, and booted the vista DVD that way... seemed to work. Not sure why rEFIt stopped working....

I hit repair and Vista detected a problem with my startup partition. Repair and restart solved the problem with winload.exe!

Yahoo!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>72</wp:post_id>
		<wp:post_date>2010-05-10 18:02:12</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="computerlinguist-com"><![CDATA[computerlinguist.com]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_f49fed7ca18012ed66ad8b6e4c55685e</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_ac62b1af8ac25ca01c8752a2d073a79b</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_5e108e0f304576adb6627cca16eb74b8</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Attaching source code to a gumbo beta</title>
		<link>http://nathanaeljones.com/?p=75</link>
		<pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://computerlinguist.com/?p=75</guid>
		<description></description>
		<content:encoded><![CDATA[Project Properties -&gt;Flex Build Path &gt;Library Path &gt; Flex 4.0.0.4496&gt; flex4.swc&gt; Attached Source &gt; browse to frameworks/projects/flex4/src]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>75</wp:post_id>
		<wp:post_date>2009-10-19 22:49:36</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="computerlinguist-com"><![CDATA[computerlinguist.com]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[4794681]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Spaced repetition learning systems for the iPhone/iPod touch</title>
		<link>http://nathanaeljones.com/?p=77</link>
		<pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://computerlinguist.com/?p=77</guid>
		<description></description>
		<content:encoded><![CDATA[[What is spaced repition]

[forgetting curve]

[spacing algorithms]

[apps]

iFlash

http://www.loopware.com/iflash/

iFlipr

http://iflipr.com/

iFlipr originally had a lackluster design, but the current version is very streamlined and had tons of italian content.

http://cognitionapp.com/

http://forums.macrumors.com/showthread.php?t=474939]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>77</wp:post_id>
		<wp:post_date>2009-10-19 22:49:36</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="computerlinguist-com"><![CDATA[computerlinguist.com]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[4794681]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>The 404 hack</title>
		<link>http://nathanaeljones.com/?p=96</link>
		<pubDate>Thu, 08 May 2008 20:15:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/?p=96</guid>
		<description></description>
		<content:encoded><![CDATA[http://msmvps.com/blogs/omar/archive/2007/04/29/serve-extensionless-url-from-asp-net-without-using-isapi-module-or-iis-6-wildcard-mapping.aspx
<a href="IISString.cs.txt" runat="server">IISString.cs.txt</a>


For 404 logging...]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>96</wp:post_id>
		<wp:post_date>2008-05-08 16:15:00</wp:post_date>
		<wp:post_date_gmt>2008-05-08 20:15:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-404-hack</wp:post_name>
		<wp:status>pending</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>url</wp:meta_key>
			<wp:meta_value><![CDATA[10921_The_404_hack]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>HtmlAnchor control mangles href attribute</title>
		<link>http://nathanaeljones.com/?p=100</link>
		<pubDate>Fri, 09 May 2008 09:23:53 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/?p=100</guid>
		<description></description>
		<content:encoded><![CDATA[I am running into an issue with the HtmlAnchor class. I have &lt;xhtmlConformance mode="Strict"/>, but it is not helping.

 

In my .aspx page, I have the following literal code, which is valid X/HTML:

 

&lt;a href="http://branham.org/BranhamDefault.asp?Home=VGR&amp;LoadPageDetail=VGR.htm" >

 

When I add the runat=”server” attribute, an HtmlAnchor object is created, and the attribute values are decoded.

 

&lt;a href="http://branham.org/BranhamDefault.asp?Home=VGR&amp;LoadPageDetail=VGR.htm" runat="server">

 

When this HtmlAnchor object is rendered, it generates the following invalid markup.

 

&lt;a href="http://branham.org/BranhamDefault.asp?Home=VGR&LoadPageDetail=VGR.htm">

 

The parsing code HtmlDecodes the &amp; entity, but the HtmlAnchor failes to re-encode (HtmlAttributeEncode) the href attribute when it is rendered.

 

I can patch this with a control adapter, but I’m wondering why this behavior is default? The Hyperlink control handles this situation correctly (and renders &amp; regardless of input).

 

Best Regards,
Nathanael Jones
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>100</wp:post_id>
		<wp:post_date>2008-05-09 05:23:53</wp:post_date>
		<wp:post_date_gmt>2008-05-09 09:23:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>htmlanchor-control-mangles-href-attribute</wp:post_name>
		<wp:status>pending</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>url</wp:meta_key>
			<wp:meta_value><![CDATA[10991_HtmlAnchor_control_mangles_href_attribute]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Basic SEO you should know</title>
		<link>http://nathanaeljones.com/?p=103</link>
		<pubDate>Fri, 09 May 2008 21:34:13 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/?p=103</guid>
		<description></description>
		<content:encoded><![CDATA[Google Sandbox

The domain, the url, the title tag.

The text between <a> and <a/> MATTERS. 

Pick one keyword, stick with it!
]]></content:encoded>
		<excerpt:encoded><![CDATA[	
One of the most critical steps in designing a web site is choosing your URI structure for the site. Clean, friendly URIs make visitors more comfortable and help them keep track of where they are on the site.]]></excerpt:encoded>
		<wp:post_id>103</wp:post_id>
		<wp:post_date>2008-05-09 17:34:13</wp:post_date>
		<wp:post_date_gmt>2008-05-09 21:34:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>basic-seo-you-should-know</wp:post_name>
		<wp:status>pending</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>url</wp:meta_key>
			<wp:meta_value><![CDATA[11001_Basic_SEO_you_should_know]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ToBlog</title>
		<link>http://nathanaeljones.com/?p=110</link>
		<pubDate>Mon, 05 May 2008 14:35:20 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/?p=110</guid>
		<description></description>
		<content:encoded><![CDATA[	
Control.ParseControl
Understands directives
Web.config include/namespaces

<br/>

http://blogs.msdn.com/tess/archive/2009/02/03/net-memory-leak-to-dispose-or-not-to-dispose-that-s-the-1-gb-question.aspx


<pre>

________________________________
From: Matt Gibbs [Matt.Gibbs@microsoft.com]
Sent: Tuesday, October 16, 2007 2:11 AM
To: Nathanael Jones
Cc: Scott Guthrie; Stefan Schackow
Subject: RE: Path resolution in .ascx User Controls versus App_Code

Thanks Nathanael.  This feedback is great.  We�re looking at this overall problem for out next release.  I�ve included Stefan on my reply as he is working to coordinate the efforts of the team for our next major release.

From: Nathanael Jones [mailto:nathanael@branham.org]
Sent: Thursday, October 11, 2007 2:37 PM
To: Matt Gibbs
Cc: Scott Guthrie
Subject: RE: Path resolution in .ascx User Controls versus App_Code

Wonderful! I�m glad future developers will have an easier time of it.

I had to spend about 8 months finding hacks to make ASP.NET 2.0 behave like a good web site framework.
On the plus side, I got to know the System.Web disassembly by heart :)

I�ve listed a few of the things I had to �add� to make ASP.NET usable for our scenario. From reading lots of blogs, I don�t think it�s very unusual.
Hope this helps you in designing the next version (or the next project template :))

I use:

 1.  A �yrl� class that represents an application-relative virtual path.
-       It can construct itself from a physical path, absolute path, root relative, or application-relative path.
-       It can output URLs or URL-Encoded URLs with and without the querystring, and in several forms:
                                                               i.      NavigateUrl-compatible strings
                                                              ii.      root-relative
                                                            iii.      application relative
                                                            iv.      application relative (without ~/) (default)
                                                              v.      physical path
-       It lets me manipulate the query string, extension, and name programmatically.
-       It has DirExists, FileExists, Parent, and Root properties.

 1.  A subclass of Page that:
-       Self-parses LiteralControl instances and transforms literal <meta>, <link>, and <script> elements into their proper control instances. This fixes the ContentPlaceHolder inside <head> bug, and allows metadata, stylesheet references, and scripts inside content pages.
-       Remembers the original referrer across post-backs
-       Can use a different master page at runtime if the RuntimeMasterPage attribute is specified
-       Allows meta tags to be manipulated at runtime.
-       Allows stylesheets to be (easily) added/modified at runtime.
-       Hides meta tags that are on a �hidden� list
-       Resolves urls in <script type=�text/javascript� src=��� > elements.
-

 1.  A CustomDefaultHandler that sends content-disposition: attachment along with any request that has ?download=true in the query string.


 1.  A dynamic image resizing/recompressing handler with disk caching. Ex. Landscape.jpg?thumbnail=jpg&maxwidth=300&maxheight=300 will return a resized version of Landscape.jpg.


 1.  A xml-based control theming system (I originally used Themes in stylesheet mode, but that stops us from editing anything in Expression Web)


 1.  The UrlRewritingNet module for url rewriting (really nice)
-       I also have a rewrite simulator so I can translate rewritten referrer paths to true paths. (UrlRewritingNet doesn�t expose an interface for rewriting a URL arbitrarily)


 1.  HtmlAnchor and Hyperlink control adapters to programmatically  use SEO-friendly versions of URIs (expanded links with titles are cached for performance)
-       Wish this was a module�


 1.  I have a custom error handler (NOT the custom errors feature), that allows me to view errors when I am logged in as an admin through the membership database.
-       It does NOT redirect, like CustomErrors, but uses Server.Transfer. I absolutely hate it when I mistype a URL, and I am redirected to 404.html. I then have to retype the entire thing!
-

 1.  I have a Sql layer that lets me copy and paste the current query into Management Studio for debugging.
-       It combines the command string with Declare and Set statements for each parameter.
                                                               i.      Wouldn�t it be nice if SqlCommand.ToString() did this? I could just hover over the instance, and copy the SQL out of the text viewer.
                                                              ii.      (P.S. keyboard shortcuts CTRL-A and CTRL-C don�t work in the VS2005 text viewer)
-       It also times each query and outputs trace statements for it (great for debugging performance issues)
                                                               i.      Wouldn�t that be a nice setting?


 1.  A custom event logging/reporting/emailing system that uses similar event rollup to stop inbox flooding. (The standard event logging model is worthless on the web)
 2.  I have an XSLT layer that uses the virtual path provider system to translate .xml.aspx files into valid .aspx files ready for the build system.


 1.  The CSS Friendly control adapter for the Login control. (I avoid all the other controls there are CSS adapters for)

Settings

 1.  compilation batch=�false� (To avoid circular dependency issues)
 2.  encoding=�utf-8� on everything
 3.  xhtmlConformance mode="Strict"
 4.  customerrors=�remoteonly�
 5.  * to aspnet_isapi.dll
 6.  default documents disabled

Controls

 1.  A custom Audio file player control
 2.  A custom Flash container control
 3.  A custom javascript-based tree/grid contro
-       Data rendered in JSON to cut row size by 800%
-       Client-side selection and group expansion
-       Selection persistence.

 1.  A custom image control wrapping highslide<http://vikjavev.no/highslide/>

I haven�t solved
-       Extremely long rendered IDs (often 60+ characters)
-       what do you think about optionally using the base64 hashcode instead?
-       And making it optional � only render an ID if an ID is specified in the .aspx file, or if it is a control that requires an ID.
-       Getting ClientBuildManager to work on IIS6 � guess it�s a priviledge issue.
-       I have a precompile.aspx page that allows me to remotely compile the site (to eliminate the on-demand compilation hit). However, it only works on by IIS5 dev box.
-       I don�t use VJ#, but I get an error identical to http://www.velocityreviews.com/forums/t370413-precompile.html if I don�t have the J#
-       VS2005�s background intellisense population locks up the entire interface periodically when I�m editing a large web site.
-       How can I compress WebResource.axd javascript if I don�t have a hosting service that will enable GZIP?


Hope this helps,
Nathanael Jones

________________________________
From: Matt Gibbs [mailto:Matt.Gibbs@microsoft.com]
Sent: Thursday, October 11, 2007 2:42 PM
To: Nathanael Jones
Cc: Scott Guthrie
Subject: RE: Path resolution in .ascx User Controls versus App_Code

Yes, URL re-writing and related issues are a big priority.  And CSS hasn�t been embraced adequately in the past.  We also recognize the need to make things more lightweight.  You�ve got some good insight into priorities we have heard voiced from developers.

From: Nathanael Jones [mailto:nathanael@branham.org]
Sent: Thursday, October 11, 2007 11:39 AM
To: Matt Gibbs
Cc: Scott Guthrie
Subject: RE: Path resolution in .ascx User Controls versus App_Code

At least it is being considered. I really hope that path resolution/modification/rewriting gets a lot more attention in the next version.
(can we have a VirtualPath class, too? I plead discrimination against external assemblies :))

BTW, are you targeting the next version of ASP.NET more towards intranet web applications or towards internet web sites?  I really have to wrestle with ASP.NET 2.0 to trim down page output and avoid postbacks and viewstate. External CSS really seems like a second-class citizen.

Thanks,
Nathanael

________________________________
From: Matt Gibbs [mailto:Matt.Gibbs@microsoft.com]
Sent: Thursday, October 11, 2007 2:16 PM
To: Nathanael Jones
Cc: Scott Guthrie
Subject: RE: Path resolution in .ascx User Controls versus App_Code

Specifically enabling user controls to be resident-filepath agnostic hasn�t been a high priority, but is part of larger goal for making user controls and regions of a page addressable and portable.  Sorry I can�t commit to specifics, we�re just at the planning stage at this point for v-Next.

From: Nathanael Jones [mailto:nathanael@branham.org]
Sent: Thursday, October 11, 2007 4:20 AM
To: Matt Gibbs
Cc: Scott Guthrie
Subject: RE: Path resolution in .ascx User Controls versus App_Code

That should work� We�ll give it a try.

So, is this �feature� on the radar for next version?

Thanks,
Nathanael

________________________________
From: Matt Gibbs [mailto:Matt.Gibbs@microsoft.com]
Sent: Wednesday, October 10, 2007 7:03 PM
To: Nathanael Jones; Scott Guthrie
Subject: RE: Path resolution in .ascx User Controls versus App_Code

I guess the control could be a placeholder and contain what was originally in the control as children.

From: Nathanael Jones [mailto:nathanael@branham.org]
Sent: Wednesday, October 03, 2007 10:19 AM
To: Matt Gibbs; Scott Guthrie
Subject: RE: Path resolution in .ascx User Controls versus App_Code

Thank you for taking a look at this issue.

That workaround isn�t feasible in our scenario � we have thousands of .aspx files in our project, and adding placeholders around each custom control isn�t possible. If we did succeed in wrapping every instance of every custom control, the team couldn�t remember to do it every time in the future.

Do you have any solutions that can be implemented control-side?

Thanks,
Nathanael


________________________________
From: Matt Gibbs [mailto:Matt.Gibbs@microsoft.com]
Sent: Tuesday, September 25, 2007 12:55 AM
To: Nathanael Jones; Scott Guthrie
Subject: RE: Path resolution in .ascx User Controls versus App_Code

The APIs assume that relative paths are in the context of the location of the user control, which is based on file location.  It is too late in this release to get new functionality like this in but there is a workaround you can use.  If you put the user control inside a placeholder, then AppRelativeTemplateSourceDirectory of the Parent property will resolve in the context of the container as opposed to the user control.

From: Nathanael Jones [mailto:nathanael@branham.org]
Sent: Thursday, September 20, 2007 12:14 PM
To: Scott Guthrie
Cc: Matt Gibbs
Subject: RE: Path resolution in .ascx User Controls versus App_Code

I�ve been doing some additional research since I sent the e-mail, and a believe that a little more auto-generated code would be needed for option #2:

System.Web.UI.Control defines this internal method


internal virtual TemplateControl<http://www.aisto.com/roeder/dotnet/Default.aspx?Target=code://System.Web:2.0.0.0:b03f5f7f11d50a3a/System.Web.UI.TemplateControl> GetTemplateControl<http://www.aisto.com/roeder/dotnet/Default.aspx?Target=code://System.Web:2.0.0.0:b03f5f7f11d50a3a/System.Web.UI.Control/GetTemplateControl():System.Web.UI.TemplateControl>()

{

    if ((this._templateControl<http://www.aisto.com/roeder/dotnet/Default.aspx?Target=code://System.Web:2.0.0.0:b03f5f7f11d50a3a/System.Web.UI.Control/_templateControl:System.Web.UI.TemplateControl> == null) && (this.Parent<http://www.aisto.com/roeder/dotnet/Default.aspx?Target=code://System.Web:2.0.0.0:b03f5f7f11d50a3a/System.Web.UI.Control/property:Parent:System.Web.UI.Control> != null))

    {

        this._templateControl<http://www.aisto.com/roeder/dotnet/Default.aspx?Target=code://System.Web:2.0.0.0:b03f5f7f11d50a3a/System.Web.UI.Control/_templateControl:System.Web.UI.TemplateControl> = this.Parent<http://www.aisto.com/roeder/dotnet/Default.aspx?Target=code://System.Web:2.0.0.0:b03f5f7f11d50a3a/System.Web.UI.Control/property:Parent:System.Web.UI.Control>.GetTemplateControl<http://www.aisto.com/roeder/dotnet/Default.aspx?Target=code://System.Web:2.0.0.0:b03f5f7f11d50a3a/System.Web.UI.Control/GetTemplateControl():System.Web.UI.TemplateControl>();

    }

    return this._templateControl<http://www.aisto.com/roeder/dotnet/Default.aspx?Target=code://System.Web:2.0.0.0:b03f5f7f11d50a3a/System.Web.UI.Control/_templateControl:System.Web.UI.TemplateControl>;

}




System.Web.UI.TemplateControl overrides it:


internal override TemplateControl<http://www.aisto.com/roeder/dotnet/Default.aspx?Target=code://System.Web:2.0.0.0:b03f5f7f11d50a3a/System.Web.UI.TemplateControl> GetTemplateControl<http://www.aisto.com/roeder/dotnet/Default.aspx?Target=code://System.Web:2.0.0.0:b03f5f7f11d50a3a/System.Web.UI.TemplateControl/GetTemplateControl():System.Web.UI.TemplateControl>()

{

    return this;

}




I think that it would need to be overridden once again for everything to work smoothly.


internal override TemplateControl<http://www.aisto.com/roeder/dotnet/Default.aspx?Target=code://System.Web:2.0.0.0:b03f5f7f11d50a3a/System.Web.UI.TemplateControl> GetTemplateControl<http://www.aisto.com/roeder/dotnet/Default.aspx?Target=code://System.Web:2.0.0.0:b03f5f7f11d50a3a/System.Web.UI.Control/GetTemplateControl():System.Web.UI.TemplateControl>()

{

    if ((this._templateControl<http://www.aisto.com/roeder/dotnet/Default.aspx?Target=code://System.Web:2.0.0.0:b03f5f7f11d50a3a/System.Web.UI.Control/_templateControl:System.Web.UI.TemplateControl> == null) && (this.Parent<http://www.aisto.com/roeder/dotnet/Default.aspx?Target=code://System.Web:2.0.0.0:b03f5f7f11d50a3a/System.Web.UI.Control/property:Parent:System.Web.UI.Control> != null))

    {

        this._templateControl<http://www.aisto.com/roeder/dotnet/Default.aspx?Target=code://System.Web:2.0.0.0:b03f5f7f11d50a3a/System.Web.UI.Control/_templateControl:System.Web.UI.TemplateControl> = this.Parent<http://www.aisto.com/roeder/dotnet/Default.aspx?Target=code://System.Web:2.0.0.0:b03f5f7f11d50a3a/System.Web.UI.Control/property:Parent:System.Web.UI.Control>.GetTemplateControl<http://www.aisto.com/roeder/dotnet/Default.aspx?Target=code://System.Web:2.0.0.0:b03f5f7f11d50a3a/System.Web.UI.Control/GetTemplateControl():System.Web.UI.TemplateControl>();

    }

    return this._templateControl<http://www.aisto.com/roeder/dotnet/Default.aspx?Target=code://System.Web:2.0.0.0:b03f5f7f11d50a3a/System.Web.UI.Control/_templateControl:System.Web.UI.TemplateControl>;
}


Thanks,
Nathanael

________________________________
From: Scott Guthrie [mailto:scottgu@microsoft.com]
Sent: Thursday, September 20, 2007 2:03 PM
To: Nathanael Jones; Matt Gibbs
Subject: RE: Path resolution in .ascx User Controls versus App_Code

Hi Nathanael,

I�m looping Matt from the ASP.NET team to help comment on this. Matt � any ideas?

Thanks,

Scott

From: Nathanael Jones [mailto:nathanael@branham.org]
Sent: Wednesday, September 19, 2007 6:52 AM
To: Scott Guthrie
Subject: Path resolution in .ascx User Controls versus App_Code

Reviewing the feedback thread at https://connect.microsoft.com/VisualStudio/feedback/ViewFeedback.aspx?FeedbackID=273688, I believe that my original bug report was misunderstood, as it was classified as "adding functionality". At the time I was a little to busy to pursue the matter.

The following limitations eliminate any way to (inside a UC) resolve paths relative to the parent file (Another UC, Page, or MP).
This functionality is very important, since UC�s often need to resolve paths that are assigned as properties. In fact, I have more UCs that receive paths than UCs that don�t

-       In .ascx files, ResolveClientUrl() assumes that the input path is relative to the .ascx file (that�s by design)
-       In .ascx files, Parent.TemplateControl doesn�t refer to the the parent TemplateControl for the user control. That�s because master pages mess with the hierarchy, and Content controls somehow think that TemplateControl=MasterPage (it should be Page). So if a user control is placed directly in a Content section on a page, Parent.AppRelativeTemplateSourceDirectory will evaluate to the parent directory of the master page. I spent over a week trying to solve this one issue, and account for MasterPages messing up the hierarchy, but I never found a reliable way to do it.
-

Application-relative paths can still be used, but are fragile, and sensitive to directory renaming. Most paths (like images, css, slideshows, videos) are best expressed in relative form, because the two files are in the same directory and a relative path is much, much less fragile.


It's really easy to solve this problem on your end.

1) Add a new property to System.Web.UI.UserControl: ParentTemplateControl. This will refer to the template control actually hosting the control. We could then call ParentTemplateControl.ResolveUrl() when we need to do resolution on passed-in paths. This is the most flexible solution for the developer, as it allows them to resolve paths relative to the current control AND the parent control. The next solution is easier, though. Both would be nice.

2) Allow users to opt-out of 1 line of auto-generated code.

In the autogenerated constructor,  remove this line if ResolvePathsRelativeToParent=True in the Control directive.

((System.Web.UI.UserControl)(this)).AppRelativeVirtualPath = "~/cms/events/EventTable.ascx";


That's it. I think #2 would be the easiest option, and I suspect that it could be implemented in less that 2 hours of work.
It would save each ASP.NET developer a LOT more time that it would cost Microsoft to implement. How often do you get that sort of ROI?

Please, all we need is one(1) way to resolve paths that are relative to the parent file (UC, Page, or MP) from the child file (UC). I'm not picky...

But right now, .ascx files are NOT AN OPTION for anyone needing to pass paths into the user control.
It's not that I mind App_Code much, it's that less-experienced developers/designers need to modify my markup in the future. And App_Code isn't practical for them.

Thanks,
Nathanael Jones

</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>110</wp:post_id>
		<wp:post_date>2008-05-05 10:35:20</wp:post_date>
		<wp:post_date_gmt>2008-05-05 14:35:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>toblog</wp:post_name>
		<wp:status>pending</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>url</wp:meta_key>
			<wp:meta_value><![CDATA[11051_ToBlog]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Featured</title>
		<link>http://nathanaeljones.com/featured/</link>
		<pubDate>Sat, 24 Oct 2009 22:33:10 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://nathanaeljones.com/featured/</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>296</wp:post_id>
		<wp:post_date>2009-10-24 18:33:10</wp:post_date>
		<wp:post_date_gmt>2009-10-24 22:33:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>featured</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[page-full.php]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Roadmap and Architecture Design</title>
		<link>http://nathanaeljones.com/contact/roadmap-and-architecture-design/</link>
		<pubDate>Sat, 24 Oct 2009 23:36:45 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://nathanaeljones.com/?page_id=302</guid>
		<description></description>
		<content:encoded><![CDATA[<div style="font-size: 120%; font-family: Georgia; line-height: 1.8em;"><span style="font-size: 400%; font-weight: bold; float: left; line-height: .8em; padding-right: 5px; padding-top: 4px;">I</span>f you are embarking on a new project or looking to refactor an existing one, I can help you design a better architecture and roadmap for your project. I can help you choose the right frameworks and libraries to give your project a head start and a maintainable future.
<div style="width: 200px; float: right; padding: 10px; margin: 10px; border: 1px solid #aaaaaa; font-family: Verdana; color: #444444; font-size: 9pt;">Are you looking to improve the workflow of your software team? Want advice on choosing and configuring a server? Need a network designed? Building a business website? Intranet? A compiler for a new language? A revolutionary CMS? The next killer app? An iTunes alternative? A web browser? A better software deployment system? Need graphical design advice? Confused by a licensing issue?E-mail me with any problem, big or small. I don't have a problem with saying "I don't know". But I do have trouble resisting the urge to find the answer.

<strong>computer.linguist@gmail.com</strong>

</div>
Using existing, <em>quality</em> source code is <em>always cost effective</em>. If you are skeptical that code exists for your needs - what can you lose by sending me an e-mail? If I can't improve upon your plan, I'll tell you. <strong>What if I suggest a library that does everything you need, and is free? With over 3.3 billion lines of open source software, I suggest hiring a guide.</strong>

If you are considering outsourcing a project, it is even more critical that you get a report to base your project requirements on. Many outsourced projects turn into nightmares, not due to lack of coder intelligence, but architectural experience and unclear communication. With a solid plan for your project, you are much better prepared to face the ordeal of using vWorker, GetAFreeLancer, or any other outsourcing site.

<strong>Don't reinvent the wheel. Send me an e-mail. And find out how little code you actually have to write to accomplish your goals.</strong>

And, best of all - the dogfood guarantee. If you run into trouble using one of my designs, I'll support it at my normal hourly rate, no strings attached. I won't suggest a plan I can't code or troubleshoot.
<h3>I need to know</h3>
<ol>
	<li>What are your goals?</li>
	<li>What is your current plan?</li>
	<li>What is the state of the project now?</li>
</ol>
Once you have your goals set and ready to communicate them - <strong>send me an e-mail at computer.linguist@gmail.com</strong>.

I'll take some time, think about your project for a few days, and get back to you with a suggested roadmap and a list of suggested software, libraries, frameworks, and languages best suited for the job.
<h3>Why are you doing this for free?</h3>
I realized that my most loyal clients were those I'd given architecture advice to. By saving them tens of thousands of dollars (often more) in development costs, I'd secured their loyalty. I'm not sure how long I'll do this for free, but I invite you to be a part of the experiment.
<h3>What if I want more?</h3>
If you're working for a business and want a faster turn-around time and a very detailed report, specify that in your e-mail and I can give you a price quote. It's $150 for all but the largest projects.

The full report includes the following where applicable:
<ol>
	<li>The simplest, most flexible architecture for your needs</li>
	<li>A sample roadmap for development</li>
	<li>A list and explanation of available frameworks, libraries, and components that will help minimize the amount of new code needed.</li>
	<li>Optimal tools for the project (such as development environments, version control systems, and unit testing)</li>
	<li>Best language(s) for the project. No language, tool, framework, library, or component is sutiable for every project.</li>
	<li>An explanation of the tradeoffs between the choices presented.</li>
	<li>Existing relevant or similar projects to draw from</li>
	<li>The licensing restrictions of the suggested components, if any.</li>
</ol>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>302</wp:post_id>
		<wp:post_date>2009-10-24 19:36:45</wp:post_date>
		<wp:post_date_gmt>2009-10-24 23:36:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>roadmap-and-architecture-design</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>208</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[page-product.php]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>articlebanner</wp:meta_key>
			<wp:meta_value><![CDATA[<img src="/wp-content/uploads/2009/10/roadmap-louisville.jpg" alt="Louisville, KY" />]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Changelog</title>
		<link>http://nathanaeljones.com/products/asp-net-image-resizer-v2/changelog/</link>
		<pubDate>Fri, 13 Nov 2009 20:20:09 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://nathanaeljones.com/?page_id=430</guid>
		<description></description>
		<content:encoded><![CDATA[<div style="padding:10px; color:red; font-size:11pt; border:1px solid red; margin-bottom:1.5em;">This document is out-of-date. <a href="http://imageresizing.net/docs/v2/changelog">View updated version</a></div>

<h2>Releases</h2>
<ul class="normallist">
	<li>1.0 - August 6, 2008 (Initial release to the public.)</li>
	<li>1.2 - Nov 23, 2008 (<a href="../../11171_Image_Resizer_1_2_Upgrade_Notes">Upgrade Notes from 1.0 to 1.2</a>) (<a href="../../11131_Image_Resizer_v1_2_Product_Page">Original product page</a>)</li>
	<li>2.0a Jan 30, 2009 (E-mail distribution)</li>
	<li>2.0a Mar 4, 2009 (E-mail distribution)
<ul class="normallist">
	<li>Fixed: Cleanup routine can cause bottleneck on GetFiles() - fix so that Directory.GetFiles() only happens at startup and when items are added. Only affects sites with slow filesystems (or without filesystem caching), and with thousands of images.</li>
	<li>Fixed: imagecache/ is not protected when AllowURLRewriting is enabled
http://localhost/resize(40,40)/imagecache/1639776677.jpg
bypasses it.  Added protection in the HttpModule.</li>
	<li>Fixed: Potential issue in Quantizer.cs that may cause lines in GIF output.</li>
	<li> Fixed Maxwidth/maxheight not getting picked up.</li>
	<li> Fixed: Custom crop coordinates at 0 were being applied in the negative coordinate zone. Fixed so x1,y1 weren't affected, but setting x2 and y2 to 0 is bottom-right relative.</li>
	<li>Changed flip to be after all operations, and added sourceFlip to replace its behavior.</li>
	<li> Added -ignoreicc parameter and made ICC reading the default. ICC profiles are not written out - browser do not support them.</li>
</ul>
</li>
	<li>2.0b May 16, 2009  (<a href="../../11181_Image_Resizer_2_0_Upgrade_notes">Upgrade notes from 1.2 to 2.0</a>)
<ul class="normallist">
	<li>Fixed: Incorrect aspect ratio issue if both maxwidth, width, and height are specified.</li>
	<li>Fixed: UNC hosted websites are now supported.</li>
	<li>Added DisableCacheCleanup command, and made MaxCachedImages &lt; 0 behave the same as DisableCacheCleanup=true</li>
	<li>Fixed: rounding error that could cause a pixel line on the right and/or bottom sides of the image. Rare floating point rounding error in GDI native code. Added code to force rounding to be consistent.</li>
</ul>
</li>
	<li>2.0rc1 May 21, 2009 (<a href="../../11181_Image_Resizer_2_0_Upgrade_notes">Upgrade notes from 1.2 to 2.0</a>)
<ul class="normallist">
	<li>Fixed: Transparency is preserved more reliably with GIF files. Certain GIF files were losing transparency because the way the color palette was constructed.</li>
	<li>Fixed: .tif is now a supported input extension... previously only .tiff and .tff were allowed.</li>
	<li>Added WatermarkSettings.cs class for watermarking. Easy to extend for your own use.</li>
	<li>Converted ImageManager from a Static class to a normal class with a getBestInstance() static method. Allows easy plugin creation for ImageManager.</li>
	<li>Added support for ?frame=1-x and ?page=1-x. You can now select frames from GIF images anied pages from TIFF files. Removed ?time</li>
	<li>Hashes are now SHA-256 instead of .NET 32-bit. They are base-16 encoded. This results in longer file names, but astronomically low chances of hash collisions.</li>
	<li>Fixed upgrade notes link in upgrade notes.txt</li>
</ul>
</li>
	<li>2.0rc2 Jun 3, 2009 (<a href="/11181_Image_Resizer_2_0_Upgrade_notes">Upgrade notes from 1.2 to 2.0</a>)
<ul class="normallist">
	<li>Fixed: Extremely rare bug where rounding causes Bitmap to be initialized with a dimension of 0, and causes a Parameter exception.
Ocurred when resizing an image to &lt; 2px in height or width (usually happens with 2x1000 size images, etc).
Added regression test for 500x2 image resized to 100px wide.</li>
	<li> Fixed: Typo (missing else) in SaveToNonSeekableStream. This method is for extensibility, and is not used by the Resizer directly.
This method is now tested and part of the Regression tests (HandlerTest.ashx).</li>
</ul>
</li>
	<li>2.1b Nov. 13, 2009 (<a href="http://nathanaeljones.com/438/version-2-1b-released/">Upgrade notes from 2.0 to 2.1b</a>)
<ul class="normallist">
	<li>Fixed: Fixed elusive performance bug in DiskCache that caused directory listings to run every image request.</li>
	<li>Added: GIF/PNG dithering support!</li>
	<li>Added: Zero-IIS-configuration installation mode! No wildcard mapping needed. Syntax: "image.jpg.axd?width=500"</li>
	<li>Fixed: All requests are forced to pass through the UrlAuthorizationModule now. Previously, any URL rewriting (like customfolders.cs) caused URL auth rules to be circumvented. This was documented behavior, but a secure solution has now been found.</li>
	<li>Added: DisableCustomQuantization setting to allow GIFs to be generated on servers where the Marshal class is prohibited.</li>
	<li>Added: PerfTests project to run benchmarks on the image resizing and encoding code.</li>
	<li>Added: ImageManager.BuildImage now accepts an HttpPostedFile instance for resizing, making upload and resize simple. Sample project included.</li>
</ul>
</li>
	<li>2.6 Nov 11, 2010 (<a href="/489">Upgrade notes from 2.1b to 2.6</a>)
<ul>
	<li>
<div id="_mcePaste">Fixed bug where a NullReference exception would occur if the Authentication module didn't process the request. All requests appear anonymous now in that situation.</div></li>
	<li>Fixed rounding bug and added regression test. New behavior is to round ALL values before performing drawing, but AFTER math is done. Was previously trimming a line of pixels off certain images.</li>
	<li>Fixed border bug where border was drawn over top of padding.</li>
	<li>Fixed threading bug with creating the web.config file. Two concurrent requests would cause an exception.</li>
	<li>Fixed bug where no URL Authorization was occuring UNLESS DisableImageURLAuthorization=TRUE in web.config (This bug did not exist in v2.1b, only in custom versions sent to customers between Mar. 19 and Nov. 11)</li>
	<li>Fixed SecurityException errors occuring on GoDaddy and in other low-trust environments: changed the Animation plugin to use static methods insead of reflection. Users of the animation plugin, contact me for an updated version.</li>
	<li></li>
	<li>Added support for splitting the image cache into subfolders, allowing scalability to millions of images:</li>
	<li>Set "ImageCacheSubfolders" to the number of required folders.</li>
	<li>Added support for resizing images from VirtualPathProviders.
Set either <em>ImageResizerUseVirtualPathProvider </em>or <em>ImageResizerUseVirtualPathProviderAsFallback </em>to true to enable the functionality. In Fallback mode, the virtual path provider is only called if no physical file exists.</li>
	<li>Added support for implementing cache-friendly database-driven image resizing using a VirtualPathProvider.</li>
	<li>Added IVirtualFileWithModified and IVirtualBitmapFile. Allows custom virtual path providers to be cache-friendly and even send bitmaps directly to the image resizer. Great for implementing new image formats.</li>
	<li>Added &amp;scale=UpscaleCanvas mode. Instead of upscaling the image, the canvas expands to the specified Width and Height.</li>
	<li>Added DisableImageURLAuthorization setting. Set to TRUE to disable additional URL authorization checking within the resizer (imagecache is still protected).</li>
	<li>Added BuildImage overloads with VirtualFile support</li>
	<li>Added static event hooks for URL rewriting on images (replaces CustomFolders.cs, although CustomFolders.cs still works).</li>
	<li>CustomFolders.cs will be removed in the next major revision.</li>
	<li>Added the ability to specify custom extension/ImageFormat mappings, in case your jpegs are named .cow or .pig for some strange reason.</li>
	<li>Added TranslatePoint methods to allow simulation of a resize (useful for image map generation).</li>
	<li>Added Size GetFinalSize() methods to ImageManager.cs for determining the resulting size of an image.</li>
	<li>Performance boost: modified DiskUtil.UpdateCachedVersionIfNeeded to use 'cachedFile' instead of 'sourceFile' as lock/sync key.</li>
</ul>
</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>430</wp:post_id>
		<wp:post_date>2009-11-13 15:20:09</wp:post_date>
		<wp:post_date_gmt>2009-11-13 20:20:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>changelog</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>234</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[page-full.php]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_be0df362db3436b83e1c2fe5bd090d4a</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Top down or bottom up development? Neither.</title>
		<link>http://nathanaeljones.com/?p=460</link>
		<pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://nathanaeljones.com/?p=460</guid>
		<description></description>
		<content:encoded><![CDATA[I was recently reading <em>Coders At Work</em> by Peter Seibel. It's an excellent book, definitely on my must read list. Nearly every interview holds useful ideas and different perspectives. Don't judge the book by the first chapter though - the remaining chapters are of much higher quality.

One pattern between the interviews kept popping out at me. All of the interviewees were experienced, veteran programmers. Yet the split between those claiming top/down coding and bottom/up coding seemed nearly 50/50. 

I suggest that none of them truly do either.... They code hard->easy. The hard and/or uncertain portions are always the most volatile. Volatile pieces can often have far-reaching effects. Low-level pieces that are prove impossible or possible can affect the architecture, rendering it either unusable or bloated. Top-level changes affect what low-level pieces are needed.

My approach is to break any problem down into its hard and easy compoenents. Easy and hard problems exist at both the bottom and top. Certain categories of applications tend to balance the hard problems towards one pole or the other.
For example, the hard problems within a business application would probably tend to be more frequent at the top, while the the hard problems of an stream-based XML library might be more towards the bottom.

Once the hard problems are solved, the rest is straightforward, and can be implemented in a direct manner. No need for abstractions and layers simply because you have question marks hiding in the dark corners of hard problems.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>460</wp:post_id>
		<wp:post_date>2009-11-17 15:29:30</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Why multiple paradigms are important</title>
		<link>http://nathanaeljones.com/?p=466</link>
		<pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://nathanaeljones.com/?p=466</guid>
		<description></description>
		<content:encoded><![CDATA[A <a href="http://en.wikipedia.org/wiki/Paradigm">paradigm</a>, by modern definition, is a  framework of concepts and usage patterns. It's not a word that should really be intimidating to anywone - it is the concept of a group of concepts. OOP is a paradigm, as is functional programming.

Every paradigm has its strengths and weaknesses. OOP is great for solving some problems, but horribly ugly and messy for others. It's a good default paradigm, I suppose, but misapplied the results are terrible. I'm often amazed at the gymnastics people go through to make things 'object-oriented' when the paradigm doesn't even apply, or needs the addition of another paradigm to be clean.

You shouldn't hammer nails with a screwdriver or cook steaks over a candle. You're going to end up with lousy steak and bent nails.

Good programmers write horrible code all the time, simply because they use the same, limited set of techniques with every problem they face. They're intelligent, creative people. But with the Best Practices Inquistors looming at the edge of their vision, they hesitate to take a non-standard approach to anything.

Despite programmers working in the realms of logic, some also apply emotional reasoning to their choice of languages or techniques. That's a mistake that usually ends up costing a lot.

Applied correctly, OOP is great. FP is great. Events are great. AOP is great. But used wrongly, they're all terrible.

I just finished reading <em>Coders At Work</em>. It's a fantastic book which interviews 15 top-notch software engineers, developers, and architects. Joshua Bloch, Donald Knuth, Brendan Eich, Douglas Crockford, etc. Go read it. It's good.

One of the many things that solidified in my head as I read it was:

<em>There is no silver bullet paradigm.</em>

A phrase you don't hear a lot. Most commercial languages are centered around a single paradigm; what company wants customers to think their product only solves <em>part</em> of their problem?

But sofware engineers face different problems than they faced 20 years ago. Our constraints aren't execution speed, memory, or I/O use as in the past. Our biggest constraint is <em>complexity</em>.

To achieve goals like security, reliability, maintainability, and readabilty (which is required for any of the three), we need to a wide range of problems all in a direct manner.

For all but the smallest projects, a combination of paradigms are needed to solve the problem set in a direct and obvious manner.

I learned some

It is, however, a great improvement on the imperative/procedural/structured paradigms, the three of which have become nearly synonymous over the last 3 decades.

A few examples of popular programming paradigms are imperative, functional, object-oriented, aspect-oriented, and declarative.

Programming is hard in different ways than it was 10 or 20 years ago. The days of writing an operating system to run your word processor are long gone. Modern software engineering is based on trust - We hunt for reliable and well-tested libraries and build upon them. We use open-source software, but only have time to read the code we are directly interfacing with.

Mainstream application developers are being presented with an ever diversifying set of problems. As tools and libraries improve, we are called upon to accomplish more in less time. We have a wider range of problems; some

As the number of layers in modern software increases, the more types of problems

Procedural and structural programming are both supersets of the imperative paradigm. Very, very few languages lack support for prodecural or structural programming, so the three paradigms have become nearly synonmous in the context of modern languages.

Software engineering has had many different paradigms for some time. Often, these paradigms were popularly defined by the languages that supported them.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>466</wp:post_id>
		<wp:post_date>2009-11-18 15:34:43</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>First Impressions of GO</title>
		<link>http://nathanaeljones.com/?p=473</link>
		<pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://nathanaeljones.com/?p=473</guid>
		<description></description>
		<content:encoded><![CDATA[As normal with Google products, there is a fair amount of buzz about the new language: Go.

There is lots to like about the new language. It was designed by highly respected people in the computing community, and integrates lots of good ideas.

Not everything is flowers and roses about the new language, but its benefits might outweight its drawbacks enough for it to gain serious traction.

What I like
<ul>
	<li><strong>V</strong><strong>ariable names come before type declarations</strong>, somewhat like ES4.  My experience has taught me that readability is king. and keywords that precede identifiers seriously limit readability. It's important to be able to visually find functions and variables quickly by name. Just because English has the insane adjective-noun order doesn't mean programming languages should follow that mistake with identifiers and types.</li>
	<li>Some keywords, like const and import, don't have to be repeated every time. This makes it much easier to scan variable and import names.</li>
	<li><strong>Multiple return values</strong>. While I would prefer a lightweight tuple type like python, multiple return values eliminates one of the biggest pain points and causes of boilerplate code.</li>
	<li><strong>Good data literals</strong>. Array and map literals are concise and reasonably clean.</li>
	<li><strong>ES4-style casting:</strong> int(val), string(val). Of all the casting conventions I've seen, this is the cleanest and most intuitive.</li>
	<li><strong>Simple type assertions. </strong> x.(Type) is a complete expression that returns x or throws a runtime exception.  You can get the result as a boolean using the form <em>var val, ok := x.(Type). </em>val = x and ok=true, or val = zero value and ok = false.</li>
	<li>Function literals! I haven't even heard mention of this feature, yet it opens up support for much of the functional paradigm.</li>
</ul>
What  I don't like:
<ul>
	<li>No default function arguments or optional parameters - a great eliminator of boilerplate functions.</li>
	<li>Types still litter the syntax terribly. I hate to say it, but I might even be willing to swallow a perl/php syntax to get implicit typing. like $var.</li>
	<li>No heterogeneous collections or literals.</li>
</ul>
I'm not a fan of generics - they're complicated, and
<ul>
	<li>- <strong>The receiver syntax ruins otherwise decent readability</strong>...
func (p *myType) compute(factor int) int { return p.i * factor }
For object-oriented portions of projects, I see this making it very difficult to visually scan for functions. Western-world eyes scan left-to-right, and the receiver syntax nearly triples the required eye-work to get to the identifier.</li>
	<li>I think there are serveral better alternatives:</li>
	<li>func compute (factor int) int  (p *myType){ return p.i * factor }</li>
	<li>func compute (p *myType; factor int) int { return p.i * factor }</li>
	<li>Another option that would help would be to extend the import/const/var capabilities to functions also.</li>
	<li>func (p *myType) (
compute(factor int) int { return p.i * factor }
)</li>
	<li></li>
	<li>- No events? No dynamic method dispatch? Not even on the level of Objective-C?</li>
	<li>- No exceptions? Maybe it will provide an environment where coders *have* to handle the corner cases. Multiple return objects should help with this... but I see it limiting interoperability.</li>
	<li>- no immutable datatypes? Mutable slices?</li>
	<li>- I suggest designing a language for readability over writability - typically they correspond.</li>
	<li></li>
	<li>Simple type assertions</li>
</ul>
http://golang.org/doc/go_spec.html#Method_expressions

Method expressions are cool - should simplify event systems.

Function literals/closures!

Interesting "defer"

what I like about go:

- Formatting tools defining the standard. Much of the readability of any language comes from the standardization of the formatting. Establishing a good formatting spec in the form of an implementation is a great idea.

- Multiple return values. This makes a lot of sense. Dynamic languages can avoid the problem because it's cheap to make an object/tuple/hashmap to hold pieces of data, but static languages lacking this feature end up forcing boilerplate code.

Some people think code generation is a solution to problems, but it isn't. What if you have 2 methods returning the same pair? With code generation you can't exchange them, since they compile to difference classes.

I wholeheartedly applaud that it embraces DRY instead of making it impossible, as many languages do.

I like the implicit type style, interface based.
"Where C++ provides classes, subclasses and templates, Go provides interfaces. A Go interface is similar to a C++ pure abstract class: a class with no data members, with methods which are all pure virtual. However, in Go, any type which provides the methods named in the interface may be treated as an implementation of the interface. No explicitly declared inheritance is required. The implementation of the interface is entirely separate from the interface itself."]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>473</wp:post_id>
		<wp:post_date>2009-12-07 14:50:31</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_dd10b0fead5e9a1e78fce71de3d78591</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Donate</title>
		<link>http://nathanaeljones.com/contact/donate/</link>
		<pubDate>Tue, 01 Mar 2011 19:20:56 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://nathanaeljones.com/</guid>
		<description></description>
		<content:encoded><![CDATA[<div style="float:right; width:200px;">
<form action="https://www.paypal.com/cgi-bin/webscr" method="post">
<input type="hidden" name="cmd" value="_s-xclick">
<input type="hidden" name="hosted_button_id" value="HTW5XGHFMHRG2">
<input type="image" src="https://www.paypal.com/en_US/i/btn/btn_donateCC_LG.gif" border="0" name="submit" alt="PayPal - The safer, easier way to pay online!">
<img alt="" border="0" src="https://www.paypal.com/en_US/i/scr/pixel.gif" width="1" height="1">
</form>
<p>
If the above doesn't work, you can try <a href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=HTW5XGHFMHRG2">this link.</a></p></div>

<p>To donate, click the button below. If this is for a custom software project, please specify it in the "Add special instructions to the seller" area during checkout.</p>
<p>Please not a paypal account is NOT required. There is a small link for credit card payments to the left of the login area.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>513</wp:post_id>
		<wp:post_date>2011-03-01 14:20:56</wp:post_date>
		<wp:post_date_gmt>2011-03-01 19:20:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>donate</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>208</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[page-full.php]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>How far have we come?</title>
		<link>http://nathanaeljones.com/?p=88</link>
		<pubDate>Wed, 20 Aug 2008 12:22:47 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/?p=88</guid>
		<description></description>
		<content:encoded><![CDATA[I've been wondering lately - how far have we really come in the last 10 years? How much have languages evolved?

Truth be told, languages haven't evolved that much. We don't have any radically new concepts or approaches. Algorithms have improved; we have better garbage collection and just-in-time compilation. But nothing radically new.

What's evolved is <em>us</em>. Those cutting-edge concepts from the 1990s are starting to take hold.

<em>We've</em> started accepting new ideas. Very, very slowly, it seems, but we're getting there. Mainstream languages like C# are gaining functional aspects.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>88</wp:post_id>
		<wp:post_date>2008-08-20 12:22:47</wp:post_date>
		<wp:post_date_gmt>2008-08-20 12:22:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hello-world</wp:post_name>
		<wp:status>pending</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password>test</wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2</wp:comment_id>
			<wp:comment_author><![CDATA[Mr WordPress]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://wordpress.com/</wp:comment_author_url>
			<wp:comment_author_IP>127.0.0.1</wp:comment_author_IP>
			<wp:comment_date>2008-08-20 12:22:47</wp:comment_date>
			<wp:comment_date_gmt>2008-08-20 12:22:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, this is a comment.<br />To delete a comment, just log in, and view the posts' comments, there you will have the option to edit or delete them.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Finding a hosted, private, wysiwyg wiki</title>
		<link>http://nathanaeljones.com/93/finding-a-hosted-private-wysiwyg-wiki/</link>
		<pubDate>Thu, 01 May 2008 05:05:52 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/?p=93</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I've signed up for a couple dozen wikis in the last two weeks. In my spare time I've been trying to find a hosted wiki that meets our needs.
We need a private wiki with WYSWYG editing, 40+ user count, reasonably fast edit transitions, hierarchical organization of pages, and ad-free versions.</p>

<p>So far the only two that really impressed me were wetpaint.com and wik.is. </p>

<p>Wetpaint.com has a $20/mo ad-free version for non-profits they are beta testing, but be warned that this only removes the Google ads on the side. The wetpaint-sponsored ads at the bottom can't be removed, although you can change their type by changing the 'category' of your wiki (try education for something safer).</p>

<p>Wetpaint has a fantastic AJAX editing interface, with edit transitions under 2 seconds on DSL - quite fantastic. Initial page loads are quick also. Very trim Javascript.</p>


<p>wik.is has a free and pro version, the primary difference being the alloted storage space. wik.is runs DekiWiki, created by the folks that made MediaWiki. DekiWiki is good stuff, although a little heaver on the javascript side, although I don't think it would be too hard to lump and compress the javascript files. Going into edit mode takes 4+ seconds, and requires over a hundred HTTP requests - about 1.5 megabytes. </p>

<p>Both can either be private or public, and allow template choices. wik.is allows you to create your own templates and edit the site CSS. Both allow custom domains and site logos.</p>

<p>Since wik.is is $99/year for no ads, and wetpaint.com is $240/year for less ads, I think we'll be going with wik.is. </p>

<p><a href="http://viawiki.com">Viawiki.com</a> also hosts DekiWiki, and has a much faster editing version - give the demo a try. They license per user, though, so if you have a lot of people it can get a little pricey.</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[I've signed up for a couple dozen wikis in the last two weeks. In my spare time I've been trying to find a hosted wiki that meets our needs.
We need a private wiki with WYSWYG editing, 40+ user count, reasonably fast edit transitions, hierarchical organization of pages, and ad-free versions.]]></excerpt:encoded>
		<wp:post_id>93</wp:post_id>
		<wp:post_date>2008-05-01 01:05:52</wp:post_date>
		<wp:post_date_gmt>2008-05-01 05:05:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>finding-a-hosted-private-wysiwyg-wiki</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>url</wp:meta_key>
			<wp:meta_value><![CDATA[10902_Finding_a_hosted_private_wysiwyg_wiki]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Site Launch</title>
		<link>http://nathanaeljones.com/94/site-launch/</link>
		<pubDate>Wed, 30 Apr 2008 19:16:04 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/?p=94</guid>
		<description></description>
		<content:encoded><![CDATA[	

<p>	
You've got to start sometime. After launching a certain number of websites, launching your own can seem really, really boring. 
</p>
<p>Like watching grass grow. At least it doesn't take long with the CMS I created.</p>
<p>I FTP'd the site up last night, then attached the database file and set the connection string during lunch break. 
</p>
<p>The part that took the longest was resetting my password in the CMS, since I'd forgotten it :(. The quickest way to is to run "Update aspnet_Membership SET Password="pass" PasswordFormat=0" to reset all passwords to "pass".</p>
<p>There's only a few non-typical requirements:</p>
<ul>
<li>Obviously ASP.NET needs wildcard mapping set up, so all URLs go to ASP.NET. The hosting provider has to map "*" to "aspnet_isapi.dll"</li>
<li>The application needs write access to the local file system, but only if you want to have online editing ability. This
is controlled at two levels - the filesystem (permissions for Network Service), and the asp.net trust level (machine.config)</li>
</ul>
]]></content:encoded>
		<excerpt:encoded><![CDATA[	You've got to start sometime. After launching a certain number of websites, launching your own can seem really, really boring. Like watching grass grow. At least it doesn't take long with the CMS I created...]]></excerpt:encoded>
		<wp:post_id>94</wp:post_id>
		<wp:post_date>2008-04-30 15:16:04</wp:post_date>
		<wp:post_date_gmt>2008-04-30 19:16:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>site-launch</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>url</wp:meta_key>
			<wp:meta_value><![CDATA[10882_Site_Launch]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>articlebanner</wp:meta_key>
			<wp:meta_value><![CDATA[<img runat="server" src="banner.jpg" alt="Into the horizon" />]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogbanner</wp:meta_key>
			<wp:meta_value><![CDATA[<img runat="server" src="banner.jpg" alt="Into the horizon" />]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Designing URIs</title>
		<link>http://nathanaeljones.com/99/designing-uris/</link>
		<pubDate>Fri, 09 May 2008 00:10:13 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/?p=99</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- #content ul{ list-style-type:disc; padding-left:25px; } span.path{color:red;} h2{ margin-bottom:1.5em; margin-top:2em; } h3{ margin-bottom:.4em; margin-top:1.2em; } div.note{ padding:15px; border:1px solid #94A83F;

color:#505050; background-color:#e4e4e4; margin-top:.8em; margin-bottom:.8em; } .noteBoxRight{ width:200px; padding:10px; float:right; } .pathPart{ color:red; } h1.spaced{ margin-top:4em; margin-bottom:2em; } .codeBox{ line-height:1.1em; }

-->

ASP.NET is essentially an advanced request-processing framework.
Naturally, the URI is the most important part of any request (or should be).
URIs should be well designed, and should <strong>represent the requested content accurately and succinctly</strong>.
Unfortunately, they are frequently misused, which causes browsers, users,
and search engines no end of trouble.
<div class="noteBoxRight">Although you can't change the main portion of the URI without reloading the page, you can modify the <a href="http://en.wikipedia.org/wiki/Fragment_identifier">fragment</a> to your heart's content with Javascript. Adobe has released a <a href="http://labs.adobe.com/wiki/index.php/Flex_3:Feature_Introductions:_Deep_Linking">BrowserManager class that makes "deep linking" easier</a>, and vastly improves the <em>user</em>'s experience on all-flash sites.</div>
Some misuse URIs by making them too generic;
some sites have everything on the home page.
Flash, AJAX, and frames are the biggest culprits here,
as they are capable of making big changes to the current content of the page without affecting the address bar.
Users of this type of site are frustrated because if they bookmark a buried page in the site,
it only records the address of the home page.
The back button also betrays them - it doesn't undo their actions anymore,
but plops them completely off the site.

Search engines dislike these sites because either (1) they can't access buried content due to its form
(JavaScript or Flash) or (2) they can access it, but all keywords are diluted from the massive amount
of content available on one page.

Some developers take the misuse to the opposite end.
The feel that the address bar is the <em>perfect</em> place to store all variables, interface state data,
and user preferences. They, too, cause problems for both users and search engines.
Users bookmarking or e-mailing such links often find that they no longer work after their session has expired,
or after a change was made on the site.
Their length and lack of simplicity also makes them hard to understand,
as many users depend on the address bar to understand where they are located on the site. URLs longer than 80 characters are also a pain to e-mail. Many e-mail clients will break the URL in half, making it unusable.

Search engines find these type confusing, because they see (and rank) each unique URI as a separate page, and dilute ranking accordingly.
<h2>So, you ask, what makes a good URI?</h2>
<ul>
	<li>It should be as short as possible. Don't sacrifice consistency or obviousness, but be brief.</li>
	<li>Organize and name things logically. ASP.NET isn't always helpful in keeping a clean structure,
so I highly recommend that you use a URL rewriting module. <a href="http://www.useit.com/alertbox/990321.html">URIs should be 'hackable'</a>.</li>
	<li>URIs should be deterministic.
<ul>
	<li>No two URIs should ever display the same page</li>
	<li>The same URI should always display the same content.</li>
</ul>
</li>
	<li>The query string should only contain data that AFFECTS THE QUERY.
If it doesn't describe the content, it doesn't belong. Keep the <em>query string</em> for queries, please.</li>
	<li>
<div class="noteBoxRight">Tip: Don't try to spam URLs with keywords.
Density algorithms are applied here, also. As with page titles, pick 1 keyword and stick with it.</div>
The URI path should not rely on cryptic or numerical identifiers.
If it does, it should also provide a human-readable title.
It's really nice to be able to look at a URL and guess what it contains -
especially when you have a long list of them.
As a bonus, search engines absolutely love URIs that match keywords.</li>
</ul>
Further reading (by Tim Berners-Lee):
<a href="http://www.w3.org/Provider/Style/URI">http://www.w3.org/Provider/Style/URI</a>.

I strongly suggest that all ASP.NET projects use some kind of URL rewriting library, such as <a href="http://www.urlrewriting.net/149/en/home.html">UrlRewritingNet</a>. Even if you only need a single rewrite, I still recommend using a library instead of trying to do it yourself. UrlRewritingNet helps you overcome the bugs in the framework seamlessly.
<h3>Bad examples:</h3>
<ul>
	<li>/Default.aspx?tabid=3</li>
	<li>/Products/ShowProduct.aspx?prodid=4982</li>
	<li>/showblog.aspx?articleid=98</li>
</ul>
<h3>Better examples:</h3>
<ul>
	<li>/Default.aspx?tabid=3&amp;title=ContactUs</li>
	<li>/Products/ShowProduct.aspx?id=4982&amp;product=Nokia_Wall_Adpater_12V</li>
	<li>/showblog.aspx?articleid=98&amp;title= Why_you_should_never_concatenate_SQL_commands</li>
</ul>
<h3>Even better:</h3>
<ul>
	<li>/contact/</li>
	<li>/products/4982_Nokia_Wall_Adapter_12v</li>
	<li>/blog/98_Why_you_should_never_concatenate_SQL_commands</li>
</ul>
<h2>WWW</h2>
The famous "www" prefix is actually pointless. You can still have <strong>ftp</strong>, <strong>mail</strong>, and <strong>smtp</strong> subdomains without forcing your website to use <strong>www</strong>. The <strong>www</strong> convention came into being since servers were typically named after their role, and HTTP was just starting out.

Since web browsers only speak HTTP, you should really point your second-level domain (example.com) directly to your web server. Realize that some search engines will index <strong>www.example.com</strong> and <strong>example.com</strong> separately, since they are different locations. To prevent SSL cert and cross-domain flakiness in Flash, you should standardize on one or the other. You can force this by checking for www in Global.asax, and calling Response.Redirect() with the "fixed" version of the requested URI.
<h1 class="spaced">URIs in the HTTP  protocol</h1>
<strong>Let's look at how URI is sent to the server using HTTP</strong> Here is a basic GET request. The first line consists of the <strong>HTTP method,
followed by a root-relative path, then the protocol version</strong>. The subsequent lines contain the header collection,
in the form of simple <strong>name-colon-value pairs</strong>.
<strong>The two parts of the URI here are the path (/blog?page=2), and the HOST-header (youngfoundations.org).</strong>
We know that the scheme is probably "http" since we are communication using the HTTP protocol.
IIS tells us which port the request arrived on, so between the pieces we can reconstruct the original URI somewhat accurately.
<div class="noteBoxRight">Note: there are LOTS of schemes out there that use the HTTP protocol, like firefoxurl://, etc.</div>
<div class="noteBoxRight">Note: The HOST header is important, since some servers host dozens of domains,
and this allows IIS to forward the request to the appropriate application in shared hosting situations.
Multiple domains (hostnames) can be pointed to a single application.</div>
The path and the query are divided by the first question mark.
<h2>GET Request</h2>
<div class="codeBox prewrap">GET <strong>/blog?page=2</strong> HTTP/1.1[CRLF]
Host: <strong>youngfoundations.org</strong>[CRLF]
Connection: close[CRLF]
Accept-Encoding: gzip[CRLF]

Accept: text/xml,application/xml,application/xhtml+xml,text/html; q=0.9,text/plain; q=0.8,image/png,*/*;q=0.5[CRLF]
Accept-Language: en-us,en;q=0.5[CRLF]
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7[CRLF]
User-Agent: Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US; rv:1.8.1.5; .NET CLR 2.0.50727) Gecko/20070713 Firefox/2.0.0.5 Web-Sniffer/1.0.24[CRLF]
Referer: http://web-sniffer.net/[CRLF]</div>
The client can send content with <em>any</em> request, although it is typically sent with the POST method.
The header collection is separated from the request body by the character sequence [CRLF][CRLF] (2 newlines).
The content in the request body is described by the <strong>content-type</strong> and <strong>content-length</strong> HTTP headers.
<h2>POST Request</h2>
<div class="codeBox prewrap">POST <strong>/blog</strong> HTTP/1.1[CRLF]
Host: <strong>youngfoundations.org</strong>[CRLF]
Connection: close[CRLF]
Accept-Encoding: gzip[CRLF]
Accept: text/xml,application/xml,application/xhtml+xml,text/html; q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5[CRLF]
Accept-Language: en-us,en;q=0.5[CRLF]
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7[CRLF]
User-Agent: Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US; rv:1.8.1.5; .NET CLR 2.0.50727) Gecko/20070713 Firefox/2.0.0.5 Web-Sniffer/1.0.24[CRLF]
Referer: http://web-sniffer.net/[CRLF]
Content-type: <strong>text/html; charset=utf-8</strong> [CRLF]
Content-length: <strong>19</strong>[CRLF]
[CRLF]
Sample content body</div>
<h2>Response</h2>
The HTTP response generated by your ASP.NET application looks slightly different that the request that prompted it.
The general format remains, but the first line is now [HTTP Version]   [Status-code] [Status code description].
<a href="http://en.wikipedia.org/wiki/List_of_HTTP_status_codes">Http status codes</a> are very important, but are beyond the scope of this article.
<div class="codeBox prewrap">HTTP/1.1 301 Moved Permanently [CRLF]
Connection: close [CRLF]
Date:Fri, 03 Aug 2007 00:36:57 GMT [CRLF]
Server:Microsoft-IIS/6.0 [CRLF]
X-Powered-By:ASP.NET [CRLF]
Location:http://www.microsoft.com [CRLF]
Content-Length:31 [CRLF]
Content-Type:text/html [CRLF]
Set-Cookie:ASPSESSIONIDSSSBDQAT=PIJAGJDBFFLFAALAJDCGBAMI; path=/CRLFCache-control:private [CRLF]
[crlf]
[Content-body]</div>
Important note: If you have multiple domains pointing to one website,
make sure they are all 301 redirected to precisely one host name.
Otherwise you will sabotage your search engine placement by (1) diluting your page rank, and
(2) being penalized for duplicate content.
<h1 class="spaced">URIs versus URLs</h1>
The term URL (Uniform Resource Locator) has been considered obsolete by w3c for a long time.
In its place stands the URI (the Uniform Resource Identifier).
Strictly speaking, a URL must  provide <em>all</em> of the information required to located and retrieve a resource,
while a URI is only required to identify it in relation to the current context.
Thus, a URL is a URI that "in addition to identifying a resource, [provides] a means of locating the resource
by describing its primary access mechanism (e.g., its network 'location').". Most people aren't aware of the difference, and use them interchangeably.

<dl> <dt><strong>For example, the following URI is also a URL:</strong></dt> <dd>
<ul>
	<li>http://www.mysite.com:54321/ folder/virtualfolder/default.aspx? param1=thisisatest&amp;param2=test2</li>
</ul>
</dd> <dt><strong>However, these are not:</strong></dt> <dd>
<ul>
	<li>../css/shared.css  [URI relative to the location of the parent document]</li>
	<li>/images/banner.jpg [URI relative to the current network location (usually termed 'absolute')]</li>
	<li>Logo.gif [URI relative to the location of the parent document.]</li>
	<li> #requirements [URI fragment relative to current document.]</li>
</ul>
</dd> </dl>
<h3>Fragments</h3>
Fragments describe a section, place, or entity in the current document.
In HTML, they usually refer to a certain anchor tag (by name or ID).
The window is usually scrolled to the location of the anchor tag.
Fragments are never sent to the server computer, and only function as a display instruction to the client.
If a fragment isn't understood, it is ignored.
Fragments are pretty much free-form.

If the current document is <strong>http://mysite.com/home.html</strong> and a link to
<strong>http://mysite.com/home.html#part3</strong> is clicked, the browser (or user-agent),
is not supposed to ask the server for http://mysite.com/home.html again, but older clients may.
Relative fragments like <strong>#part3</strong> are handled more reliably.

<strong>Now let us dissect the following URL:</strong>

http://www.mysite.com:54321/folder/virtualfolder/default.aspx? param1=thisisatest&amp;param2=test2

http  The scheme (protocol).  The protocol determines how the client should talk to the server (basically the language, or grammar).

www.mysite.com The computer the resource is located on (DNS, WINS, or IP Address)

:54321 The port number to communicate with on the computer.

Instead of trying to sort out incoming packets and route them to the right application on the server computer, ports are used.
Certain default ports are assumed for some protocols.
Http requests are sent to port 80 by default.
Https requests are sent to port 443, and FTP requests are sent to port 21.
If an application is not listening on that port (or the request packets are blocked by a firewall), no response will be given.

Additional sorting is sometimes performed, as in the case of WCF (.NET 3.0) port sharing,
or when multiple sites are hosted on a single server. When an HTTP request is sent to a server,
it is accompanied by the original hostname from the address bar. An unlimited number of DNS (Domain Name System)
addresses can point to a single computer, which is convenient for web hosting providers. IIS (Internet Information Services)
can be configured to look at this host header, and forward the request to whichever site is configured to receive requests for
that particular hostname (DNS address).

For information about DNS, read <a href="http://en.wikipedia.org/wiki/Domain_name_system">http://en.wikipedia.org/wiki/Domain_name_system</a>.
<h1 class="spaced">Super-simplified view of DNS</h1>
DNS addresses are hierarchical, and levels (domains) are separated by a period.
Domains progress from most specific to least specific.

For example, in resolving www.mysite.com, the following steps would be taken:
<ul class="list">
	<li>Ask computer 'COM' where computer 'MYSITE' is at (what its IP address is).</li>
	<li>Ask computer MYSITE where computer 'WWW' is at.</li>
</ul>
DNS is used for a whole lot more that just web browsing,
so the company at mysite.com might have a whole bunch of computers, such as ftp.mysite.com, mail.mysite.com, pop.mysite.com,
telnet.mysite.com, as well as www.mysite.com.
WWW usually points to the web server for the company.
Please note, however that the WWW part is completely unnecessary,
and is just a commonly followed convention.

Note: In www.mysite.com, "com" is a TLD (Top-level domain),
and "mysite" is a SLD (Second-level domain)

SLDs usually cost a registration fee, as the poor owner of the "COM" computer has tremendous bandwidth bills.
Third-level domains can be freely created if the parent SLD is under your control.

One of the most critical steps in designing a web site is choosing your URI structure for the site. Clean, friendly URIs make visitors more comfortable and help them keep track of where they are on the site. Short URLs don't get wrapped as badly, are easier to type, and just look nicer.]]></content:encoded>
		<excerpt:encoded><![CDATA[One of the most critical steps in designing a web site is choosing your URI structure for the site. Clean, friendly URIs make visitors more comfortable and help them keep track of where they are on the site,]]></excerpt:encoded>
		<wp:post_id>99</wp:post_id>
		<wp:post_date>2008-05-08 20:10:13</wp:post_date>
		<wp:post_date_gmt>2008-05-09 00:10:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>designing-uris</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="asp-net"><![CDATA[ASP.NET]]></category>
		<category domain="category" nicename="general-programming"><![CDATA[General Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>url</wp:meta_key>
			<wp:meta_value><![CDATA[10941_Designing_URIs]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Think enabling OWA for a few users is safe?</title>
		<link>http://nathanaeljones.com/104/think-enabling-owa-for-a-few-users-is-safe/</link>
		<pubDate>Wed, 14 May 2008 20:36:03 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/?p=104</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Think Outlook Web Access is secure since you only have it enabled for the users that keep strong passwords?
</p>
<p> Think again.
</p>
<p>There's this little thing called WebDAV. It's how Entourage connects to Exchange, and is used by the AJAX in OWA. Now, it is true that OWA will say "Microsoft Outlook Web Access is currently disabled for user X" if you try to access OWA through your web browser directly. However, the actual underlying WebDav methods aren't similarly restricted. Even if a user has OWA specifically disabled, he can still connect using Entourage/WebDav remotely!</p>

<p>So, as long as you have OWA published, you're only as secure as your weakest password. You can't stop employees from connecting remotely, and you can't stop hackers from accessing mailboxes with weak passwords. And if you haven't disabled the new "Remote File Access" feature of Exchange 2007, now would be a good time. Your company-wide shares can be viewed if just one user has a weak password.
</p>

<p>Bottom-line: If you have been relying upon mailbox-level OWA control to protect those users who refuse to remember long passwords - you're in trouble.</p>
<p>Note: I called Microsoft Support to confirm this behavior, and their tests had the same results - Disabling OWA access doesn't affect remote WebDav/Entourage access.</p>

]]></content:encoded>
		<excerpt:encoded><![CDATA[Think Outlook Web Access is secure since you only have it enabled for the users that keep strong passwords? Think again.]]></excerpt:encoded>
		<wp:post_id>104</wp:post_id>
		<wp:post_date>2008-05-14 16:36:03</wp:post_date>
		<wp:post_date_gmt>2008-05-14 20:36:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>think-enabling-owa-for-a-few-users-is-safe</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>url</wp:meta_key>
			<wp:meta_value><![CDATA[11031_Think_enabling_OWA_for_a_few_users_is_safe]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>FailedToExecuteUrl</title>
		<link>http://nathanaeljones.com/?p=108</link>
		<pubDate>Fri, 16 May 2008 13:36:22 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/?p=108</guid>
		<description></description>
		<content:encoded><![CDATA[http://forums.iis.net/t/1146755.aspx?PageIndex=2

Event code: 3005 
Event message: An unhandled exception has occurred. 
Event time: 5/16/2008 9:31:50 AM 
Event time (UTC): 5/16/2008 1:31:50 PM 
Event ID: 77522ab73ae94d31a8688e4f6bc95739 
Event sequence: 24 
Event occurrence: 1 
Event detail code: 0 
 
Application information: 
    Application domain: /LM/W3SVC/1/ROOT-2-128554183105358000 
    Trust level: Full 
    Application Virtual Path: / 
    Application Path: C:\inetpub\wwwroot\ 
    Machine name: NATHANAELJ 
 
Process information: 
    Process ID: 5020 
    Process name: w3wp.exe 
    Account name: NT AUTHORITY\NETWORK SERVICE 
 
Exception information: 
    Exception type: HttpException 
    Exception message: Failed to Execute URL. 
 
Request information: 
    Request URL: http://localhost/favicon.ico 
    Request path: /favicon.ico 
    User host address: ::1 
    User:  
    Is authenticated: False 
    Authentication Type:  
    Thread account name: NT AUTHORITY\NETWORK SERVICE 
 
Thread information: 
    Thread ID: 5 
    Thread account name: NT AUTHORITY\NETWORK SERVICE 
    Is impersonating: False 
    Stack trace:    at System.Web.Hosting.ISAPIWorkerRequestInProcForIIS6.BeginExecuteUrl(String url, String method, String childHeaders, Boolean sendHeaders, Boolean addUserIndo, IntPtr token, String name, String authType, Byte[] entity, AsyncCallback cb, Object state)
   at System.Web.HttpResponse.BeginExecuteUrlForEntireResponse(String pathOverride, NameValueCollection requestHeaders, AsyncCallback cb, Object state)
   at System.Web.DefaultHttpHandler.BeginProcessRequest(HttpContext context, AsyncCallback callback, Object state)
   at System.Web.HttpApplication.CallHandlerExecutionStep.System.Web.HttpApplication.IExecutionStep.Execute()
   at System.Web.HttpApplication.ExecuteStep(IExecutionStep step, Boolean& completedSynchronously)
 
 
Custom event details: 








Server Error in '/UrlTests' Application.
--------------------------------------------------------------------------------

Failed to Execute URL. 
Description: An unhandled exception occurred during the execution of the current web request. Please review the stack trace for more information about the error and where it originated in the code. 

Exception Details: System.Web.HttpException: Failed to Execute URL.

Source Error: 

An unhandled exception was generated during the execution of the current web request. Information regarding the origin and location of the exception can be identified using the exception stack trace below.  

Stack Trace: 


[HttpException (0x80004005): Failed to Execute URL.]
   System.Web.Hosting.ISAPIWorkerRequestInProcForIIS6.BeginExecuteUrl(String url, String method, String childHeaders, Boolean sendHeaders, Boolean addUserIndo, IntPtr token, String name, String authType, Byte[] entity, AsyncCallback cb, Object state) +2488428
   System.Web.HttpResponse.BeginExecuteUrlForEntireResponse(String pathOverride, NameValueCollection requestHeaders, AsyncCallback cb, Object state) +415
   System.Web.DefaultHttpHandler.BeginProcessRequest(HttpContext context, AsyncCallback callback, Object state) +252
   System.Web.CallHandlerExecutionStep.System.Web.HttpApplication.IExecutionStep.Execute() +3391004
   System.Web.HttpApplication.ExecuteStep(IExecutionStep step, Boolean& completedSynchronously) +161

 


--------------------------------------------------------------------------------
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>108</wp:post_id>
		<wp:post_date>2008-05-16 09:36:22</wp:post_date>
		<wp:post_date_gmt>2008-05-16 13:36:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>failedtoexecuteurl</wp:post_name>
		<wp:status>pending</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>url</wp:meta_key>
			<wp:meta_value><![CDATA[11041_FailedToExecuteUrl]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Incoming request paths</title>
		<link>http://nathanaeljones.com/113/incoming-request-paths/</link>
		<pubDate>Fri, 16 May 2008 15:30:57 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/?p=113</guid>
		<description></description>
		<content:encoded><![CDATA[<style type="text/css">
dt { float:left; display:inline; padding-right:25px; font-weight:bold;}
dd {  }
h3 {margin-top:2em;}

dl{
border:1px solid #eaeaea;
padding:15px;
margin-top:15px;
font-size:8pt;
overflow:scroll;
}
span.querystring {
color:red;
}

span.pathinfo{
color:green;
}

span.filepath{
color:blue
}

table.rootVsSubfolder{
font-size:7.5pt;
color:black;

}
table.rootVsSubfolder td{
border-top: 1px solid gray;
padding:5px;
text-align:center;
}
table.rootVsSubfolder thead td{

font-weight:bold;
}
td.property{
border-right: 1px solid gray;
padding-left:0px;
}
td.root{
border-right: 1px solid gray;
}
td.subfolder{
padding-right:0px;
}
</style>
<h2>Casing and URL encoding</h2>
<p>Casing and URL encoding add significant complexity to the jobs IIS and ASP.NET must perform. ASP.NET automatically decodes and lowercases the scheme, host, and port. The Path (and PathInfo) portions are decoded, but case is not changed. The querystring is not modified. When the querystring is parsed to populate the QueryString collection, names and values get URL decoded once.

<p>There are an almost infinite number of ways to represent every URI &ndash; take for instance the following URIs, and how they are sanitized before your application receives them:</p>


<h3>URL encoded scheme (http)</h3>
<dl>
<dt>URI</dt>
<dd>
%68%74%74%70://localhost:87/content/pages/test.aspx</dd>

<dt>Response</dt>
<dd>IIS7 returns HTTP Error 400.0 - Bad Request</dd>
</dl>



<h3>Double URL encoded host</h3>
	
<dl>
<dt>URI</dt>
<dd>http://%25%34%63%25%34%66%25%34%33%25%34%31%25%34%63%25%34%38%25%34%66%25%35%33%25%35%34:87/Content/pages/test.aspx</dd>


<dt>Response</dt>
<dd>IE7 returns "Host not found" (browser only performs one level of URL decoding, apparently)</dd>
</dl>



<h3>URL Encoded host (UPPERCASE)</h3>
	
<dl>
<dt>URI</dt>
<dd>http://%4c%4f%43%41%4c%48%4f%53%54:87<span class="filepath">/Content/pages/test.aspx</span></dd>

<dt>Request.Url.OriginalString</dt>
<dd>http://localhost:87<span class="filepath">/Content/pages/test.aspx</span></dd>
</dl>
<p>IE7 decodes the host name automatically</p>

<h3>URL Encoding the host (lowercase)</h3>
	
<dl>
<dt>URI</dt>
<dd>Error! Hyperlink reference not valid.</dd>
	

<dt>Request.Url.OriginalString</dt>
<dd>http://localhost:87/Content/pages/test.aspx</dd>
</dl>



<h3>Mixed case</h3>
<dl>
<dt>URI</dt>
<dd>HttP://LOcalHoSt:87/<span class="filepath">CoNtEnT/pAgEs/tEsT.asPx</span></dd>
<dt>Request.Url.OriginalString</dt>
<dd>http://localhost:87/<span class="filepath">CoNtEnT/pAgEs/tEsT.asPx</span></dd>
</dl>


<h3>URLEncoding the entire URI (http://localhost:87/content/pages/test.aspx)</h3>
<dl>
<dt>URI</dt>
<dd>%68%74%74%70%3a%2f%2f%6c%6f%63%61%6c%68%6f%73%74%3a%38%37%2f%63%6f%6e%74%65%6e%74%2f%70%61%67%65%73%2f%74%65%73%74%2e%61%73%70%78</dd>

<dt>Respnse</dt>
<dd>IIS7 returns HTTP Error 400.0 - Bad Request</dd>
</dl>

<h3>URL Encoding the path (FilePath + PathInfo), but not the query string</h3>
<dl>
<dt>URI</dt>
<dd>http://localhost<span class="filepath">/%55%72%6c%54%65%73%74%73%2f%63%6f%6e%74%65%6e%74%2f%70%61%67%65%73%2f%74%65%73%74%2e%61%73%70%78</span><span class="pathinfo">%2f%66%6f%6c%64%65%72%2f%66%69%6c%65</span><span class="querystring">?querystring</span></dd>

	
<dt>Request.Url.OriginalString</dt>
<dd>http://localhost:80<span class="filepath">/UrlTests/content/pages/test.aspx</span><span class="pathinfo">/folder/file</span><span class="querystring">?querystring</span></dd>
</dl>


<h3>URL Encoding the path, querystring, and the "?" in-between.</h3>

	

<dl>
<dt>URI</dt>
<dd>http://localhost/%55%72%6c%54%65%73%74%73%2f%63%6f%6e%74%65%6e%74%2f%70%61%67%65%73%2f%74%65%73%74%2e%61%73%70%78%2f%66%6f%6c%64%65%72%2f%66%69%6c%65%3f%71%75%65%72%79%73%74%72%69%6e%67
</dd>

<dt>Response</dt>
<dd>
<pre>Server Error in '/UrlTests' Application.
'/UrlTests/content/pages/test.aspx/folder/file?querystring' is not a valid virtual path.

Description: An unhandled exception occurred during the execution of the current web request. Please review the stack trace for more information about the error and where it originated in the code.
Exception Details: System.Web.HttpException: '/UrlTests/content/pages/test.aspx/folder/file?querystring' is not a valid virtual path.
Source Error:
Frame1
Source File: c:\Users\Nathanael\desktop\webapplication2\Content\pages\test.aspx.cs    Line: 912308
Stack Trace:
Frame2
Version Information: Microsoft .NET Framework Version:2.0.50727.312; ASP.NET Version:2.0.50727.833
</pre>
</dd>
</dl>
<pre>
Hackers can exploit this to discover:
   If CustomErrors=false
   1.The physical location of the web site
   2.The physicial loation of the .NET framework and the
Of course, I'm sure there are other ways to generate errors - this is just one you can't patch.
</pre>
<p>Also, since the entire URL is parsed as the virtual path, it looks like this is a way to circumvent the splitting of FilePath, PathInfo, and the querystring, since the whole URL was parsed as the virtual path.</p>
<p>If you want the querystring to be parsed correctly, you cannot encode the delimiting question mark.</p>



<h3>URL Encoding the path and querystring separately</h3>
	

<dl>
<dt>URI</dt>
<dd>http://localhost<span class="filepath">/%55%72%6c%54%65%73%74%73%2f%63%6f%6e%74%65%6e%74%2f%70%61%67%65%73%2f%74%65%73%74%2e%61%73%70%78</span><span class="pathinfo">%2f%66%6f%6c%64%65%72%2f%66%69%6c%65</span><span class="querystring">?%71%75%65%72%79%73%74%72%69%6e%67</span></dd>
	
<dt>Request.Url.OriginalString</dt>
<dd>http://localhost:80<span class="filepath">/UrlTests/content/pages/test.aspx</span><span class="pathinfo">/folder/file</span><span class="querystring">?%71%75%65%72%79%73%74%72%69%6e%67</span></dd>
</dl>

<p>Note: HttpUtility.URLEncode() only encodes non-alphanumeric characters. You'll have to use something else to get complete encoding, such as is used above.</p>

	
<p>So, I think you can see why basing security on the incoming path is a bad idea. </p>

<h2>Differences between Root and Subfolder applications</h2>

<p>IIS allows websites to be hosted in virtual folders that do not correspond to the on-disk organization. For example, if you publish a website located in C:\Websites\MyWebsite2\ on virtual folder /Web1/Test/, The URI to access it would be http://mycomputer/Web1/Test/.</p>

<p>The following table contains data from single web site being accessed from two different locations. One channel is the virtual folder /URLTests on port 80, and the other is the root website on port 87.</p>



<table class="rootVsSubfolder" cellpadding="0" cellspacing="0">
<thead>
<tr><td class="property">
Property</td>
<td class="root" width="100px">http://localhost:87/content/pages/ test.aspx/pathinfo?query=value</td>
<td class="subfolder">http://localhost/UrlTests/content/pages/ test.aspx/pathinfo?query=value</td>
</tr>
</thead>
<tbody>
<tr><td class="property">	Request. ApplicationPath	</td><td class="root">	/	</td><td class="subfolder">	/UrlTests	</td></tr>
<tr><td class="property">	Request. RawUrl	</td><td class="root">	/content/Pages/test.aspx/pathinfo?query=value	</td><td class="subfolder">	/UrlTests/content/Pages/test.aspx/pathinfo?query=value	</td></tr>
<tr><td class="property">	Request. AppRelativeCurrent ExecutionFilePath	</td><td class="root">	~/content/Pages/test.aspx	</td><td class="subfolder">	~/content/Pages/test.aspx	</td></tr>
<tr><td class="property">	Request.Current ExecutionFilePath	</td><td class="root">	/content/Pages/test.aspx	</td><td class="subfolder">	/UrlTests/content/Pages/test.aspx	</td></tr>
<tr><td class="property">	Request. FilePath	</td><td class="root">	/content/Pages/test.aspx	</td><td class="subfolder">	/UrlTests/content/Pages/test.aspx	</td></tr>
<tr><td class="property">	Request. Path	</td><td class="root">	/content/Pages/test.aspx/pathinfo	</td><td class="subfolder">	/UrlTests/content/Pages/test.aspx/pathinfo	</td></tr>
<tr><td class="property">	Request. PathInfo	</td><td class="root">	/pathinfo	</td><td class="subfolder">	/pathinfo	</td></tr>
<tr><td class="property">	Request. PhysicalApplicationPath	</td><td class="root">	C:\Users\Nathanael\Desktop\WebApplication2\	</td><td class="subfolder">	C:\Users\Nathanael\Desktop\WebApplication2\	</td></tr>
<tr><td class="property">	Request. PhysicalPath	</td><td class="root">	C:\Users\Nathanael\Desktop\WebApplication2 \content\Pages\test.aspx	</td><td class="subfolder">	C:\Users\Nathanael\Desktop\WebApplication2 \content\Pages\test.aspx	</td></tr>
<tr><td class="property">	Request. Url.OriginalString	</td><td class="root">	http://localhost:87/content/Pages/ test.aspx/pathinfo?query=value	</td><td class="subfolder">	http://localhost:80/UrlTests/content/Pages/ test.aspx/pathinfo?query=value	</td></tr>
</tbody>
</table>
<p>
Note: CurrentExecutionFilePath (and the AppRelative version) both differ from FilePath with Server.Execute or Server.Transfer is used. CurrentExecutionFilePath changes to reflect the executing file, while FilePath remains unchanged. Spaces in the table above were inserted to allow wrapping of the text - the actual data contains no whitespace.
</p>

<p>This should illustrate why application-relative paths (~/file.aspx) should be used wherever possible - they permit the site to be hosted in virtual folder as well as in a site root. Can you imaging the maintenance costs if you needed to move your site, and were using absolute paths, such as (/vdir/file.aspx)? You may not currently need to host the site on a virtual folder for dev purposes, but what about 5 years from now when you want to keep the old system online in a subfolder of the new site?</p>

]]></content:encoded>
		<excerpt:encoded><![CDATA[Casing and URL encoding add significant complexity to the jobs IIS and ASP.NET must perform. ASP.NET automatically decodes and lowercases the scheme, host, and port. The Path (and PathInfo) portions are decoded, but case is not changed.]]></excerpt:encoded>
		<wp:post_id>113</wp:post_id>
		<wp:post_date>2008-05-16 11:30:57</wp:post_date>
		<wp:post_date_gmt>2008-05-16 15:30:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>incoming-request-paths</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asp-net"><![CDATA[ASP.NET]]></category>
		<category domain="category" nicename="asp-net"><![CDATA[ASP.NET]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>url</wp:meta_key>
			<wp:meta_value><![CDATA[10951_Incoming_request_paths]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>URL Rewriting</title>
		<link>http://nathanaeljones.com/?p=114</link>
		<pubDate>Fri, 16 May 2008 20:52:37 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/?p=114</guid>
		<description></description>
		<content:encoded><![CDATA[	

<p>A little over one year ago I started work on a ASP.NET content management system (the one that currently powers this site and <a href="http://youngfoundations.org/">youngfoundations.org</a>. At the time, there was almost no correct information on the web about how to properly perform URL rewriting in ASP.NET. A lot of the documentation was <em>theoretically</em> correct, but I never found anything in my several months of research that provided clean solutions to the "side effects": invalid post-backs (incorrect action attributes), broken CSS references, broken image and anchor references, etc.</p>

<p>There is a lot more to URL rewriting than simply creating a series of if...then statements during OnBeginRequest and firing off the correct page with HttpContext.RewritePath.
</p>

<p><a href="http://msdn.microsoft.com/en-us/library/system.web.httpcontext.rewritepath.aspx">HttpContext.RewritePath</a> has undergone many patches and hotfixes - make sure you have the latest version of System.Web.dll, or you will regret it! If you get a NullReferenceExcecption from RewritePath or images aren't showing up, <a href="~/10931" runat="server">read this</a>.



<p>Also, if you're confused by the pathInfo parameter to RewritePath, it's for the <a href="http://nathanaeljones.com/10961_PathInfo">PathInfo</a> feature of ASP.NET. The docs describe it as "Additional path information to use for the URL redirect". Since <em>every</em> argument to RewritePath is "Additional path information to use for the URL redirect", I find that a little humorous. If you don't what PathInfo is, <a href="http://nathanaeljones.com/10961_PathInfo">read this</a>.</p>

<h2> Wildcard mapping</h2>
<p> If you care about having <a href="http://nathanaeljones.com/10941_Designing_URIs">friendly URLs</a> and you're not running IIS7 yet, you'll need to 'wildcard map' all incoming extensions to aspnet_isapi.dll. There isn't any other way to capture extension-less URLs. Compression in IIS6 is also by extension, so extension-less files will need to implement gzip inside the .aspx file (thankfully, it's easy - I'll try to blog on that as well). There is <strong>not</strong> a workaround to wildcard mapping that I know of. If you don't care about postbacks, you can use the <a href="http://msmvps.com/blogs/omar/archive/2007/04/29/serve-extensionless-url-from-asp-net-without-using-isapi-module-or-iis-6-wildcard-mapping.aspx">
404 hack</a>, but I wouldn't recommend it.</p>

<h2>URL rebasing</h2>
<p>As I'm sure everybody knows, relative paths are always relative to folder of the document URL. So what if the document URL is at a different folder level (/contact/ instead of /contact.aspx), or a different folder entirely? ASP.NET keeps track of the original physical location of the .aspx, .ascx, and .master in a property called AppRelativeTemplateSourceDirectory. (Content Pages, Master Pages, and User Controls are all TemplateControl derivatives). If your page/control is declaratively defined (.aspx, .ascx, .master), then this property is set. If they're in App_Code, then child controls will resolve paths relative to the root.

There are two relevant methods that are called automatically by server controls. ResolveURL and ResolveClientUrl (both members of the Control class).

The first step both take is to take the relative URL and combine it with AppRelativeTemplateSourceDirectory to get and application-relative URL (if it is not one already). 

ResolveUrl then combines the app-relative virtual path with HttpRuntime.AppDomainAppVirtualPathString using HTTPResponse.ApplyAppPathModifier() to get the domain-relative, 'absolute' path. 

ResolveClientUrl instead makes the url relative to Context.Request.ClientBaseDir.VirtualPathString;





URL rebasing
  



<p>I've tried most approaches, I think - I've overridden DefaultHttpHandler, PageFactory, used IIS 404 redirects, used a custom form tag derivative, control adapters, and the <base> tag. 



]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>114</wp:post_id>
		<wp:post_date>2008-05-16 16:52:37</wp:post_date>
		<wp:post_date_gmt>2008-05-16 20:52:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>url-rewriting</wp:post_name>
		<wp:status>pending</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>url</wp:meta_key>
			<wp:meta_value><![CDATA[10911_URL_Rewriting]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>PathInfo Woes</title>
		<link>http://nathanaeljones.com/117/pathinfo-woes/</link>
		<pubDate>Mon, 19 May 2008 21:06:27 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/?p=117</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- div.scrollArea{ overflow:scroll; } td{ border-top:1px solid #eaeaea; padding:5px; } thead td{ font-weight:bold;

} span.pathinfo{ color:red; } -->

ASP.NET introduces a new URI component to the equation: PathInfo. It's not very well known, possibly due to poor implementation and consequent lack of usefulness. However, it is important that you understand how it can affect you.

Browsers (and the System.Uri class) only split paths into two pieces: the path and the query string. ASP.NET, however, splits the path once again, into the Request.FilePath and the Request.PathInfo properties. In the following three urls, the page test.aspx is always successfully executed, even though <strong>test.aspx</strong> is not immediately followed by a question mark. The string between "test.aspx" and "?" is stored in the Request.PathInfo property, and is <strong><em>not</em></strong> used when trying to find the appropriate .aspx file to execute.
<div class="scrollArea">
<table border="0">
<thead>
<tr>
<td class="property">Request.RawUrl</td>
<td class="c1">/UrlTests/content/pages/test.aspx<span class="pathinfo">/folder/file</span>?querystring</td>
<td class="c2">/UrlTests/content/pages/test.aspx<span class="pathinfo">/</span>?querystring</td>
<td class="c3">/UrlTests/content/pages/test.aspx?querystring</td>
</tr>
</thead>
<tbody>
<tr>
<td class="property">Request.FilePath</td>
<td class="c1">/UrlTests/content/pages/test.aspx</td>
<td class="c2">/UrlTests/content/pages/test.aspx</td>
<td class="c3">/UrlTests/content/pages/test.aspx</td>
</tr>
<tr>
<td class="property">Request.Path</td>
<td class="c1">/UrlTests/content/pages/test.aspx<span class="pathinfo">/folder/file</span></td>
<td class="c2">/UrlTests/content/pages/test.aspx<span class="pathinfo">/</span></td>
<td class="c3">/UrlTests/content/pages/test.aspx</td>
</tr>
<tr>
<td class="property">Request.PathInfo</td>
<td class="c1"><span class="pathinfo">/folder/file</span></td>
<td class="c2"><span class="pathinfo">/</span></td>
<td class="c3">(empty string)</td>
</tr>
<tr>
<td class="property">Control.ResolveClientUrl("test.jpg")</td>
<td class="c1">/UrlTests/content/pages/test.jpg</td>
<td class="c2">/UrlTests/content/pages/test.jpg</td>
<td class="c3">/UrlTests/content/pages/test.jpg</td>
</tr>
<tr>
<td class="property">Control.ResolveUrl("test.jpg")(Improper path resolution)</td>
<td class="c1">test.jpg</td>
<td class="c2">test.jpg</td>
<td class="c3">test.jpg</td>
</tr>
<tr>
<td class="property">Relative path <em>needed</em> by browser</td>
<td class="c1">../../test.jpg</td>
<td class="c2">../test/jpg</td>
<td class="c3">test.jpg</td>
</tr>
</tbody></table>
</div>
Note: If you name a folder <strong>folder.aspx</strong> and try to access a file inside it, ASP.NET will try to find the file folder.aspx, and a <strong>404</strong> will occur. From what I can tell (on IIS7), only the .aspx extension will cause this to occur. The actual parsing is done in native code (UnsafeIISMethods.MgdGetUriPath(this._context, out ptr, out num, includePathInfo)), so I can only guess by trial and error.

PathInfo <strong><em>would</em></strong> be a wonderful way to do simple URL rewriting, since it allows basic query strings to be easily reformatted as "virtual" folders and files. The first set of paths both cleaner and more SEO-friendly than the second.
<h3>Using Reqeust.PathInfo</h3>
<ul>
	<li>http://www.site.com/products.aspx/Wireless</li>
	<li>http://www.site.com/products.aspx/Bluetooth</li>
	<li>http://www.site.com/products.aspx/Cat6</li>
	<li>http://www.site.com/blog.aspx/5020/Firebug_Rated_Web_Developer_Tool_Of_The_Year</li>
</ul>
<h3>Using Request.QueryString</h3>
<ul>
	<li>http://www.site.com/products.aspx?category=Wireless</li>
	<li>http://www.site.com/products.aspx?category=Bluetooth</li>
	<li>http://www.site.com/products.aspx?category=Cat6</li>
	<li>http://www.site.com/blog.aspx?id=5020&amp;title=Firebug_Rated_Web_Developer_Tool_Of_The_Year</li>
</ul>
<strong>Don't get your hopes up, though. </strong>ASP.NET rebases all paths relative to Request.FilePath, while the browser is expecting paths relative to Request.Path. Hyperlinks, CSS files, images, and script files will all be broken.
<h2>Side effects</h2>
Since PathInfo allows requests like <strong>/UrlTests/content/pages/test.aspx/folder/file</strong> to still reach <strong>test.aspx</strong>, most ASP.NET sites can be linked to in a manner that will cause all file references to break. In fact, if a user accidentally types or adds a "/" after any URL ending in .aspx, your site will fall apart. I want my web sites to look and act professional in all situations, so I'm not too fond of Request.PathInfo. However, you can circumvent this issue by using a good URL rewriting library and configuring it correctly.

Here are a few sites which break when accessed in this manner
<ul>
	<li><a href="http://asp.net/default.aspx">http://asp.net/default.aspx</a> versus <a href="http://asp.net/default.aspx/">http://asp.net/default.aspx/</a></li>
	<li><a href="http://silverlight.net/default.aspx">http://silverlight.net/default.aspx</a> versus <a href="http://silverlight.net/default.aspx/">http://silverlight.net/default.aspx/</a></li>
</ul>
<span style="color:red;">Update Feb 9, 09: The following sites have been 'fixed' since the posting of this article</span>
<ul>
	<li><a href="http://codeplex.com/default.aspx">http://codeplex.com/default.aspx</a> versus <a href="http://codeplex.com/default.aspx/path/info/link">http://codeplex.com/default.aspx/path/info/link</a>.</li>
	<li><a href="http://www.microsoft.com/expression/default.aspx">http://www.microsoft.com/expression/default.aspx</a> versus <a href="http://www.microsoft.com/expression/default.aspx/">http://www.microsoft.com/expression/default.aspx/</a></li>
	<li><a href="http://www.microsoft.com/en/us/default.aspx">http://www.microsoft.com/en/us/default.aspx</a> versus <a href="http://www.microsoft.com/en/us/default.aspx/">http://www.microsoft.com/en/us/default.aspx/</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[ASP.NET introduces a new URI component to the equation: PathInfo. It's not very well known, possibly due to poor implementation and consequent lack of usefulness. However, it is important that you understand how it can affect you.]]></excerpt:encoded>
		<wp:post_id>117</wp:post_id>
		<wp:post_date>2008-05-19 17:06:27</wp:post_date>
		<wp:post_date_gmt>2008-05-19 21:06:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>pathinfo-woes</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="asp-net"><![CDATA[ASP.NET]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>url</wp:meta_key>
			<wp:meta_value><![CDATA[10961_PathInfo_Woes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>articlebanner</wp:meta_key>
			<wp:meta_value><![CDATA[<a href="~/products/asp-net-image-resizer/" runat="server"><img src="/content/00011131_ServersideImageResizingModuleforASPNET/ad2.jpg" runat="server" alt="Easy image resizing" /></a>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>The Query String</title>
		<link>http://nathanaeljones.com/118/the-query-string/</link>
		<pubDate>Tue, 20 May 2008 18:10:46 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/?p=118</guid>
		<description></description>
		<content:encoded><![CDATA[The query string is handled differently from the rest of the virtual path. It is neither URL decoded or case-normalized before it reaches ASP.NET, although each name-value pair is URL decoded before being stored in the Request.QueryString collection.

For the query string to be parsed correctly, the delimiters ?, &amp;, and = <em>cannot</em> be percent-encoded. Both names and values in the Request.QueryString collection go through exactly one URLDecode pass. Other properties in the Request class include the querystring in its original, URLEncoded form (if they were originally URL (percent) encoded).

Also, any strings that aren't parsed correctly are added to Request.QueryString[null] in comma-delimited format. (You can also access them as a string[] array using Request.QueryString.GetValues(null)). The NameValueCollection class isn't a string-to-string dictionary. It's more like an informal string-to-string[] dictionary. When you set a value like nvc["thiskey"]="thisvalue" , you are in overwrite mode. When you use nvc.add("thiskey","thisvalue"), you are in append mode. Calling nvc.add("thiskey","firstvalue"), then nvc.add("thiskey","lastvalue") will leave nvc["thiskey"] == "firstvalue,lastvalue".
<h3>Related links</h3>
<ul class="list">
	<li><a href="~/10941">URI Design</a></li>
	<li><a href="http://en.wikipedia.org/wiki/Uniform_Resource_Identifier">Wikipedia: Uniform Resource Identifier</a></li>
	<li><a href="http://en.wikipedia.org/wiki/URL_normalization">Wikipedia: URL Normalization</a></li>
	<li><a href="http://en.wikipedia.org/wiki/Percent-encoding ">Wikipedia: Percent encoding</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[The query string is handled differently from the rest of the virtual path. It is neither URL decoded or case-normalized before it reaches ASP.NET, although each name-value pair is URL decoded before being stored in the Request.QueryString collection.]]></excerpt:encoded>
		<wp:post_id>118</wp:post_id>
		<wp:post_date>2008-05-20 14:10:46</wp:post_date>
		<wp:post_date_gmt>2008-05-20 18:10:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-query-string</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="asp-net"><![CDATA[ASP.NET]]></category>
		<category domain="category" nicename="general-programming"><![CDATA[General Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>url</wp:meta_key>
			<wp:meta_value><![CDATA[10971_The_Query_String]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Differences between root and subfolder applications</title>
		<link>http://nathanaeljones.com/?p=121</link>
		<pubDate>Tue, 03 Jun 2008 23:20:56 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/?p=121</guid>
		<description></description>
		<content:encoded><![CDATA[	

<style type="text/css">
dt { float:left; display:inline; padding-right:25px; font-weight:bold;}
dd {  }
h3 {margin-top:2em;}

dl{
border:1px solid #eaeaea;
padding:15px;
margin-top:15px;
font-size:8pt;
overflow:scroll;
}
span.querystring {
color:red;
}

span.pathinfo{
color:green;
}

span.filepath{
color:blue
}

table.rootVsSubfolder{
font-size:7.5pt;
color:black;

}
table.rootVsSubfolder td{
border-top: 1px solid gray;
padding:5px;
text-align:center;
}
table.rootVsSubfolder thead td{

font-weight:bold;
}
td.property{
border-right: 1px solid gray;
padding-left:0px;
}
td.root{
border-right: 1px solid gray;
}
td.subfolder{
padding-right:0px;
}
</style>


<p>IIS allows websites to be hosted in virtual folders that do not correspond to the on-disk organization. For example, if you publish a website located in C:\Websites\MyWebsite2\ on virtual folder /Web1/Test/, The URI to access it would be http://mycomputer/Web1/Test/.</p>

<p>The following table contains data from single web site being accessed from two different locations. One channel is the virtual folder /URLTests on port 80, and the other is the root website on port 87.</p>



<table class="rootVsSubfolder" cellpadding="0" cellspacing="0">
<thead>
<tr><td class="property">
Property</td>
<td class="root" width="100px">http://localhost:87/content/pages/ test.aspx/pathinfo?query=value</td>
<td class="subfolder">http://localhost/UrlTests/content/pages/ test.aspx/pathinfo?query=value</td>
</tr>
</thead>
<tbody>
<tr><td class="property">	Request. ApplicationPath	</td><td class="root">	/	</td><td class="subfolder">	/UrlTests	</td></tr>
<tr><td class="property">	Request. RawUrl	</td><td class="root">	/content/Pages/test.aspx/pathinfo?query=value	</td><td class="subfolder">	/UrlTests/content/Pages/test.aspx/pathinfo?query=value	</td></tr>
<tr><td class="property">	Request. AppRelativeCurrent ExecutionFilePath	</td><td class="root">	~/content/Pages/test.aspx	</td><td class="subfolder">	~/content/Pages/test.aspx	</td></tr>
<tr><td class="property">	Request.Current ExecutionFilePath	</td><td class="root">	/content/Pages/test.aspx	</td><td class="subfolder">	/UrlTests/content/Pages/test.aspx	</td></tr>
<tr><td class="property">	Request. FilePath	</td><td class="root">	/content/Pages/test.aspx	</td><td class="subfolder">	/UrlTests/content/Pages/test.aspx	</td></tr>
<tr><td class="property">	Request. Path	</td><td class="root">	/content/Pages/test.aspx/pathinfo	</td><td class="subfolder">	/UrlTests/content/Pages/test.aspx/pathinfo	</td></tr>
<tr><td class="property">	Request. PathInfo	</td><td class="root">	/pathinfo	</td><td class="subfolder">	/pathinfo	</td></tr>
<tr><td class="property">	Request. PhysicalApplicationPath	</td><td class="root">	C:\Users\Nathanael\Desktop\WebApplication2\	</td><td class="subfolder">	C:\Users\Nathanael\Desktop\WebApplication2\	</td></tr>
<tr><td class="property">	Request. PhysicalPath	</td><td class="root">	C:\Users\Nathanael\Desktop\WebApplication2 \content\Pages\test.aspx	</td><td class="subfolder">	C:\Users\Nathanael\Desktop\WebApplication2 \content\Pages\test.aspx	</td></tr>
<tr><td class="property">	Request. Url.OriginalString	</td><td class="root">	http://localhost:87/content/Pages/ test.aspx/pathinfo?query=value	</td><td class="subfolder">	http://localhost:80/UrlTests/content/Pages/ test.aspx/pathinfo?query=value	</td></tr>
</tbody>
</table>
<p>
Note: CurrentExecutionFilePath (and the AppRelative version) both differ from FilePath with Server.Execute or Server.Transfer is used. CurrentExecutionFilePath changes to reflect the executing file, while FilePath remains unchanged. Spaces in the table above were inserted to allow wrapping of the text - the actual data contains no whitespace.
</p>

<p>This should illustrate why application-relative paths (~/file.aspx) should be used wherever possible - they permit the site to be hosted in virtual folder as well as in a site root. Can you imaging the maintenance costs if you needed to move your site, and were using absolute paths, such as (/vdir/file.aspx)? You may not currently need to host the site on a virtual folder for dev purposes, but what about 5 years from now when you want to keep the old system online in a subfolder of the new site?</p>

]]></content:encoded>
		<excerpt:encoded><![CDATA[IIS allows websites to be hosted in virtual folders that do not correspond to the on-disk organization.
]]></excerpt:encoded>
		<wp:post_id>121</wp:post_id>
		<wp:post_date>2008-06-03 19:20:56</wp:post_date>
		<wp:post_date_gmt>2008-06-03 23:20:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>differences-between-root-and-subfolder-applications</wp:post_name>
		<wp:status>pending</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>url</wp:meta_key>
			<wp:meta_value><![CDATA[11071_Differences_between_root_and_subfolder_applications]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>NullReferenceException in RewritePath</title>
		<link>http://nathanaeljones.com/?p=122</link>
		<pubDate>Mon, 02 Jun 2008 18:45:28 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/?p=122</guid>
		<description></description>
		<content:encoded><![CDATA[<p>If you are getting a NullReferenceException from RewritePath at ~/, or if image references break when your URLs end in /, you need hotfix <a href="http://support.microsoft.com/kb/911300">911300</a> or a subsequent update such as MS06-056.</p>
<p>I debugged this problem with MaxmimumASP about a year ago. Apparently, this patch comes with Visual Studio SP1, but wasn't released for the rest of the world (read: production servers) until several months later. Some hosts may still be missing the patch, so watch out.</p>
<div class="codeBox">
<h2>Object reference not set to an instance of an object.</h2>
<pre>
at System.Web.HttpContext.RewritePath(VirtualPath filePath, VirtualPath pathInfo, String queryString, 
    Boolean setClientFilePath)
at System.Web.HttpContext.RewritePath(String filePath, String pathInfo, String queryString, Boolean 
setClientFilePath)
at UrlRewritingNet.Web.UrlRewriteModule.OnPagePreInit(Object sender, EventArgs e)
at System.Web.UI.Page.OnPreInit(EventArgs e)
at fbs.PageBase.OnPreInit(EventArgs e) in c:\Websites\yf\app_code\BaseClasses\PageBase.cs:line 109
at System.Web.UI.Page.ProcessRequestMain(Boolean includeStagesBeforeAsyncPoint, Boolean 
    includeStagesAfterAsyncPoint)
</pre>
</div>

<p>
This happened when trying to rewrite http://youngfoundations.org/ to page http://youngfoundations.org/default.aspx. It's a pretty common scenario. Now, while subfolders such as http://youngfoundations.org/blog/ didn't throw an error, ASP.NET translated all of the image and hyperlink references incorrectly. But URLs ending in a non-slash character behaved fine.</p>
<p>There's a bit <a href="http://connect.microsoft.com/VisualStudio/feedback/ViewFeedback.aspx?FeedbackID=276542">more information</a> on the issue on Microsoft Connect, although I don't mention the subfolder issue.</p>
<p>Bottom line: If you see different behavior between dev and production, ask your hosting provider to update the ASP.NET runtime. I know mine (and others) test .NET patches for quite a while before installing them, since they often cause as many problems as they fix. Don't believe them if they say it's up-to-date. Get the *full* version number on System.Web.dll and compare it to yours. </p>




<h2>Related Microsoft Connect issues</h2>
<a href="https://connect.microsoft.com/VisualStudio/feedback/ViewFeedback.aspx?FeedbackID=276542">https://connect.microsoft.com/VisualStudio/feedback/ViewFeedback.aspx?FeedbackID=276542</a>
<a href="https://connect.microsoft.com/VisualStudio/feedback/ViewFeedback.aspx?FeedbackID=105061">https://connect.microsoft.com/VisualStudio/feedback/ViewFeedback.aspx?FeedbackID=105061</a> 
<a href="https://connect.microsoft.com/VisualStudio/feedback/ViewFeedback.aspx?FeedbackID=105149">https://connect.microsoft.com/VisualStudio/feedback/ViewFeedback.aspx?FeedbackID=105149</a>
<a href="https://connect.microsoft.com/VisualStudio/feedback/ViewFeedback.aspx?FeedbackID=103229">https://connect.microsoft.com/VisualStudio/feedback/ViewFeedback.aspx?FeedbackID=103229</a>
<a href="https://connect.microsoft.com/VisualStudio/feedback/ViewFeedback.aspx?FeedbackID=104436">https://connect.microsoft.com/VisualStudio/feedback/ViewFeedback.aspx?FeedbackID=104436</a>
<a href="https://connect.microsoft.com/VisualStudio/feedback/ViewFeedback.aspx?FeedbackID=104429">https://connect.microsoft.com/VisualStudio/feedback/ViewFeedback.aspx?FeedbackID=104429</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[If you are getting a NullReferenceException from RewritePath at ~/, or if image references break when your URLs end in /, you need hotfix 911300.]]></excerpt:encoded>
		<wp:post_id>122</wp:post_id>
		<wp:post_date>2008-06-02 14:45:28</wp:post_date>
		<wp:post_date_gmt>2008-06-02 18:45:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>nullreferenceexception-in-rewritepath</wp:post_name>
		<wp:status>pending</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>url</wp:meta_key>
			<wp:meta_value><![CDATA[10931_NullReferenceException_in_RewritePath]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Using a custom VirtualPathProvider can cause OutOfMemoryExceptions</title>
		<link>http://nathanaeljones.com/125/using-a-custom-virtualpathprovider-can-cause-outofmemoryexceptions/</link>
		<pubDate>Fri, 06 Jun 2008 18:30:33 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/?p=125</guid>
		<description></description>
		<content:encoded><![CDATA[Virtual path providers are awesome - you can serve a site from a .zip file, perform XSLT transformations to generate .aspx files as the compiler reads them, and do all sorts of unusual things. However, using them can make the StaticFileHandler buffer entire downloads in memory before sending the data to the client. (StaticFileHandler is used instead of an IIS callback (ExecuteUrl) if HTTP headers or cache policy has been modified during the pipeline).
<h2>History</h2>
About a year ago, I was in the process of designing and coding a CMS. My ultimate goal was to design a simple, file-based system that still had the full power and flexibility of a database-based CMS. One of the features I implemented was to make file downloads simple through a "?download=true" suffix on any file on the site. I did this by overriding DefaultHttpHander, and adding the following code within the BeginProccessRequest method.
<pre class="brush:c-sharp">if (context.Request.QueryString["download"] != null)
{
    if (!context.Request.QueryString["download"].Equals("false", StringComparison.OrdinalIgnoreCase))
    {
        //yrl is a custom virtual path class. yrl.Current is the currently executing path, and
        //yrl.Current.Name returns just the filename (no path or querystring) of the current file. Ex. "TestProject.zip"

        //Content-disposition:attachement is the only really good way to force browsers to show the
        // "Open or Save" dialog box for a link. Setting the mime type to octet-stream doesn't always work for IE,
        //and can cause problems. This is the "correct" way to do it.
        context.Response.AppendHeader("Content-disposition", "attachment; filename=\"" + yrl.Current.Name + "\"");

        //Allow caching of this file at the server, proxy, and client. (An F5 will re-request, of course).
        context.Response.Cache.SetCacheability(HttpCacheability.NoCache);
        context.Response.Cache.SetCacheability(HttpCacheability.Public);
    }
}

//Default handler. IIS6 (ExecuteUrl) or StaticFileHandler, depending upon response.CanExecuteUrlForEntireResponse

//If AppendHeader has been used, StaticFileHandler will be invoked within the base class method, instead of passing the request to IIS6. If you are running under Cassini(Visual Studio) or IIS5.1(XP), StaticFileHandler is always used.
return base.BeginProcessRequest(context, callback, state);</pre>
It worked great, and I was happy. I wanted to avoid a download.aspx page, since that circumvents the URL authorization system, and would force me to write and maintain a duplicate security system. By putting the command in the querystring, the request still has to go through the pipeline and meet all of the authentication and authorization checks.

A month or so later, I decided to implement a XSLT translation layer (using a VirtualPathProvider) to allow .aspx files to be generated (on request, not to disk) from .xml files. It was a useful system, and allowed us to create a simplified XML syntax that didn't have all the redundant data we were needing in the .aspx files.

I have to admit the VirtualPathProvider fallthrough system really threw me for a loop. I expected to inherit from MapPathBasedVirtualPathProvider, and override the methods I needed. However, MapPathBasedVirtualPathProvider was marked <em>internal</em>. The base class VirtualPathProvider actually has its own fall-through system built-in. If the subclass hasn't handled the GetFile request, then the base class will look up the next provider in the chain and send the request along.

The XSTLVirtualPathProvider didn't change any behavior for normal files, but on files ending in ".xml.aspx", an XSLTVirtualFile instance was returned instead of the normal MapPathBasedVirtualFile instance. The XSLTVirtualFile.Open() method would read the XSLT stylesheet tag from the file, transform the document, and return the result.

It worked great - but a few weeks later I started getting e-mails from the monitoring system. OutOfMemoryExceptions were happening all over the place, particularly when users were downloading large MP3s. I was a bit surprised - after profiling the memory use under controlled conditions, I discovered that the <em>entire file</em> was getting read into memory (separately) for each client request!
<div class="codeBox">
<h1>System.OutOfMemoryException in System.Web.HttpResponseUnmanagedBufferElement..ctor()</h1>
<h1>System.OutOfMemoryException</h1>
Insufficient memory to continue the execution of the program.
<ul style="list-style-type:disc; padding-left:25px">
	<li>System.Web.HttpResponseUnmanagedBufferElement..ctor()</li>
	<li>System.Web.HttpWriter.BufferData(Byte[] data, Int32 offset, Int32 size, Boolean needToCopyData)</li>
	<li>System.Web.HttpWriter.WriteFromStream(Byte[] data, Int32 offset, Int32 size)</li>
	<li>System.Web.HttpWriter.WriteBytes(Byte[] buffer, Int32 index, Int32 count)</li>
	<li>System.Web.HttpResponse.WriteVirtualFile(VirtualFile vf)</li>
	<li>System.Web.StaticFileHandler.RespondUsingVirtualFile(String virtualPath, HttpResponse response)</li>
	<li>System.Web.StaticFileHandler.ProcessRequestInternal(HttpContext context)</li>
	<li>System.Web.DefaultHttpHandler.BeginProcessRequest(HttpContext context, AsyncCallback callback, Object state)</li>
	<li>fbs.Handlers.CustomDefaultHandler.BeginProcessRequest(HttpContext context, AsyncCallback callback, Object state)</li>
	<li>System.Web.HttpApplication.CallHandlerExecutionStep.System.Web.HttpApplication.IExecutionStep.Execute()</li>
	<li>System.Web.HttpApplication.ExecuteStep(IExecutionStep step, Boolean&amp; completedSynchronously)</li>
</ul>
</div>
At this point I sent an e-mail to <a href="http://weblogs.asp.net/scottgu/">Scott Guthrie</a> to ask for a workaround. He looped in <a href="http://blogs.msdn.com/dmitryr/">Dmitry Robsman</a> and <a href="http://blogs.msdn.com/tmarq/">Thomas Marquardt</a> to help me with the problem. I knew the problem was within StaticFileHandler, but Dmitry helped me nail it down the the VirtualPathProvider clause.
<h3>StaticFileHandler.ProccessRequestInternal excerpt, using <a href="http://www.aisto.com/roeder/dotnet/">Reflector</a></h3>
<pre class="brush:c-sharp">//HostingEnvironment.UsingMapPathBasedVirtualPathProvider returns false if you have a custom VPP
if (!HostingEnvironment.UsingMapPathBasedVirtualPathProvider)
{
    //Buffers entire stream in memory, then writes to the response.
    RespondUsingVirtualFile(request.FilePath, response);
}
else
{
     //Stream data from disk, don't buffer in memory. (In ASP.NET 1.0, this path also buffered entirely in memory)
    ....
}</pre>
As you can see, StaticFileHandler is being very heavy handed. If any VirtualPathProvider is used at all, the "buffer all" path is taken. Since 99.99% of the site's requests were just MapPathBasedVirtualFile requests, this is really inefficient. And if you have high server load, or a few large files, that line of code can take your server down.

Since I really needed the ?download=true feature and the XSLT translation, I was in a pickle. I needed downloads to be secured through ASP.NET (Yes, I was using wildcard mapping). I needed the same file to be played through the browser via one link, and downloaded through another. And I needed the XSLT translation.

I asked if StaticFileHandler could be changed to check the type of the VirtualFile instance, instead of the VirtualPathProvider. Something like this:
<pre class="brush:c-sharp">//This should check for null from GetFile.
if (!HostingEnvironment.VirtualPathProvider.GetFile(filePath) is MapPathBasedVirtualFile)
{
    //Buffers entire stream in memory, then writes to the response.
    RespondUsingVirtualFile(request.FilePath, response);
}
else
{
    //Stream data from disk, don't buffer in memory. (In ASP.NET 1.0, this path also buffered entirely in memory)
    //....
}</pre>
Thomas Marquardt came to the rescue, did far better than just adding the granular file check! Even though he is an incredibly busy guy, he rewrote StaticFileHandler into a seriously cool class. Within two days. The final hotfix added support for custom VirtualPathProviders, pause/resume support (range requests), kernel-mode caching, and better handling of older IIS versions.
<blockquote>
<ul style="list-style-type:disc; padding-left:25px">
	<li>SFH now supports Range requests.  It also supports the If-Range header.</li>
	<li>SFH now supports kernel mode caching when the status is 200.  (Note that range requests receive a 206 when satisfied, or a 416 when not satisfied, and are not cached at the server.  Also, HTTP.sys won't cache responses larger than UriMaxUriBytes, the default is 262144 bytes).</li>
	<li>If a custom VirtualPathProvider (VPP) is used and GetFile returns a MapPathBasedVirtualFile, SFH will use HttpResponse.TransmitFile (when hosted on IIS) instead of reading the file into memory (as is currently done in v2.0).</li>
	<li>If the default VPP is used, SFH will always use TransmitFile on IIS 5.x, IIS 6.0 and IIS 7.0.  For all other platforms (non-IIS), HttpResponse.WriteFile is used.  Because WriteFile reads the file into memory, SFH will not perform well on these platforms when the files are sufficiently large.</li>
</ul>
</blockquote>
I have to say I've never had such a good support experience with any other company. It took less than 8 days from my first e-mail before I received a patch, and the first version worked flawlessly. In the last few years I've had the privilege of communicating with many people in the ASP.NET development team, the documentation team, and in the support division. They are all really top-notch.

I want to publicly thank Scott Guthrie, Nikhil Kothari, Dmitry Robsman, and Thomas Marquardt for their help on this issue and others. I and many other developers are thankful for the blogs they operate, and the assistance they provide on the forums and in blog comments.

I also want to thank Marc Gelormino for his help. He's always been helpful in clarifying things the documentation is ambiguous on, and has been steadily improving them.

I want to thank Radomir Zaric for his help in the process of getting an official hotfix. He may have written the <a href="http://support.microsoft.com/kb/947461">KB article</a> as well.

You can read more about the patch at <a href="http://support.microsoft.com/kb/947461">http://support.microsoft.com/kb/947461</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[Virtual path providers are awesome - you can serve a site from a .zip file, perform XSLT transformations to generate .aspx files as the compiler reads them, and do all sorts of unusual things. However, using them can make the StaticFileHandler buffer entire downloads in memory before sending the data to the client. ]]></excerpt:encoded>
		<wp:post_id>125</wp:post_id>
		<wp:post_date>2008-06-06 14:30:33</wp:post_date>
		<wp:post_date_gmt>2008-06-06 18:30:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>using-a-custom-virtualpathprovider-can-cause-outofmemoryexceptions</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="asp-net"><![CDATA[ASP.NET]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>url</wp:meta_key>
			<wp:meta_value><![CDATA[11081_Using_a_custom_VirtualPathProvider_can_cause_OutOfMemoryExceptions]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ASP.NET Path Rebasing</title>
		<link>http://nathanaeljones.com/?p=126</link>
		<pubDate>Fri, 06 Jun 2008 21:36:40 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/?p=126</guid>
		<description></description>
		<content:encoded><![CDATA[	

<h2>
Path resolution in ASP.NET</h2>

<p>ASP.NET is very inconsistent about where it applies the path resolution mentioned above.</p>

<ul>

     <li> &lt;link&gt; tags in the head section get resolved – but only if they are in a master page or a stand-alone .aspx page. Content pages are out of luck. The HtmlHead control is in charge of doing the custom parsing needed by the <head> section, and it can’t cross the ContentPlaceHolder boundary. Fortunately, that problem can be fixed with a good dose of regular expressions and control tree manipulation. I'll be posting the fix soon.
         <ul> <li>You can add CSS references in the code-behind. Create a new instance of HtmlLink, configure it, and add it to the Page.Header.Controls collection.</li></ul></li>
    <li>

      &lt;script&gt; tags don’t. Thanks to Microsoft, the &lt;script&gt; tag is also used to embed server-side scripts. If you add runat=”server” to your javascript reference, ASP.NET will try to compile it as C# or VB.Net.
          <ul><li> Use the Page.ClientScript class to add JavaScript includes and inline scripts. Watch out, though – JavaScript dependencies can’t be out of order, and they’re placed in the <body> of the page.
          </li><li>

            You can also create an HtmlGenericControl with a tag name of “script”, and assign the appropriate attributes. You will need to ResolveClientUrl() your path, though.</li>
          <li>An asp:Literal control is often the solution for inline scripts. I like using a StringBuilder or StringWriter to concatenate the data.</li>
</ul></li>
    <li> Certain attributes on server-side controls are resolved:
          <ul><li>

            Asp:Image: ImageUrl
          </li><li>

            img (runat=”server”): src
          </li><li>
            asp:Hyperlink: NavigateUrl
          </li><li>

            a (runat=”server”): href
          </li><li>

            Most other server-side control attributes that are supposed to contain paths
</li>
</ul>
</li>
</ul>
<p>
If you want to control or modify the output of href and src tags, Control Adaptors are your best choice. I use this technique to programmatically expand links like ~/10300 to ~/10300_The_False_Light. This makes maintenance much easier.</p>

<p>Many blogs recommend using inline ASP.NET code like &lt;% ResolveClientUrl (“~/scripts/javascript.js”) %>. I don’t recommend this, because inline code puts your page into a mode that restricts control hierarchy modifications. I recommend using a Literal, a HtmlGenericControl, or the Attributes collection instead, in your code-behind.</p>

How path resolution is performed:

Paths matching the above criteria are assumed to specify a physical location relative to the current TemlateControl.

Example files:

    *

      ~/MasterPages/Main.master
         1.

            References “../img/logo.gif”
         2.

            References “~/css/universal.css”
    *

      ~/img/logo.gif
    *

      ~/img/rounded-corner.gif
    *

      ~/css/universal.css
         1.

            References ../img/rounded-corner.gif
    *

      ~/ContentPage1.aspx
         1.

            Refereneces “MasterPages/Main.master”
         2.

            References “~/mods/UserControl1.ascx”
    *

      ~/mods/UserControl1.ascx
         1.

            References “images/bg_pattern.png”
    *

      ~/mods/images/bg_pattern.png

In this scenario, ContentPage1.aspx is the real container. Both .master and .ascx files are actually types of user controls.

Main.master, UserControl1.ascx, and ContentPage1.aspx are all TemplateControls. When a path is resolved within them, the AppRelativeTemplateSourceDirectory property is used to determine the original base path that URIs are based on. The AppRelativeTemplateSource directory is different for each of Main.master, UserControl1.ascx, and ContentPage1.aspx. After each path is expanded to a virtual path, it is made relative again, but this time it is made relative to ContentPage1.aspx.

The output from ContentPage1.aspx would include the paths in this form:

Css/universal.css

Img/logo.gif

Mods/images/bg_pattern.png

Paths in universal.css would remain unchanged. No translation is needed anyway, as the browser will resolve those paths relative to the CSS file itself.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>126</wp:post_id>
		<wp:post_date>2008-06-06 17:36:40</wp:post_date>
		<wp:post_date_gmt>2008-06-06 21:36:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>asp-net-path-rebasing</wp:post_name>
		<wp:status>pending</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>url</wp:meta_key>
			<wp:meta_value><![CDATA[11091_ASP_NET_Path_Rebasing]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Types of ASP.NET paths</title>
		<link>http://nathanaeljones.com/129/types-of-asp-net-paths/</link>
		<pubDate>Mon, 09 Jun 2008 11:00:12 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/?p=129</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- #content ul{  list-style-type:disc;  padding-left:20px; } span.examplePath{ color:green; } -->

ASP.NET is primarily concerned with "virtual paths", the portion of the path following the hostname or port number. When working with ASP.NET, you must understand the following types of URIs thoroughly, and know how they are handled by ASP.NET and the browser.
<ul>
	<li> <strong>Absolute paths.</strong> Ex. <span class="examplePath">http://mycomputer/Web1/Test/images/companylogo.png</span>
<ul>
	<li>ASP.NET leaves this type of path alone – it's already in the least ambiguous form possible. Browsers understand absolute paths very well.</li>
	<li>Only use these for referencing external websites. They're expensive to maintain.</li>
</ul>
</li>
	<li><strong>Root-relative virtual paths.</strong> Ex. <span class="examplePath">/Web1/Test/images/companylogo.png</span>
<ul>
	<li> ASP.NET leaves these alone too. Browsers resolve the path client-side by combining it with the domain of the parent document.</li>
	<li>I don't ever recommend hard-coding these into a website - use application-relative paths or relative paths instead. <strong>Note: These are also called "absolute virtual paths" and "domain-relative paths".</strong></li>
</ul>
</li>
	<li><strong>Application-relative paths.</strong> Ex. <span class="examplePath">~/images/companylogo.png</span>
<ul>
	<li>Browsers don't have a clue what the tilde(~) means, so server-side path resolution is required. Server-side, the tilde is shorthand for HttpRuntime.AppDomainAppVirtualPath.</li>
	<li>ASP.NET rebases these as client-side relative paths on some control attributes, but you must remember to use <strong>runat="server"</strong>.</li>
	<li>This is the type of path you should use if a relative path doesn't make sense.</li>
</ul>
</li>
	<li><strong>Relative paths.</strong> Ex: <span class="examplePath">../images/logo.png</span>
<ul>
	<li> There are two types of relative paths: server-side and client-side. They aren't syntactically different, but server-side paths are relative to the containing source file, and client-side paths are relative to the address bar or parent markup file.</li>
	<li>Server-side relative paths are assumed to be relative to the containing .master, .ascx, or .aspx file location. These must be rebased into client-side relative paths when rendered using ResolveClientUrl(). Most ASP.NET controls do this for you. You should use this type of path whenever you are referencing a related file that won't move in relation to the current file.</li>
	<li>Client-side relative paths are relative to the parent URL, usually the address bar. If you want to reference an image on an html page, you must use a path that is relative to the address bar location of the html page. If you want to reference a image from within a .css file, you must use a path that is <strong>relative to the .css file.</strong> Paths inside javascript files are <strong>not</strong> relative to the javascript source location, though. They must be relative to the document the script is executing in, the address bar.</li>
</ul>
</li>
	<li><strong>Fragment and Javascript paths.</strong> Ex. <span class="examplePath">#section2</span> or <span class="examplePath">javascript:OpenPopup();</span>
<ul>
	<li>ASP.NET leaves these alone. The browser is not supposed to create a new request when one of these is clicked, but to simply perform the action or navigation within the current document.</li>
	<li> Fragments never appear in a HTTP request. They are only for the browser's benefit, and are stripped off before the path is sent to ASP.NET.</li>
</ul>
</li>
</ul>
Note - When I say that ASP.NET leaves a path alone, I mean that it doesn't do any path rebasing. ASP.NET will still do some attribute encoding on the path if it is embedded in a hyperlink.]]></content:encoded>
		<excerpt:encoded><![CDATA[ASP.NET is primarily concerned with "virtual paths", the portion of the path following the hostname or port number. When working with ASP.NET, you must understand the following types of URIs thoroughly, and know how they are handled by ASP.NET and the browser.]]></excerpt:encoded>
		<wp:post_id>129</wp:post_id>
		<wp:post_date>2008-06-09 07:00:12</wp:post_date>
		<wp:post_date_gmt>2008-06-09 11:00:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>types-of-asp-net-paths</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asp-net"><![CDATA[ASP.NET]]></category>
		<category domain="category" nicename="asp-net"><![CDATA[ASP.NET]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>url</wp:meta_key>
			<wp:meta_value><![CDATA[10981_Types_of_ASP_NET_paths]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1163</wp:comment_id>
			<wp:comment_author><![CDATA[Parminder]]></wp:comment_author>
			<wp:comment_author_email>parms3000@yahoo.co.uk</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>193.109.254.20</wp:comment_author_IP>
			<wp:comment_date>2010-07-12 05:27:28</wp:comment_date>
			<wp:comment_date_gmt>2010-07-12 09:27:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great article. 
 
When using &quot;Root-relative virtual paths&quot;, you mentioned adding the runat=server will make the system recognise the ~. 
 
Will using the runat=server make the system thrown in silly id classes into the tag that I am applying it to. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>4925</wp:comment_id>
			<wp:comment_author><![CDATA[Nathanael Jones]]></wp:comment_author>
			<wp:comment_author_email>nathanael.jones@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>74.132.4.252</wp:comment_author_IP>
			<wp:comment_date>2010-10-04 12:20:59</wp:comment_date>
			<wp:comment_date_gmt>2010-10-04 16:20:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yes, ID classes will be generated, but I&#039;ve posted another article on how to remove those with a control adaptor (not just from links, but controls also). ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1163</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7055</wp:comment_id>
			<wp:comment_author><![CDATA[Mesa Arizona Computer Repair]]></wp:comment_author>
			<wp:comment_author_email>264Staie@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mesaarizonacomputerrepair.com</wp:comment_author_url>
			<wp:comment_author_IP>64.191.76.87</wp:comment_author_IP>
			<wp:comment_date>2011-09-07 14:46:53</wp:comment_date>
			<wp:comment_date_gmt>2011-09-07 18:46:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good job. Where can you verify this information anyone know??]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1315421213.8029";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:107:{s:15:"comment_post_ID";s:3:"129";s:14:"comment_author";s:28:"Mesa Arizona Computer Repair";s:20:"comment_author_email";s:18:"264Staie@gmail.com";s:18:"comment_author_url";s:40:"http://www.mesaarizonacomputerrepair.com";s:15:"comment_content";s:61:"Good job. Where can you verify this information anyone know??";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:12:"64.191.76.87";s:10:"user_agent";s:85:"Mozilla/5.0 (Windows; U; Windows NT 5.1; pl; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3";s:8:"referrer";s:25:"http://nathanaeljones.com";s:4:"blog";s:25:"http://nathanaeljones.com";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:53:"http://nathanaeljones.com/129/types-of-asp-net-paths/";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"failed";s:11:"POST_author";s:28:"Mesa Arizona Computer Repair";s:10:"POST_email";s:18:"264Staie@gmail.com";s:8:"POST_url";s:40:"http://www.mesaarizonacomputerrepair.com";s:12:"POST_comment";s:61:"Good job. Where can you verify this information anyone know??";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:3:"129";s:19:"POST_comment_parent";s:1:"0";s:15:"SERVER_SOFTWARE";s:17:"Microsoft-IIS/7.0";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:21:"PHP_FCGI_MAX_REQUESTS";s:5:"10000";s:5:"PHPRC";s:18:"C:Program FilesPHP";s:15:"ALLUSERSPROFILE";s:13:"C:ProgramData";s:7:"APPDATA";s:50:"C:Windowssystem32configsystemprofileAppDataRoaming";s:11:"APP_POOL_ID";s:13:"ndj-wordpress";s:18:"CommonProgramFiles";s:27:"C:Program FilesCommon Files";s:12:"COMPUTERNAME";s:6:"DED793";s:7:"ComSpec";s:24:"C:Windowssystem32cmd.exe";s:16:"FP_NO_HOST_CHECK";s:2:"NO";s:12:"LOCALAPPDATA";s:48:"C:Windowssystem32configsystemprofileAppDataLocal";s:20:"NUMBER_OF_PROCESSORS";s:1:"2";s:2:"OS";s:10:"Windows_NT";s:4:"Path";s:306:"C:Program FilesPHP;C:Windowssystem32;C:Windows;C:WindowsSystem32Wbem;C:Program FilesMySQLMySQL Server 5.0bin;C:WindowsSystem32WindowsPowerShellv1.0;c:Program FilesMicrosoft SQL Server100ToolsBinn;c:Program FilesMicrosoft SQL Server100DTSBinn;c:Program FilesMicrosoft SQL Server100ToolsBinnVSShellCommon7IDE";s:7:"PATHEXT";s:53:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC";s:22:"PROCESSOR_ARCHITECTURE";s:3:"x86";s:20:"PROCESSOR_IDENTIFIER";s:46:"x86 Family 15 Model 4 Stepping 1, GenuineIntel";s:15:"PROCESSOR_LEVEL";s:2:"15";s:18:"PROCESSOR_REVISION";s:4:"0401";s:11:"ProgramData";s:13:"C:ProgramData";s:12:"ProgramFiles";s:15:"C:Program Files";s:12:"PSModulePath";s:45:"C:Windowssystem32WindowsPowerShellv1.0Modules";s:6:"PUBLIC";s:13:"C:UsersPublic";s:11:"SystemDrive";s:2:"C:";s:10:"SystemRoot";s:9:"C:Windows";s:4:"TEMP";s:13:"C:WindowsTEMP";s:3:"TMP";s:13:"C:WindowsTEMP";s:10:"USERDOMAIN";s:15:"MAXIMUMASPLOCAL";s:8:"USERNAME";s:7:"DED793$";s:11:"USERPROFILE";s:36:"C:Windowssystem32configsystemprofile";s:6:"windir";s:9:"C:Windows";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:19:"HTTP_CONTENT_LENGTH";s:3:"278";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:20:"HTTP_ACCEPT_LANGUAGE";s:1:"*";s:9:"HTTP_HOST";s:18:"nathanaeljones.com";s:12:"HTTP_REFERER";s:25:"http://nathanaeljones.com";s:15:"HTTP_USER_AGENT";s:85:"Mozilla/5.0 (Windows; U; Windows NT 5.1; pl; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3";s:13:"DOCUMENT_ROOT";s:23:"C:Websitesndj-wordpress";s:15:"SCRIPT_FILENAME";s:43:"C:Websitesndj-wordpresswp-comments-post.php";s:20:"IIS_UrlRewriteModule";s:1:"1";s:12:"APPL_MD_PATH";s:16:"/LM/W3SVC/2/ROOT";s:18:"APPL_PHYSICAL_PATH";s:23:"C:Websitesndj-wordpress";s:9:"AUTH_TYPE";s:0:"";s:13:"AUTH_PASSWORD";s:0:"";s:9:"AUTH_USER";s:0:"";s:11:"CERT_COOKIE";s:0:"";s:10:"CERT_FLAGS";s:0:"";s:11:"CERT_ISSUER";s:0:"";s:17:"CERT_SERIALNUMBER";s:0:"";s:12:"CERT_SUBJECT";s:0:"";s:14:"CONTENT_LENGTH";s:3:"278";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:5:"HTTPS";s:3:"off";s:13:"HTTPS_KEYSIZE";s:0:"";s:19:"HTTPS_SECRETKEYSIZE";s:0:"";s:19:"HTTPS_SERVER_ISSUER";s:0:"";s:20:"HTTPS_SERVER_SUBJECT";s:0:"";s:11:"INSTANCE_ID";s:1:"2";s:18:"INSTANCE_META_PATH";s:11:"/LM/W3SVC/2";s:10:"LOCAL_ADDR";s:12:"66.29.219.39";s:10:"LOGON_USER";s:0:"";s:15:"PATH_TRANSLATED";s:43:"C:Websitesndj-wordpresswp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:11:"REMOTE_ADDR";s:12:"64.191.76.87";s:11:"REMOTE_HOST";s:12:"64.191.76.87";s:11:"REMOTE_PORT";s:5:"55972";s:11:"REMOTE_USER";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:11:"SERVER_NAME";s:18:"nathanaeljones.com";s:11:"SERVER_PORT";s:2:"80";s:18:"SERVER_PORT_SECURE";s:1:"0";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:3:"URL";s:21:"/wp-comments-post.php";s:14:"ORIG_PATH_INFO";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1315421213";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7154</wp:comment_id>
			<wp:comment_author><![CDATA[%]]></wp:comment_author>
			<wp:comment_author_email>salesa@splashuwimaging.com</wp:comment_author_email>
			<wp:comment_author_url>http://1package</wp:comment_author_url>
			<wp:comment_author_IP>81.93.163.25</wp:comment_author_IP>
			<wp:comment_date>2012-01-02 14:22:17</wp:comment_date>
			<wp:comment_date_gmt>2012-01-02 19:22:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Superb web page male , simply just ensure that it stays .]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1325532137.71";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:109:{s:15:"comment_post_ID";s:3:"129";s:14:"comment_author";s:1:"%";s:20:"comment_author_email";s:26:"salesa@splashuwimaging.com";s:18:"comment_author_url";s:9:"1 package";s:15:"comment_content";s:57:"Superb web page male , simply just ensure that it stays .";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:12:"81.93.163.25";s:10:"user_agent";s:106:"Mozilla/5.0 (Windows; U; Windows NT 5.1; de; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)";s:8:"referrer";s:25:"http://nathanaeljones.com";s:4:"blog";s:25:"http://nathanaeljones.com";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:53:"http://nathanaeljones.com/129/types-of-asp-net-paths/";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"failed";s:11:"POST_author";s:2:" %";s:10:"POST_email";s:26:"salesa@splashuwimaging.com";s:8:"POST_url";s:9:"1 package";s:12:"POST_comment";s:57:"Superb web page male , simply just ensure that it stays .";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:3:"129";s:19:"POST_comment_parent";s:1:"0";s:15:"SERVER_SOFTWARE";s:17:"Microsoft-IIS/7.0";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:21:"PHP_FCGI_MAX_REQUESTS";s:5:"10000";s:5:"PHPRC";s:18:"C:Program FilesPHP";s:15:"ALLUSERSPROFILE";s:13:"C:ProgramData";s:7:"APPDATA";s:50:"C:Windowssystem32configsystemprofileAppDataRoaming";s:11:"APP_POOL_ID";s:13:"ndj-wordpress";s:18:"CommonProgramFiles";s:27:"C:Program FilesCommon Files";s:12:"COMPUTERNAME";s:6:"DED793";s:7:"ComSpec";s:24:"C:Windowssystem32cmd.exe";s:16:"FP_NO_HOST_CHECK";s:2:"NO";s:12:"LOCALAPPDATA";s:48:"C:Windowssystem32configsystemprofileAppDataLocal";s:20:"NUMBER_OF_PROCESSORS";s:1:"2";s:2:"OS";s:10:"Windows_NT";s:4:"Path";s:306:"C:Program FilesPHP;C:Windowssystem32;C:Windows;C:WindowsSystem32Wbem;C:Program FilesMySQLMySQL Server 5.0bin;C:WindowsSystem32WindowsPowerShellv1.0;c:Program FilesMicrosoft SQL Server100ToolsBinn;c:Program FilesMicrosoft SQL Server100DTSBinn;c:Program FilesMicrosoft SQL Server100ToolsBinnVSShellCommon7IDE";s:7:"PATHEXT";s:53:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC";s:22:"PROCESSOR_ARCHITECTURE";s:3:"x86";s:20:"PROCESSOR_IDENTIFIER";s:46:"x86 Family 15 Model 4 Stepping 1, GenuineIntel";s:15:"PROCESSOR_LEVEL";s:2:"15";s:18:"PROCESSOR_REVISION";s:4:"0401";s:11:"ProgramData";s:13:"C:ProgramData";s:12:"ProgramFiles";s:15:"C:Program Files";s:12:"PSModulePath";s:45:"C:Windowssystem32WindowsPowerShellv1.0Modules";s:6:"PUBLIC";s:13:"C:UsersPublic";s:11:"SystemDrive";s:2:"C:";s:10:"SystemRoot";s:9:"C:Windows";s:4:"TEMP";s:13:"C:WindowsTEMP";s:3:"TMP";s:13:"C:WindowsTEMP";s:10:"USERDOMAIN";s:15:"MAXIMUMASPLOCAL";s:8:"USERNAME";s:7:"DED793$";s:11:"USERPROFILE";s:36:"C:Windowssystem32configsystemprofile";s:6:"windir";s:9:"C:Windows";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:18:"HTTP_CACHE_CONTROL";s:14:"max-age=259200";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:8:"HTTP_VIA";s:48:"1.0 zeus.vinterbro.com:8080 (squid/2.6.STABLE21)";s:19:"HTTP_CONTENT_LENGTH";s:3:"217";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:20:"HTTP_ACCEPT_LANGUAGE";s:1:"*";s:9:"HTTP_HOST";s:18:"nathanaeljones.com";s:12:"HTTP_REFERER";s:25:"http://nathanaeljones.com";s:15:"HTTP_USER_AGENT";s:106:"Mozilla/5.0 (Windows; U; Windows NT 5.1; de; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3 (.NET CLR 3.5.30729)";s:20:"HTTP_X_FORWARDED_FOR";s:12:"59.58.138.38";s:13:"DOCUMENT_ROOT";s:23:"C:Websitesndj-wordpress";s:15:"SCRIPT_FILENAME";s:43:"C:Websitesndj-wordpresswp-comments-post.php";s:20:"IIS_UrlRewriteModule";s:1:"1";s:12:"APPL_MD_PATH";s:16:"/LM/W3SVC/2/ROOT";s:18:"APPL_PHYSICAL_PATH";s:23:"C:Websitesndj-wordpress";s:9:"AUTH_TYPE";s:0:"";s:13:"AUTH_PASSWORD";s:0:"";s:9:"AUTH_USER";s:0:"";s:11:"CERT_COOKIE";s:0:"";s:10:"CERT_FLAGS";s:0:"";s:11:"CERT_ISSUER";s:0:"";s:17:"CERT_SERIALNUMBER";s:0:"";s:12:"CERT_SUBJECT";s:0:"";s:14:"CONTENT_LENGTH";s:3:"217";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:5:"HTTPS";s:3:"off";s:13:"HTTPS_KEYSIZE";s:0:"";s:19:"HTTPS_SECRETKEYSIZE";s:0:"";s:19:"HTTPS_SERVER_ISSUER";s:0:"";s:20:"HTTPS_SERVER_SUBJECT";s:0:"";s:11:"INSTANCE_ID";s:1:"2";s:18:"INSTANCE_META_PATH";s:11:"/LM/W3SVC/2";s:10:"LOCAL_ADDR";s:12:"66.29.219.39";s:10:"LOGON_USER";s:0:"";s:15:"PATH_TRANSLATED";s:43:"C:Websitesndj-wordpresswp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:11:"REMOTE_ADDR";s:12:"81.93.163.25";s:11:"REMOTE_HOST";s:12:"81.93.163.25";s:11:"REMOTE_PORT";s:5:"51551";s:11:"REMOTE_USER";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:11:"SERVER_NAME";s:18:"nathanaeljones.com";s:11:"SERVER_PORT";s:2:"80";s:18:"SERVER_PORT_SECURE";s:1:"0";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.0";s:3:"URL";s:21:"/wp-comments-post.php";s:14:"ORIG_PATH_INFO";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1325532136";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Image Resizer - Configuring IIS</title>
		<link>http://nathanaeljones.com/131/image-resizer-configuring-iis/</link>
		<pubDate>Fri, 06 Jun 2008 11:04:03 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/?p=131</guid>
		<description></description>
		<content:encoded><![CDATA[<div style="padding:10px; color:red; font-size:11pt; border:1px solid red; margin-bottom:1.5em;">This is regarding a depreciated version. <a href="http://imageresizing.net/docs/cleanurls">Visit the updated version of this page </a></div>

<p><strong>Using IIS7 <em>Integrated</em> mode or the Visual Studio web server? You can skip this step. </strong>
You don't need to do this if you are using the <strong>.jpg.ashx</strong> syntax.</p>
<strong>Remember to use the path for YOUR version of asp.net in both IIS and web.config. The safest way is to copy it from an existing .aspx mapping.</strong>
<h2><strong>Installing on IIS 5 &amp; IIS 6</strong></h2>
<strong>For the module to operate properly, we must configure IIS to pass all requests to the ASP.NET runtime. By default IIS serves these files itself.

1) Open IIS, right-click on your web site, and choose properties.

2) Click the "Home Directory" tab, then "Configuration"

3) For a wildcard mapping on IIS 5, add extension ".*". For IIS 6, choose "Insert" and add the aspnet_isapi.dll executable <em>%windir%\Microsoft.NET\Framework\v2.0.50727\aspnet_isapi.dll</em> inside the wildcard applications maps area. For both IIS 5 and 6, make sure "Script Engine" is checked. "Verify file exists" will need to be unchecked if you plan to do any URL rewriting, but should be left checked if you are using the default documents feature of IIS. (URL rewriting with the <a href="http://www.urlrewriting.net/">UrlRewriting.Net</a> library provides much more power than IIS default documents. I highly recommend it).

Note: For 64-bit installs, use "%windir%\Microsoft.NET\Framework64\v2.0.50727\aspnet_isapi.dll". The most reliable way to determine the path of aspnet_isapi.dll is to copy it from the .aspx mapping. You have to use the right-click menus - the keyboard shortcuts don't work.
<h2>Installing on IIS 7 classic mode</h2>
IIS 7 mode mappings are done in web.config. Do <strong>not</strong> add these if you are using IIS 7 Integrated mode (the default). You may get Server Unavailable on your image requests. None of the steps on this page are needed on IIS7 Integrated (default), and may actually cause problems.
<pre class="brush:xml">
    &lt;configuration&gt;
    ...
  &lt;system.webserver&gt;
    &lt;handlers&gt;
      &lt;add name=&quot;ASPNET&quot; path=&quot;*&quot; verb=&quot;*&quot; modules=&quot;IsapiModule&quot; scriptprocessor=&quot;%windir%\Microsoft.NET\Framework\v2.0.50727\aspnet_isapi.dll&quot; resourcetype=&quot;Unspecified&quot; requireaccess=&quot;None&quot; precondition=&quot;classicMode,runtimeVersionv2.0,bitness32&quot;&gt;
    &lt;/add&gt;&lt;/handlers&gt;
  &lt;/system.webserver&gt;
    ...
&lt;/configuration&gt;
</pre>
<h2>IIS7 Classic 64-bit</h2>
<pre class="brush:xml">
 &lt;configuration&gt;
    ...
  &lt;system.webserver&gt;
    &lt;handlers&gt;
      &lt;add name=&quot;”ASPNET”&quot; path=&quot;”*”&quot; verb=&quot;”*”&quot; modules=&quot;”IsapiModule”&quot; scriptprocessor=&quot;”%windir%\Microsoft.NET\Framework64\v2.0.50727\aspnet_isapi.dll”&quot; resourcetype=&quot;”Unspecified”&quot; requireaccess=&quot;”None”&quot; precondition=&quot;”classicMode,runtimeVersionv2.0,bitness64″/&quot;&gt;
    &lt;/add&gt;&lt;/handlers&gt;
  &lt;/system.webserver&gt;
    ...
&lt;/configuration&gt;</pre>
</strong>]]></content:encoded>
		<excerpt:encoded><![CDATA[Configuring IIS to send image requests to ASP.NET]]></excerpt:encoded>
		<wp:post_id>131</wp:post_id>
		<wp:post_date>2008-06-06 07:04:03</wp:post_date>
		<wp:post_date_gmt>2008-06-06 11:04:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>image-resizer-configuring-iis</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>url</wp:meta_key>
			<wp:meta_value><![CDATA[11111_Image_Resizer_Configuring_IIS]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>255</wp:comment_id>
			<wp:comment_author><![CDATA[Johnny]]></wp:comment_author>
			<wp:comment_author_email>johnnyw@seasonworkers.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>84.19.229.34</wp:comment_author_IP>
			<wp:comment_date>2009-11-13 09:59:01</wp:comment_date>
			<wp:comment_date_gmt>2009-11-13 14:59:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Nethanael,

Was just setting up the component on IIS7 in clasic mode and copied the above web.config line which errored due to the capitalization of some of the paramter names i.e scriptprocessor should be scriptProcessor.

The whole line should be:

]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>382</wp:comment_id>
			<wp:comment_author><![CDATA[Simon]]></wp:comment_author>
			<wp:comment_author_email>home@sprotty.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>86.156.15.214</wp:comment_author_IP>
			<wp:comment_date>2009-11-20 03:32:40</wp:comment_date>
			<wp:comment_date_gmt>2009-11-20 08:32:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[We had everything working on our 32bit II7 install using

add name="ASPNET" path="*" verb="*" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework\v2.0.50727\aspnet_isapi.dll" resourceType="Unspecified" requireAccess="None" preCondition="classicMode,runtimeVersionv2.0,bitness32"

But when we deployed onto our 64 bit IIS7 sever we needed to change the settings to

add name="ASPNET" path="*" verb="*" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework64\v2.0.50727\aspnet_isapi.dll" resourceType="Unspecified" requireAccess="None" preCondition="classicMode,runtimeVersionv2.0,bitness64"

This is not realy my area, but the changes seem to work....]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>385</wp:comment_id>
			<wp:comment_author><![CDATA[Nathanael Jones]]></wp:comment_author>
			<wp:comment_author_email>nathanael.jones@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>76.252.41.223</wp:comment_author_IP>
			<wp:comment_date>2009-11-20 09:39:34</wp:comment_date>
			<wp:comment_date_gmt>2009-11-20 14:39:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks! I've corrected the documention to include 64-bit... Somehow I completely overlooked that situation when writing this article.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>382</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>453</wp:comment_id>
			<wp:comment_author><![CDATA[Cult]]></wp:comment_author>
			<wp:comment_author_email>dgarcia182@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>71.42.208.34</wp:comment_author_IP>
			<wp:comment_date>2010-02-19 20:51:16</wp:comment_date>
			<wp:comment_date_gmt>2010-02-19 20:51:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I&#039;m using webhost4life, which I think is running IIS6. They have a control panel option to add a script map for *.jpg to go to ASP.NET, but when I do that all requests to jpgs on the site forward to the login screen. Only the /admin path is secured through. I can actually see the jpgs appearing in the imagecache, so I know the module is running and working fine, it is just that ASP.NET thinks the request should be authenticated for some reason. Has anyone seen this happen before? Do you know what setting might cause that to occur? ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>454</wp:comment_id>
			<wp:comment_author><![CDATA[Nathanael Jones]]></wp:comment_author>
			<wp:comment_author_email>nathanael.jones@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://intensedebate.com/people/nathanaeljones</wp:comment_author_url>
			<wp:comment_author_IP>76.252.61.194</wp:comment_author_IP>
			<wp:comment_date>2010-02-20 18:58:00</wp:comment_date>
			<wp:comment_date_gmt>2010-02-20 18:58:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Individual mappings seem to be very problematic... If wildcard mapping isn&#039;t an option, I&#039;d suggest the .ashx/.axd alternative syntax...  
 
Every version of IIS seems to be buggy regarding individual mappings...  
 
There are a few things you could try... make sure NTFS permissions on both the image and the imagecache folder are set properly for both the IIS account AND the ASP.NET account. Verify the mapping is a script engine mapping...  Check your URL authorization in web.config for bugs, and verify Anonoymous authentication works properly. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>453</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>462</wp:comment_id>
			<wp:comment_author><![CDATA[Philippe Tremblay]]></wp:comment_author>
			<wp:comment_author_email>philippe.tremblay@philtinc.com</wp:comment_author_email>
			<wp:comment_author_url>http://icilocal.ca</wp:comment_author_url>
			<wp:comment_author_IP>69.156.167.223</wp:comment_author_IP>
			<wp:comment_date>2010-05-26 21:06:47</wp:comment_date>
			<wp:comment_date_gmt>2010-05-27 01:06:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your product works fine on my dev platform (.Net3.0) but I can&#39;t make it work in my production environment (IIS6 and .Net 2.0).  The Web Config file seems to be well configured, but I always have the &ldquo;Page not found&rdquo; when I&rsquo;m trying URL such as<a href="http://icilocal.ca/Images/cies/Annonces/250043.jpg.ashx?maxheight=300" rel="nofollow">http://icilocal.ca/Images/cies/Annonces/250043.jp...</a> .  Any idea? ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>463</wp:comment_id>
			<wp:comment_author><![CDATA[Nathanael Jones]]></wp:comment_author>
			<wp:comment_author_email>nathanael.jones@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://intensedebate.com/people/nathanaeljones</wp:comment_author_url>
			<wp:comment_author_IP>0.0.0.1</wp:comment_author_IP>
			<wp:comment_date>2010-05-27 06:55:03</wp:comment_date>
			<wp:comment_date_gmt>2010-05-27 10:55:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Open the ashx handler mapping in iis6 and uncheck &#039;verify file exists'.<br /><br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>462</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>3303</wp:comment_id>
			<wp:comment_author><![CDATA[Chris]]></wp:comment_author>
			<wp:comment_author_email>cwruck@pro-masystems.com.au</wp:comment_author_email>
			<wp:comment_author_url>http://www.pro-masystems.com.au</wp:comment_author_url>
			<wp:comment_author_IP>118.208.187.184</wp:comment_author_IP>
			<wp:comment_date>2010-09-07 22:30:43</wp:comment_date>
			<wp:comment_date_gmt>2010-09-08 02:30:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[We are moving our web sites to a new web server running Windows 2008 x64 and IIS7. We need to run in integrated mode to overcome some errors in our app. We had your resizer working just fine in Windows 2003 and II6, and imported the IIS websites to II7. Now when we try to load a page which uses your resizer, all images show with a red X. I put the URL of the one of the image files into an IE8 browser window and get the following error message, please advise what to do to fix:- 
 
URL: <a href="http://www.pro-masystems.com.au/Assets/Images/ProductPhotos/73628.jpg?width=80&amp;maxheight=80" rel="nofollow">http://www.pro-masystems.com.au/Assets/Images/Pro...</a>  
 
Server Error in &#039;/&#039; Application. 
-------------------------------------------------------------------------------- 
 
Value cannot be null. 
Parameter name: user  
Description: An unhandled exception occurred during the execution of the current web request. Please review the stack trace for more information about the error and where it originated in the code.  
 
Exception Details: System.ArgumentNullException: Value cannot be null. 
Parameter name: user 
 
Source Error:  
 
An unhandled exception was generated during the execution of the current web request. Information regarding the origin and location of the exception can be identified using the exception stack trace below.   
 
Stack Trace:  
 
 
[ArgumentNullException: Value cannot be null. 
Parameter name: user] 
   System.Web.Security.UrlAuthorizationModule.CheckUrlAccessForPrincipal(String virtualPath, IPrincipal user, String verb) +214 
   fbs.ImageResizer.InterceptModule.CheckRequest_PostAuthorizeRequest(Object sender, EventArgs e) in C:UsersNathanaelJonesDesktopResizerImageResizerImageResizerInterceptModule.cs:157 
   System.Web.SyncEventExecutionStep.System.Web.HttpApplication.IExecutionStep.Execute() +80 
   System.Web.HttpApplication.ExecuteStep(IExecutionStep step, Boolean&amp; completedSynchronously) +266 
 
  
 
 
-------------------------------------------------------------------------------- 
Version Information: Microsoft .NET Framework Version:4.0.30319; ASP.NET Version:4.0.30319.1 ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>3304</wp:comment_id>
			<wp:comment_author><![CDATA[Chris]]></wp:comment_author>
			<wp:comment_author_email>cwruck@pro-masystems.com.au</wp:comment_author_email>
			<wp:comment_author_url>http://www.pro-masystems.com.au</wp:comment_author_url>
			<wp:comment_author_IP>118.208.187.184</wp:comment_author_IP>
			<wp:comment_date>2010-09-07 22:34:16</wp:comment_date>
			<wp:comment_date_gmt>2010-09-08 02:34:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[PS: Have reverted the site back to ASP.Net 2.0 to workaround this problem until you get back to me with a fix (the image link above will now work) - however we need to port to ASP.Net 4.0 so please help us resolve this problem ASAP. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>4924</wp:comment_id>
			<wp:comment_author><![CDATA[Nathanael Jones]]></wp:comment_author>
			<wp:comment_author_email>nathanael.jones@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>74.132.4.252</wp:comment_author_IP>
			<wp:comment_date>2010-10-04 12:19:22</wp:comment_date>
			<wp:comment_date_gmt>2010-10-04 16:19:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I e-mailed you the patch. It&#039;s actually a conflict with an IIS setting, not with ASP.NET 4.0. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>3304</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>4931</wp:comment_id>
			<wp:comment_author><![CDATA[Ray]]></wp:comment_author>
			<wp:comment_author_email>ray.xh.wang@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>202.49.172.100</wp:comment_author_IP>
			<wp:comment_date>2010-11-02 13:33:57</wp:comment_date>
			<wp:comment_date_gmt>2010-11-02 17:33:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Can I get a copy of the patch too please? I&#039;m having similar problem, thanks. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>4924</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>4934</wp:comment_id>
			<wp:comment_author><![CDATA[Gary]]></wp:comment_author>
			<wp:comment_author_email>Gary.Rients@harlandclarke.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>12.201.198.2</wp:comment_author_IP>
			<wp:comment_date>2010-11-09 12:43:00</wp:comment_date>
			<wp:comment_date_gmt>2010-11-09 17:43:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I&#039;m experiencing the same problem as Chris.  Could you post the solution or email it to me?  Thanks. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>4924</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>4935</wp:comment_id>
			<wp:comment_author><![CDATA[Gary]]></wp:comment_author>
			<wp:comment_author_email>Gary.Rients@harlandclarke.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>63.77.41.40</wp:comment_author_IP>
			<wp:comment_date>2010-11-09 14:07:52</wp:comment_date>
			<wp:comment_date_gmt>2010-11-09 19:07:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I&#039;m not sure if this is the best approach, but I fixed it by setting runAllManagedModulesForAllRequests=&quot;true&quot; in system.webServer.modules.  Please let me know if there&#039;s a better way to handle this.  Here&#039;s the modified section: ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>4950</wp:comment_id>
			<wp:comment_author><![CDATA[Nathanael Jones]]></wp:comment_author>
			<wp:comment_author_email>nathanael.jones@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>74.132.4.252</wp:comment_author_IP>
			<wp:comment_date>2010-11-12 09:21:48</wp:comment_date>
			<wp:comment_date_gmt>2010-11-12 14:21:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I just e-mailed it to you. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>4931</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>4951</wp:comment_id>
			<wp:comment_author><![CDATA[Nathanael Jones]]></wp:comment_author>
			<wp:comment_author_email>nathanael.jones@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>74.132.4.252</wp:comment_author_IP>
			<wp:comment_date>2010-11-12 09:22:25</wp:comment_date>
			<wp:comment_date_gmt>2010-11-12 14:22:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I&#039;ve e-mailed you the patch. It&#039;s now fixed in the published version. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>4934</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Image Resizer 1.0 - Web.config</title>
		<link>http://nathanaeljones.com/135/image-resizer-1-0-web-config/</link>
		<pubDate>Wed, 06 Aug 2008 11:54:14 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/?p=135</guid>
		<description></description>
		<content:encoded><![CDATA[The image resizer integrates with ASP.NET's URL authorization system quite well. It can't be exploited to access protected files, because it is simply a normal Jpeg/Png/Gif handler. However, we only want the handler to execute for files that actually need resizing - if possible we want control to pass back to IIS6 for performance gains.

Since we only want some .jpg requests to go to the handler, we need to do some logic before we assign a handler. In IIS 6 and IIS7 Classic Pipeline mode, we need to drop in a CustomDefaultHandler at the bottom of the httpHandlers list.
<pre class="brush:xml">&lt;httpHandlers&gt;
      &lt;clear/&gt;
      &lt;add path="trace.axd" verb="*" type="System.Web.Handlers.TraceHandler" validate="true"/&gt;
      &lt;add path="WebResource.axd" verb="GET" type="System.Web.Handlers.AssemblyResourceLoader" validate="true"/&gt;
      &lt;add path="*.axd" verb="*" type="System.Web.HttpNotFoundHandler" validate="true"/&gt;
      &lt;add path="*.aspx" verb="*" type="System.Web.UI.PageHandlerFactory" validate="true"/&gt;
      &lt;add path="*.ashx" verb="*" type="System.Web.UI.SimpleHandlerFactory" validate="true"/&gt;
      &lt;add path="*.asmx" verb="*" type="System.Web.Services.Protocols.WebServiceHandlerFactory, System.Web.Services, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" validate="false"/&gt;
      &lt;add path="*.rem" verb="*" type="System.Runtime.Remoting.Channels.Http.HttpRemotingHandlerFactory, System.Runtime.Remoting, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" validate="false"/&gt;
      &lt;add path="*.soap" verb="*" type="System.Runtime.Remoting.Channels.Http.HttpRemotingHandlerFactory, System.Runtime.Remoting, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" validate="false"/&gt;
     &lt;add path="*.svc" verb="*" type="System.ServiceModel.Activation.HttpHandler, System.ServiceModel, Version=3.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" validate="false"/&gt;

&lt;!-- These are forbidden extensions. I've added a lot here, such as .swp, .sln, .suo, .bak, and .db --&gt;

&lt;add path="*.asax" verb="*" type="System.Web.HttpForbiddenHandler" validate="true"/&gt;
      &lt;add path="*.ascx" verb="*" type="System.Web.HttpForbiddenHandler" validate="true"/&gt;
      &lt;add path="*.master" verb="*" type="System.Web.HttpForbiddenHandler" validate="true"/&gt;
      &lt;add path="*.skin" verb="*" type="System.Web.HttpForbiddenHandler" validate="true"/&gt;
      &lt;add path="*.browser" verb="*" type="System.Web.HttpForbiddenHandler" validate="true"/&gt;
      &lt;add path="*.sitemap" verb="*" type="System.Web.HttpForbiddenHandler" validate="true"/&gt;
      &lt;add path="*.dll.config" verb="GET,HEAD" type="System.Web.StaticFileHandler" validate="true"/&gt;
      &lt;add path="*.exe.config" verb="GET,HEAD" type="System.Web.StaticFileHandler" validate="true"/&gt;
      &lt;add path="*.config" verb="*" type="System.Web.HttpForbiddenHandler" validate="true"/&gt;
      &lt;add path="*.cs" verb="*" type="System.Web.HttpForbiddenHandler" validate="true"/&gt;
      &lt;add path="*.csproj" verb="*" type="System.Web.HttpForbiddenHandler" validate="true"/&gt;
      &lt;add path="*.vb" verb="*" type="System.Web.HttpForbiddenHandler" validate="true"/&gt;
      &lt;add path="*.vbproj" verb="*" type="System.Web.HttpForbiddenHandler" validate="true"/&gt;
      &lt;add path="*.webinfo" verb="*" type="System.Web.HttpForbiddenHandler" validate="true"/&gt;
      &lt;add path="*.licx" verb="*" type="System.Web.HttpForbiddenHandler" validate="true"/&gt;
      &lt;add path="*.resx" verb="*" type="System.Web.HttpForbiddenHandler" validate="true"/&gt;
      &lt;add path="*.resources" verb="*" type="System.Web.HttpForbiddenHandler" validate="true"/&gt;
      &lt;add path="*.mdb" verb="*" type="System.Web.HttpForbiddenHandler" validate="true"/&gt;
      &lt;add path="*.vjsproj" verb="*" type="System.Web.HttpForbiddenHandler" validate="true"/&gt;
      &lt;add path="*.java" verb="*" type="System.Web.HttpForbiddenHandler" validate="true"/&gt;
      &lt;add path="*.jsl" verb="*" type="System.Web.HttpForbiddenHandler" validate="true"/&gt;
      &lt;add path="*.ldb" verb="*" type="System.Web.HttpForbiddenHandler" validate="true"/&gt;
      &lt;add path="*.ad" verb="*" type="System.Web.HttpForbiddenHandler" validate="true"/&gt;
      &lt;add path="*.dd" verb="*" type="System.Web.HttpForbiddenHandler" validate="true"/&gt;
      &lt;add path="*.ldd" verb="*" type="System.Web.HttpForbiddenHandler" validate="true"/&gt;
      &lt;add path="*.sd" verb="*" type="System.Web.HttpForbiddenHandler" validate="true"/&gt;
      &lt;add path="*.cd" verb="*" type="System.Web.HttpForbiddenHandler" validate="true"/&gt;
      &lt;add path="*.adprototype" verb="*" type="System.Web.HttpForbiddenHandler" validate="true"/&gt;
      &lt;add path="*.lddprototype" verb="*" type="System.Web.HttpForbiddenHandler" validate="true"/&gt;
      &lt;add path="*.sdm" verb="*" type="System.Web.HttpForbiddenHandler" validate="true"/&gt;
      &lt;add path="*.sdmDocument" verb="*" type="System.Web.HttpForbiddenHandler" validate="true"/&gt;
      &lt;add path="*.mdf" verb="*" type="System.Web.HttpForbiddenHandler" validate="true"/&gt;
      &lt;add path="*.ldf" verb="*" type="System.Web.HttpForbiddenHandler" validate="true"/&gt;
      &lt;add path="*.exclude" verb="*" type="System.Web.HttpForbiddenHandler" validate="true"/&gt;
      &lt;add path="*.refresh" verb="*" type="System.Web.HttpForbiddenHandler" validate="true"/&gt;
      &lt;add path="*.db" verb="*" type="System.Web.HttpForbiddenHandler" validate="true"/&gt;
      &lt;add path="*.bak" verb="*" type="System.Web.HttpForbiddenHandler" validate="true"/&gt;
		&lt;add path="*.swp" verb="*" type="System.Web.HttpForbiddenHandler" validate="true"/&gt;
		&lt;add path="*.sln" verb="*" type="System.Web.HttpForbiddenHandler" validate="true"/&gt;
		&lt;add path="*.suo" verb="*" type="System.Web.HttpForbiddenHandler" validate="true"/&gt;

		&lt;add path="robots.txt" verb="*" type="System.Web.StaticFileHandler" validate="true"/&gt;
&lt;!-- I've also added .txt to prevent my todo files and readme files from being accessible. If you want to serve .txt files, remove this line --&gt;
		&lt;add path="*.txt" verb="*" type="System.Web.HttpForbiddenHandler" validate="true"/&gt;

      &lt;add path="*" verb="GET,HEAD,POST" type="fbs.Handlers.CustomDefaultHandler" validate="true"/&gt;
      &lt;add path="*" verb="*" type="System.Web.HttpMethodNotAllowedHandler" validate="true"/&gt;
    &lt;/httpHandlers&gt;</pre>
<script src="/scripts/syntaxhighlighter/shCore.js" type="text/javascript"></script>
 <script src="/scripts/syntaxhighlighter/shBrushCSharp.js" type="text/javascript"></script>
<script src="/scripts/syntaxhighlighter/shBrushXml.js" type="text/javascript"></script>
 <script type="text/javascript">// <![CDATA[
dp.SyntaxHighlighter.ClipboardSwf = '/scripts/syntaxhighlighter/clipboard.swf';
dp.SyntaxHighlighter.HighlightAll('code');
// ]]></script>]]></content:encoded>
		<excerpt:encoded><![CDATA[Making required changes in web.config]]></excerpt:encoded>
		<wp:post_id>135</wp:post_id>
		<wp:post_date>2008-08-06 07:54:14</wp:post_date>
		<wp:post_date_gmt>2008-08-06 11:54:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>image-resizer-1-0-web-config</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="image-resizer"><![CDATA[image resizer]]></category>
		<category domain="post_tag" nicename="image-resizing"><![CDATA[Image Resizing]]></category>
		<category domain="category" nicename="image-resizing"><![CDATA[Image Resizing]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>url</wp:meta_key>
			<wp:meta_value><![CDATA[11121_Image_Resizer_1_0_Web_config]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Server-side Image Resizing Module for ASP.NET, ASP, &amp; PHP/IIS</title>
		<link>http://nathanaeljones.com/138/server-side-image-resizing-module-for-asp-net-asp-phpiis-2/</link>
		<pubDate>Wed, 06 Aug 2008 12:10:47 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/?p=138</guid>
		<description></description>
		<content:encoded><![CDATA[<div style="padding:10px; color:red; font-size:11pt; border:1px solid red; margin-bottom:1.5em;">This is regarding a depreciated version. <a href="http://imageresizing.net/">Visit the V3 website for the latest information about the product. </a></div>

<p style="position: absolute; height: 5px; width: 5px; top: -3000px;">Open-source image resizing module for ASP.NET. Great for thumbnails and slideshows. Features managed disk caching, jpeg/png/gif support, and bicubic resizing.</p>

Server-side image resizing is one of those tiny features that can have incredible ROI. It can save webmasters several hours each day, and gives you the ability to change the resolution of an image without having to hunt up the original. However, many of the approaches currently on the web don't take security or performance into account.
<div class="rightbox"><a class="download" href="https://www.e-junkie.com/ecom/gb.php?i=178817&amp;c=single&amp;cl=41912">Download Source ($69)</a>
<p style="margin-bottom:0;padding-top:0;font-size:7.5pt; color:#909090;">v1.0 - August 6, 2008</p>
<p style="margin-bottom:0;padding-top:0;font-size:7.5pt; color:#909090;">v1.2 - Nov 23, 2008</p>
<p style="margin-bottom:0;padding-top:0;font-size:7.5pt; color:#909090;">v2.0 alpha -Mar 1, 2009 (by request)</p>

<a href="~/11151">View License</a>
<a href="~/11141">Documentation</a>

If you have any questions after reading the documentation, leave a comment or e-mail <strong>nathanael.jones@gmail.com</strong>.</div>
I developed this image resizing system about a year and a half ago. I wanted something very intuitive, simple, secure, and efficient. We've been using this system heavily on a live, high-traffic site (<a href="http://youngfoundations.org">youngfoundations.org</a>) for over a year, and we have had zero stability problems, memory leaks, or other issues with it. It's very mature and stable.

Although I typically release my components for free, I decided to charge a 'download fee' for this one to help support my other open-source projects. Don't worry, this component is still open-source, and the license permits source redistribution as part of a larger system. However, I'm asking that people who want to integrate this component purchase the download instead of ripping it out of another open-source project. My free to non-free LOC (lines of code) ratio is still over 40 to 1, and I plan on keeping it that way.  I trust this will keep everybody happy.
<h3>Features</h3>
<ul class="normallist">
	<li>Querystring-based resizing: <strong>image.jpg?width=100</strong>
<ul class="normallist">
	<li><strong>?format=jpg|png|gif</strong> — Changes the output format. (This was 'thumbnail' in v1.0).</li>
	<li><strong>&amp;maxwidth=value&amp;maxheight=value</strong> — Specify the maximum size for the resized image. Aspect ratio is maintained. You don't have to use both maxwidth and maxheight - you can use just one.</li>
	<li><strong>&amp;height=value&amp;width=value</strong> — If used together, these will force the image to be stretched to the new dimensions. If height or width is used by itself, aspect ratio is maintained.</li>
	<li><strong>&amp;quality=0-100</strong> — Changes the jpeg compression setting. 90 is the default value, and you really don't need to touch it. 90 produces fantastic quality and tiny files. New in v1.2</li>
</ul>
</li>
	<li>Secure - images still have to pass through ASP.NET's URL authorization system.</li>
	<li>Can be used from ASP, PHP, HTML files, or any language that runs alongside ASP.NET. Images are separate requests, so you don't need to be using ASP.NET to make this work for you.</li>
	<li>Not just for thumbnails - can resize images to any resolution. You can set the size limitations in web.config.</li>
	<li>Great for slideshows - you can change the resolution of the images dynamically as the user resizes.</li>
	<li>Supported input formats: BMP, GIF, JPG, PNG and TIFF</li>
	<li>Supported output formats: <strong>JPG, PNG, GIF</strong></li>
	<li>Photoshop-quality bicubic resizing and jpeg compression.</li>
	<li>Works with IIS5, IIS5.1, IIS6, IIS7, and ASP.NET 2.0+. v1.2 is optimized for IIS7 Integrated mode</li>
	<li>Well documented, well organized code.</li>
	<li>Great platform to build your own image processing systems on. You can use the disk caching system or image processing code separately.</li>
	<li>You can set entire folders of images to resize using CustomFolders.cs. (v1.2) You can do "URL rewriting" on your images there also.</li>
</ul>
<h3>Bonus functionality</h3>
<ul class="normallist">
	<li>Example watermarking code. You can enable this feature by uncommenting the code.</li>
	<li><em>yrl</em> class for dealing with virtual paths.</li>
</ul>
<h3>Performance</h3>
<ul class="normallist">
	<li><strong>Disk-based caching. Subsequent identical resizes are instantaneous.</strong>
<ul class="normallist">
	<li>Caching doesn't get in your way - if you modify the source file, the resized versions are also updated.</li>
	<li>You can resize the same image to several different sizes, and the different versions are cached separately.</li>
	<li><strong>Managed disk cache</strong>. If the number of cached files exceeds the configured threshold, a cleanup pass is made on the directory, and a block of the least recently used files are removed.</li>
</ul>
</li>
	<li>Client-side caching directives are sent, minimizing repetitive requests from the same client.</li>
	<li>Thumbnail generation in <strong>under 20 milliseconds</strong> for most images.</li>
	<li>Suitable for slideshows and lists of images. Even the initial resizing of 50 images concurrently isn't noticeably slow.</li>
	<li>Good with large source files (1-5MB)</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[Server-side image resizing is one of those tiny features that can have incredible ROI. It can save webmasters several hours each day, and gives you the ability to change the resolution of an image without having to hunt up the original.]]></excerpt:encoded>
		<wp:post_id>138</wp:post_id>
		<wp:post_date>2008-08-06 08:10:47</wp:post_date>
		<wp:post_date_gmt>2008-08-06 12:10:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>server-side-image-resizing-module-for-asp-net-asp-phpiis-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="image-resizer"><![CDATA[image resizer]]></category>
		<category domain="post_tag" nicename="image-resizing"><![CDATA[Image Resizing]]></category>
		<category domain="category" nicename="image-resizing"><![CDATA[Image Resizing]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>url</wp:meta_key>
			<wp:meta_value><![CDATA[11131_Server_side_Image_Resizing_Module_for_ASP_NET_ASP_PHP_IIS]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogbanner</wp:meta_key>
			<wp:meta_value><![CDATA[<a href="~/products/asp-net-image-resizer/" runat="server"><img src="ad2.jpg" runat="server" alt="Easy image resizing" /></a>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>articlebanner</wp:meta_key>
			<wp:meta_value><![CDATA[<div class="resizerDemo">
<img class="product-top-image" src="product-top.png" runat="server" alt="" />
<div class="imageSelection">

<div id="imageList"></div>
 <p class="chooseImage">Choose an image to work with.</p>
</div>

<div class="imageBackground">

<div class="interface">
<ul class="sizes">
 

</ul>
<p class="command"><a target="_tab" id="demo_openInNewTab">Modify the query string directly</a>.</p>
<p class="command"><a id="demo_download">Download resized image</a></p>
<p class="command"><a href="http://www.payloadz.com/go/sip?id=497545">Download Source Code ($69)</a></p>
</div>
  </div>
</div>

<script type="text/javascript">
//<!--

$(document).ready(function(){
   var basePath = '<%= ResolveUrl(Page.AppRelativeTemplateSourceDirectory) %>';
   var images = ['IMG_1228.jpg', 'IMG_5375.jpg','IMG_5443.jpg','IMG_8152.jpg','IMG_5393.jpg'];
   var query = '?maxwidth=100&maxheight=100';
   

for (var i = 0; i < images.length;i++){
  var img = $("<img />").attr('src',basePath + images[i] + query).
     attr('alt','click to manipulate').appendTo($('#imageList'));

window.currentImage = ""; window.currentQuery = "";
//handle image change
 img.click(function(){
   var currentImage = $(this).attr('src');

   $("#imageList img").removeClass('selected');
   $(this).addClass('selected');

   //Remove querystring
   window.currentImage = currentImage.substr(0,currentImage.indexOf('?'));
   updateImage();
 });

}
//handle query change
var queries = 
  ["?width=400","Medium size",
   "?maxwidth=100&maxheight=100","Typical thumbnail",
   "?format=png&maxwidth=200&maxheight=200","PNG version",
   "?width=200&height=100&stretch=fill","Distorted",
   "?format=gif&maxwidth=100","GIF version (ugly)"];

window.currentQuery = queries[0];

var queryList = $('.interface ul.sizes');
for (var i = 1; i < queries.length; i+=2){
   var q = queries[i-1];
   var name = queries[i];
   
   var item = $("<li/>").append(name).append($("<p/>").append(q)).attr('title',q);

   if (i == 1) item.addClass("selected");
   
   item.click(function(){
      $('ul.sizes li').removeClass("selected");
      $(this).addClass("selected");
      window.currentQuery = $(this).attr('title');
      updateImage();
   });
   item.appendTo(queryList);
}

//handle checkbox change

function updateImage(){
    $('.product-top-image').hide("slow");
    $('.imageBackground').css('background-image','none');
    $('.imageBackground').css('background-image','url(' + getImageUrl() + ')');
    $('.imageBackground').slideDown("slow");
    $('#demo_download').attr('href',getImageUrl() + '&download=true');
    $('#demo_openInNewTab').attr('href',getImageUrl());

}

function getImageUrl(){
  return window.currentImage + window.currentQuery;
}


});



//-->
</script>
<style type="text/css">
.resizerDemo{
background-color:black;
}
#imageList{text-align:center;}
#imageList img{
    margin:25px;
margin-bottom:10px;
margin-top:15px;
    border:3px solid #b0b0b0;
cursor:pointer;
}
#imageList img:hover{
    border:3px solid #c0c0c0;
}
#imageList img.selected{
    border:3px solid #ffffff;
}
p.chooseImage{
text-align:center;
color:white;
font-size:8pt; 
padding-bottom:10px;
paddint-top:10px;
}

.imageBackground {
padding:50px;
padding-right:100px;
padding-top:40px;
background-repeat:no-repeat;
background-position: right center;
display:none;
height:300px;
}
.interface{

}
.interface p.command{
 margin-top:1.3em;
}
ul.sizes li{
margin:10px;
margin-left:0px;
cursor:pointer;
color:#c0c0c0;
}
ul.sizes li:hover{
color:white;
}
ul.sizes li p{
margin-top:6px;
color:#909090;
}
ul.sizes li.selected{
color:white;
}
h1.title span.date{display:none;}

.rightbox{
width:215px;
float:right;

padding:15px;
padding-right:0px;
/*padding-left:18px;*/
margin-left:25px;
margin-bottom:25px;
margin-top:20px;
background: url(<%= ResolveUrl(Page.AppRelativeTemplateSourceDirectory) %>gradient.png) repeat-x top left;
text-align:right;
}
.rightbox a{
display:block;
padding-right:15px;
}
.rightbox p{

padding-right:15px;
margin-bottom:0px;
}
.rightbox a.download{
display:block;
padding:7px;
padding-right:15px;
background: url(<%= ResolveUrl(Page.AppRelativeTemplateSourceDirectory) %>download.png) no-repeat top left;
}
</style>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>4272</wp:comment_id>
			<wp:comment_author><![CDATA[diaporamas]]></wp:comment_author>
			<wp:comment_author_email>davidbr64@yahoo.fr</wp:comment_author_email>
			<wp:comment_author_url>http://www.ppsmania.fr</wp:comment_author_url>
			<wp:comment_author_IP>83.114.27.49</wp:comment_author_IP>
			<wp:comment_date>2010-09-23 13:22:55</wp:comment_date>
			<wp:comment_date_gmt>2010-09-23 17:22:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello, 
It is a very good possibility to resize a picture but I have a question about the size of the original picture. Do the original picture stay with the same large size or do the size be modified ? sorry for my bad englisch I m a frogy french :) 
 
David ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>4923</wp:comment_id>
			<wp:comment_author><![CDATA[Nathanael Jones]]></wp:comment_author>
			<wp:comment_author_email>nathanael.jones@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>74.132.4.252</wp:comment_author_IP>
			<wp:comment_date>2010-10-04 12:16:16</wp:comment_date>
			<wp:comment_date_gmt>2010-10-04 16:16:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The original picture is left untouched. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>4272</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Image Resizer 1.2 - Upgrade Notes</title>
		<link>http://nathanaeljones.com/150/image-resizer-1-2-upgrade-notes/</link>
		<pubDate>Sat, 17 May 2008 03:00:12 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/?p=150</guid>
		<description></description>
		<content:encoded><![CDATA[Version 1.2 includes several new features, a simplified URL syntax, and easier installation. It now supports (and takes advantage of) IIS7 Integrated mode, as well as IIS5, IIS6, and IIS7 classic. The new version is now available for download. If you are an existing customer, you should already have received an e-mail containing a free upgrade.

Query string syntax has changed (old links will still work, though). thumbnail has been renamed to format, and is no longer needed to force resizing. You can now simply use <strong>image.jpg?width=200</strong> instead of <strong>image.jpg?thumbnail=jpg&amp;width=200</strong>. I've also added a <strong>quality</strong> setting to adjust jpeg compression.
<h2>Upgrade instructions</h2>
The resizer is now implemented as an HttpModule instead of an HttpHandler. Because of this, you will need to <a href="~/11121"> undo these changes to web.config</a> and <a href="~/11161">make these much simpler changes instead.</a>

There are also 2 new settings you can <a href="~/11141">take advantage of</a>. Using ImageResizerClientCacheMinutes, you can now control how long an image will sit in the browser cache before being updated. If you don't use ASP.NET's URL authorization system to protect your images, you may want to enable AllowFolderResizeNotation. You will then be able to <strong>/resize(40,40)/image.jpg</strong> instead of <strong>image.jpg?maxwidth=40&amp;maxheight=40</strong>.

Last, delete the /imagecache folder. It will automatically be re-created and populated as images are requested.
<h2>Additional changes</h2>
The code has been refactored quite a bit - You'll notice there are now 5 code files. Image manipulation has been factored out into its own class ImageManager so you can use it directly from your code. Disk caching has similarly been abstracted into DiskCache.cs, so you can leverage that independently also. You can inherit from InterceptModule to easily build your own image processing pipelines (overriding CheckRequest and MakeResizedImage). Last but not least, you can modify CustomFolders.cs to force the resizing of all images in certain folders or matching certain patterns.

The<strong>?download=true feature</strong> has been removed for cleanliness. If you want this feature back, leave feedback below.]]></content:encoded>
		<excerpt:encoded><![CDATA[Upgrade from Image Resizer v1.0 to v1.2 now. New support and speed optimizations for IIS7 integrated mode.]]></excerpt:encoded>
		<wp:post_id>150</wp:post_id>
		<wp:post_date>2008-05-16 23:00:12</wp:post_date>
		<wp:post_date_gmt>2008-05-17 03:00:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>image-resizer-1-2-upgrade-notes</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="image-resizing"><![CDATA[Image Resizing]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>url</wp:meta_key>
			<wp:meta_value><![CDATA[11171_Image_Resizer_1_2_Upgrade_Notes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Image Resizer vs. Photoshop</title>
		<link>http://nathanaeljones.com/?p=158</link>
		<pubDate>Fri, 08 May 2009 20:30:16 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/?p=158</guid>
		<description></description>
		<content:encoded><![CDATA[	

<a href="quality-original.jpg" runat="server">View Original</a>
<p>These samples have been resized to 600px wide. Click to view each image.</p>


	



<asp:Picture  TemplateID="qualityLeft" src="quality-600px-q-100.jpg"  runat="server"  />
<asp:Picture  TemplateID="qualityLeft" src="quality-original.jpg?width=600&amp;quality=100"   runat="server"  />

<asp:Picture  TemplateID="qualityLeft" src="quality-600px-quality-90.jpg" c runat="server"  />
<asp:Picture  TemplateID="qualityLeft" src="quality-original.jpg?width=600&amp;quality=90" runat="server" />

<asp:Picture  TemplateID="qualityLeft" src="quality-600px-quality-80.jpg"   runat="server"  />
<asp:Picture  TemplateID="qualityLeft" src="quality-original.jpg?width=600&amp;quality=80" runat="server"   />

<asp:Picture  TemplateID="qualityLeft" src="quality-600px-24bit.png" runat="server"  />
<asp:Picture  TemplateID="qualityLeft" src="quality-original.jpg?width=600&amp;format=png"   runat="server"   />

<asp:Picture  TemplateID="qualityLeft" src="quality-600px-selective-diffusion-256c.gif"  runat="server"  />
<asp:Picture  TemplateID="qualityLeft" src="quality-original.jpg?width=600&amp;format=gif" runat="server"   />

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>158</wp:post_id>
		<wp:post_date>2009-05-08 16:30:16</wp:post_date>
		<wp:post_date_gmt>2009-05-08 20:30:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>image-resizer-vs-photoshop</wp:post_name>
		<wp:status>pending</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="image-resizer"><![CDATA[image resizer]]></category>
		<category domain="post_tag" nicename="image-resizing"><![CDATA[Image Resizing]]></category>
		<category domain="category" nicename="image-resizing"><![CDATA[Image Resizing]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>url</wp:meta_key>
			<wp:meta_value><![CDATA[11221_Image_Resizer_vs_Photoshop]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Regular expressions are mandatory</title>
		<link>http://nathanaeljones.com/11/regular-expressions-are-mandatory/</link>
		<pubDate>Wed, 20 Aug 2008 17:51:46 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://computerlinguist.wordpress.com/?p=11</guid>
		<description></description>
		<content:encoded><![CDATA[I admit that regular expressions (regexes) are intimidating. I avoided them like a disease for six years. I wasn't quite sure what they did, but seeing stuff like this was enough to make me lose interest quick:
<pre style="line-height: 1.2em;">&lt;(?&lt;tagname&gt;[\\w:-]+)(?&lt;attrpair&gt;\\s+(?&lt;attrname&gt;\\w[-\\w:]*)
(\\s*=\\s*\"(?&lt;attrval&gt;[^\"]*)\"|
\\s*=\\s*'(?&lt;attrval&gt;[^']*)'|
\\s*=\\s*(?&lt;attrval&gt;&lt;%#.*?%&gt;)|
\\s*=\\s*(?&lt;attrval&gt;[^\\s=/&gt;]*)|
(?&lt;attrval&gt;\\s*?)))*
\\s*(?&lt;insertattrs&gt;)(?:(?&lt;empty&gt;/&gt;)|&gt;
(?s:(?&lt;contents&gt;.*?)
(?i:&lt;/\\s*\\k&lt;tagname&gt;\\s*&gt;)))</pre>
Whenever I did string parsing, I usually ended up with masses of loops and indexOf calls. I tried to avoid anything complicated, but the parsing code inevitably ended up huge, fragile, and difficult to read.

During those six years, I probably wrote over ten thousand lines of string parsing code that could have been replaced with <strong>ten or twenty <em>lines</em> of regular expressions. Really.
</strong>

If you do any kind of programming, or even just work with text, you need to understand regular expressions. They're very, very useful. So useful, in fact, that it's near impossible to find a language that doesn't support them.  Perl, PHP, Ruby and Javascript even add syntactic sugar to make them easier to use.
<h1>Regex patterns</h1>
Regex patterns don't have to be complicated to be useful. You'll probably get the most mileage out of simple patterns - quick regexes that save you a few dozen lines of code.

For example, you might scan text for simple e-mail addresses with this pattern:

<span style="color: #008000;"><strong><tt class="regex">[a-z</tt></strong></span><tt class="regex"><span style="color: #008000;"><strong>]+</strong></span><span style="color: #339966;"><span style="color: #000000;">@</span><strong>[</strong></span></tt><span style="color: #339966;"><strong><tt class="regex">a-z</tt></strong></span><tt class="regex"><span style="color: #339966;"><strong>]+</strong></span>\.<span style="color: #008000;"><strong>[</strong></span></tt><span style="color: #008000;"><strong><tt class="regex">a-z</tt><tt class="regex">]</tt></strong></span>

Within square brackets, you can list allowed characters like this: <em>[abcdefghijklm]</em> or specify a range: <em>[a-m].</em>

The + symbol means 'one or more' of whatever it is following. So "A+" would match A or AAA or AAAAA. (*) means '0 or more'.

The period (.) means 'any character'. Since we're actually trying to <em>match</em> a period, we have to 'escape' it with a backslash: \.

Unfortunately, the above regex dosen't match e-mail addresses like <em>joe@example.co.uk</em>. It also won't match <em>joe@example-domain.com</em> or <em>first-last@me9.com</em>. Here's an improved version.

<tt class="regex"><span style="color: #008000;">[a-z0-9._-]+</span>@<span style="color: #008000;">[a-z0-9.-]+</span>\.<span style="color: #008000;">[a-z]</span></tt>

And here's an even more sophisticated version. It excludes domains that start or end in an hyphen. It also prevents more than one period in a row in the domain or username.

<strong>[</strong>a-z0-9!#$%&amp;'*+/=?^_`{|}~-<strong>]+(?:</strong>\\.<strong>[</strong>a-z0-9!#$%&amp;'*+/=?^_`{|}~-<strong>]+)*</strong>

@<strong>(?:[</strong>a-z0-9<strong>](?:[</strong>a-z0-9-<strong>]*[</strong>a-z0-9<strong>])?</strong>\\.<strong>)+[</strong>a-z0-9<strong>](?:[</strong>a-z0-9-<strong>]*[</strong>a-z0-9<strong>])?</strong>
<h1>Experiment</h1>
<a href="http://rubular.com/">http://rubular.com/</a>
<h1>Continued</h1>
<a href="http://en.wikipedia.org/wiki/Regular_expression">http://en.wikipedia.org/wiki/Regular_expression</a>

<a href="http://www.regular-expressions.info/">http://www.regular-expressions.info/</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>11</wp:post_id>
		<wp:post_date>2008-08-20 12:51:46</wp:post_date>
		<wp:post_date_gmt>2008-08-20 17:51:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>regular-expressions-are-mandatory</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="computerlinguist-com"><![CDATA[computerlinguist.com]]></category>
		<category domain="category" nicename="general-programming"><![CDATA[General Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Command chaining</title>
		<link>http://nathanaeljones.com/22/command-chaining/</link>
		<pubDate>Wed, 20 Aug 2008 17:06:35 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://computerlinguist.wordpress.com/?p=22</guid>
		<description></description>
		<content:encoded><![CDATA[Even if you're still stuck using a non-dynamic language (Java, C#, etc), you can steal a trick or two from the other side. Command chaining is an easy practice that can really simplify your code.

It's easy. Put <strong>return this;</strong><em> </em>before the end of each method in your class. Just say <em>no</em> to <strong>void</strong>!

Of course, you wouldn't do it on <em>functions</em>. They're supposed to return data. But following this practice for 'command' methods makes perfect sense, and allows calling code to be much cleaner.

Compare:
<pre>Element para = new Element("p");
para.set("class","song");
para.append("Hello World");
para.appendTo(document);</pre>
to
<pre>new Element("p") .set("class","song") .append("Hello World") .appendTo(document);</pre>
or
<pre>new Element("p") .set("class","song")
                 .append("Hello World")
                 .appendTo(document);</pre>
#2 and #3 are far more readable. If you want to draw attention to the commands (say they aren't transparently obvious, or need inline comments), #3 is a better choice. If you want to focus on the surrounding logic, #2 cuts line usage down tremendously.

Both remove repetition and reduce re-factoring costs. As a bonus, you don't have to clutter the scope with another arbitrarily named variable; you've created and finished with the object all in one statement.

Like all coding practices, there is a short adjustment period while you get used to reading and writing this style; however, I'm confident you'll find it much faster to read and write code without that superfluous, repetitive text. <a href="http://en.wikipedia.org/wiki/Don't_repeat_yourself">DRY</a>.

Just say no to <strong>void. Be nice to your callers.</strong>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>22</wp:post_id>
		<wp:post_date>2008-08-20 13:06:35</wp:post_date>
		<wp:post_date_gmt>2008-08-20 17:06:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>command-chaining</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="computerlinguist-com"><![CDATA[computerlinguist.com]]></category>
		<category domain="category" nicename="general-programming"><![CDATA[General Programming]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>11</wp:comment_id>
			<wp:comment_author><![CDATA[minimatti]]></wp:comment_author>
			<wp:comment_author_email>mattias.geniar@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>83.101.8.178</wp:comment_author_IP>
			<wp:comment_date>2008-11-12 14:55:30</wp:comment_date>
			<wp:comment_date_gmt>2008-11-12 19:55:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I hadn't considered this, but it's definately worth keeping in mind. It'll make code cleaner, that's for sure!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>12</wp:comment_id>
			<wp:comment_author><![CDATA[Himanshu]]></wp:comment_author>
			<wp:comment_author_email>atkt_forever@yahoo.co.in</wp:comment_author_email>
			<wp:comment_author_url>http://tecknolojia.blogspot.com/</wp:comment_author_url>
			<wp:comment_author_IP>69.4.176.194</wp:comment_author_IP>
			<wp:comment_date>2008-11-12 15:34:03</wp:comment_date>
			<wp:comment_date_gmt>2008-11-12 20:34:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[But if your object is bean-like then this approach will not work....since bean setters are meant to be void. But still a goo d way to make code compact]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>13</wp:comment_id>
			<wp:comment_author><![CDATA[Paulo Sérgio]]></wp:comment_author>
			<wp:comment_author_email>pasemes@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>146.164.34.88</wp:comment_author_IP>
			<wp:comment_date>2008-11-12 15:42:44</wp:comment_date>
			<wp:comment_date_gmt>2008-11-12 20:42:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm not sure if i agree that the fragment #2 is more readable. I see that #2 is in some sense more logical appending several behaviors in one line, but i think #1 is more clean and, therefore, more pleasing.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>14</wp:comment_id>
			<wp:comment_author><![CDATA[Just say NO to void &#8230; &laquo; Scotsman on a Horse]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://2thyme.wordpress.com/2008/11/12/just-say-no-to-void/</wp:comment_author_url>
			<wp:comment_author_IP>74.200.245.176</wp:comment_author_IP>
			<wp:comment_date>2008-11-12 17:53:28</wp:comment_date>
			<wp:comment_date_gmt>2008-11-12 22:53:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Command chaining « Reflections of a computer linguist It’s easy. Put return this; before the end of each method in your class. Just say no to void!  Published in: [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>15</wp:comment_id>
			<wp:comment_author><![CDATA[computerlinguist]]></wp:comment_author>
			<wp:comment_author_email>nathanael.jones@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>216.205.223.34</wp:comment_author_IP>
			<wp:comment_date>2008-11-12 17:57:39</wp:comment_date>
			<wp:comment_date_gmt>2008-11-12 22:57:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I guess it depends upon the scale of the project. If your code is only 4 lines as above, it doesn't matter - but if you are configuring hundreds of object properties, this can make the difference between readable and unreadable code.

It is a good rule to keep every logical 'step' in your program small enough to fit on one page - however, this becomes difficult when you have lots of property sets in the middle of a loop, for example.

Typically, setting properties on an object is what I consider 'noise' code - it contains no actual logic, which is what you are looking for when you read code.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>16</wp:comment_id>
			<wp:comment_author><![CDATA[AntonioCS]]></wp:comment_author>
			<wp:comment_author_email>AntonioCS@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://antoniocs.org</wp:comment_author_url>
			<wp:comment_author_IP>89.181.98.65</wp:comment_author_IP>
			<wp:comment_date>2008-11-12 19:05:00</wp:comment_date>
			<wp:comment_date_gmt>2008-11-13 00:05:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I have actually seen code where it's a one liner but it broken into lines.
Taking your examples, it would look like this:

<code>new Element("p").
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set("class","song"). //Example comment!!
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;append("Hello World").
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;appendTo(document);</code>

To me this is easier to read and to comment. Having code in one line is great if you want to compact your script, but not so great if you want to read it and understand if after a month or two of not touching it ;)

[Editor's note: I updated the article to include his example.] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>17</wp:comment_id>
			<wp:comment_author><![CDATA[raveman]]></wp:comment_author>
			<wp:comment_author_email>otworz@buziaczek.pl</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>91.198.15.59</wp:comment_author_IP>
			<wp:comment_date>2008-11-13 04:44:41</wp:comment_date>
			<wp:comment_date_gmt>2008-11-13 09:44:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[its builder design pattern]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>18</wp:comment_id>
			<wp:comment_author><![CDATA[computerlinguist]]></wp:comment_author>
			<wp:comment_author_email>nathanael.jones@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>216.205.223.34</wp:comment_author_IP>
			<wp:comment_date>2008-11-13 08:39:05</wp:comment_date>
			<wp:comment_date_gmt>2008-11-13 13:39:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good point, Antonio - I've added example #3 as another example of command chaining usage. I've used that formatting style a lot, but completely forgot to mention it in the blog.

Putting everything one one line is a trade-off which completely depends on the situation.

You have to ask yourself in each situation: what is more important? Seeing the surrounding picture, or drawing attention to the member calls?  If the member calls are significant enough to warrant a comment (i.e., they're not transparently obvious), then you definitely want to line-break.  If they're transparently obvious and don't deserve any comments, well, they probably don't deserve their own lines.

Thanks!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>19</wp:comment_id>
			<wp:comment_author><![CDATA[computerlinguist]]></wp:comment_author>
			<wp:comment_author_email>nathanael.jones@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>216.205.223.34</wp:comment_author_IP>
			<wp:comment_date>2008-11-13 07:40:46</wp:comment_date>
			<wp:comment_date_gmt>2008-11-13 12:40:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@raveman

I think this convention might be commonly used *with* the <a href="http://en.wikipedia.org/wiki/Builder_pattern" rel="nofollow">builder design pattern</a>, but I don't think it's actually part of the pattern.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Use &#039;scripting&#039; languages when possible</title>
		<link>http://nathanaeljones.com/30/use-scripting-languages-when-possible/</link>
		<pubDate>Thu, 04 Sep 2008 19:46:42 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://computerlinguist.wordpress.com/?p=30</guid>
		<description></description>
		<content:encoded><![CDATA[Are you guilty of subconsciously regarding 'scripting' languages as inferior? Do you think real programming means using C, C++, C#, or Java? Does your conscience accuse you of laziness when you feel tempted to use a truly high-level language for your app?

If so, don't be <em>too</em> hard on yourself. It's unfortunate, but the computer industry is more prone to group-think than any other. The inherent complexity requires us to take other people's word for most things... Besides, it would seem that scripting languages are for scripts...right?

It's true that scripting languages are fantastic at gluing libraries and applications together quickly. But they're not just for scripts. Truthfully, any language can be used for 'scripting'... But sophisticated high-level languages that excel at the job have an tendency to get branded. Ironic, eh?
<h3><strong>Javascript, for instance</strong></h3>
As a language, Javascript is one of the most high-level languages in existence. It was designed from the ground-up for object-oriented development (although with a quirky syntax). Its dynamic, reflective, and functional nature allows excellent code reuse (mix-ins, events, delegation, aspect integration), and the excellent array and dictionary syntax makes the language suitable for representing data and expressing domain-specific logic. It's easy to unit test, and there are great IDEs for it (Aptana, Flex Builder).

Javascript is multi-paradigm. It is imperative, procedural, object-oriented, functional, and dynamic. If you want to write procedural garbage and use global variables, javascript will let you do it.

Javascript code you see on the Internet tends to be poorly written, buggy, and ugly. It's not because the language is bad - it's because few people learn how to use it properly. Developers copy and paste bad javascript, then write more code just like it. Thankfully, this trend is starting to reverse, and we're seeing good javascript on a wide variety of sites. High-quality libraries like jQuery, Mootools, and YUI are showing developers what Javascript *should* look like, and how powerful it can be.

<strong>Javascript doesn't get in your way, even if you're doing something incredibly stupid. <span style="font-weight:normal;">True, the syntax for making namespaces and classes could be improved, but the inherent flexibility lets you change even this - you can write defineNamespace(), defineClass(), and addMembers() functions if you so desire. Sometimes this freedom can get to your head, so remember that discipline is as important as ingenuity when writing code.</span></strong>

<strong>Javascript is a very high-level language, with excellent support for a variety of paradigms. It's built into the JVM, every modern browser, and has over 20 <a href="http://en.wikipedia.org/wiki/Server-side_JavaScript">server-side implementations.</a></strong>

The fact that it is possible to write javascript applications that run on a range of browers (implementations) is really amazing. Try writing an application that can run on Windows, Linux, and OS X without having targeted versions of the executable or the executing framework. Like everything else, javascript is easier in a consistent environment, like an AIR, Mozilla, or HTA app... Don't blame the language for the framework. Don't blame Javascript for the DOM.
<h4>On the desktop</h4>
The XML+Javascript combo is very suitable for large applications. Tying libraries together and defining the behavior of an application is definitely a job for a high-level dynamic language.

Here's just a few desktop apps that use the Mozilla (XUL+Javascript) platform: Firefox, Flock, SeaMonkey, Thunderbird, Chatzilla, Nvu, Sunbird, ActiveState Komodo (my Python IDE), Joost, Miro, and Instantbird.

HTA (Microsoft HTML applications) have been around forever (2001?), and are used extensively within Microsoft products. I've written a few also, for windows-only tasks. They're just HTML files with a .hta extension and local filesystem permissions. If only IE had debugging....

Adobe AIR is gaining immense popularity, and there are already thousands of apps out there. Need I say more? Javascript has proven itself a mature, capable language, suitable for big things.
<h4>Thank you, javascript</h4>
We have a lot to thank Javascript for. It's a vector for single-paradigm developers to expand their horizons with. It's pushing the performance boundaries of dynamic languages. Every six months a new virtual machine seems to be <a href="http://ejohn.org/blog/tracemonkey/">leapfrogging</a> 50% over the previous leader. Smart just-in-time compilation is bringing incredible speeds to javascript, and with tiny initialization costs.
<h3>Python, for instance</h3>
Python is a little less implicit that Javascript, and follows the DRY principle very closely. It is designed to enforce readability, wheras Javascript relies on programmer discipline (which is needed anyway).

Python is used as a scripting language in lots of heavy-duty applications like GIMP, Inkscape, Blender, Maya, PSP, and... Linux. But it's not named PythonScript, thank goodness, so the 'scriptiness percepection index' is much lower than javascript.

Lots of popular stuff is written in Python, like BitTorrent, Trac, Bazaar, Mercurial, TinyERP, ClamWin, Yum (linux package management system), Zope, and Django (my favorite). There are actually some drivers written in python. It's pretty speedy.

Python is probably a good balance between power and guidance. It supports a variety of paradigms, but has great default behavior and tends to guide you towards doing things one way. Python is reflective, object-oriented, dynamic, and functional much like javascript. It's a little stricter, but not enough to really annoy.
<h3>Ruby, Lisp, and Perl</h3>
I'm lumping these three together since I don't have much experience with them. I've been studying them, though, and all three seem very powerful and sufficient in their own way. All three are incredibly popular, with hundreds of thousands of apps in the wild.
<h3>My defintion of high-level</h3>
At one time C was considered a high-level language. At one time C++ was considered a high-level language. Not too long ago I considered Java a high-level language.

In my opinion, a true high-level language must allow programming with the following paradigms as a minimum
<ul>
	<li>dynamic (Any member can be overridden, objects act like dictionaries)</li>
	<li>reflective (Members are enumerable, executable, and can be referenced by string name)</li>
	<li>functional (Functions are first-class objects, with members)</li>
	<li>object-oriented (Functionality can be organized into objects, which can have instances containing state)</li>
	<li>Imperative</li>
</ul>
It must also have these features
<ul>
	<li>In-line documentation</li>
	<li>Built-in list and dictionary syntax.</li>
	<li><a href="http://en.wikipedia.org/wiki/Variadic_function">Variadic functions</a></li>
	<li>Easy 'undefined' and null checks</li>
	<li>Exception management</li>
	<li><a href="http://en.wikipedia.org/wiki/Duck_typing">Duck typing</a> (optional explicit typing is OK)</li>
	<li>Automatic memory management</li>
	<li>Closures, anonymous functions</li>
	<li>Good list, dictionary, string, math, and date libraries.</li>
</ul>
 

<strong><span style="color:#f66c08;">I don't believe the future is in contract-based programming. The contract safety that interfaces and classes provide is shallow and of questionable value. It is behavior, not integration that typically causes problems.
</span></strong>

<strong><span style="color:#f66c08;">
</span></strong>

<span style="color:#00ff00;"><strong><span style="color:#f66c08;">A far better approach is to use a language that facilitates defensive programming and easy unit testing.</span></strong></span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>30</wp:post_id>
		<wp:post_date>2008-09-04 15:46:42</wp:post_date>
		<wp:post_date_gmt>2008-09-04 19:46:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>use-scripting-languages-when-possible</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="computerlinguist-com"><![CDATA[computerlinguist.com]]></category>
		<category domain="category" nicename="general-programming"><![CDATA[General Programming]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>80</wp:comment_id>
			<wp:comment_author><![CDATA[Ricky Clarkson]]></wp:comment_author>
			<wp:comment_author_email>ricky.clarkson@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://cime.net/~ricky/</wp:comment_author_url>
			<wp:comment_author_IP>82.2.85.37</wp:comment_author_IP>
			<wp:comment_date>2008-11-14 21:09:23</wp:comment_date>
			<wp:comment_date_gmt>2008-11-15 02:09:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You might be missing out on some good statically-typed languages here.  Consider Haskell, Scala and F#, all statically-typed, but with (varying) type inference, so the types don't have to get in the way.

Where they don't support something, support can be added.  For example, Haskell doesn't support OOP out of the box, but you can add that as a library (I believe such a library exists).

None of the languages you listed satisfy one of your checks for high-level language; implicit typing.  They are all untyped languages.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>81</wp:comment_id>
			<wp:comment_author><![CDATA[computerlinguist]]></wp:comment_author>
			<wp:comment_author_email>nathanael.jones@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>76.252.8.254</wp:comment_author_IP>
			<wp:comment_date>2008-11-14 21:29:52</wp:comment_date>
			<wp:comment_date_gmt>2008-11-15 02:29:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Sorry, meant duck typing - good catch.

Type inference does mitigate the problem slightly (It's appearing in many static languages now), but here's the question:

If it walks like a duck and quacks like a duck.... Can we let it in with the other ducks? Or does it need an license?

When it's so easy to check to see how the duck walks and quacks... Why deal with the overhead and limitations of the license?

In my opinion, contractual programming is a case of premature optimization on a severe scale.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>83</wp:comment_id>
			<wp:comment_author><![CDATA[Ricky Clarkson]]></wp:comment_author>
			<wp:comment_author_email>ricky.clarkson@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://cime.net/~ricky/</wp:comment_author_url>
			<wp:comment_author_IP>82.20.43.195</wp:comment_author_IP>
			<wp:comment_date>2008-11-15 21:51:33</wp:comment_date>
			<wp:comment_date_gmt>2008-11-16 02:51:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You can have such quackery in a static language, for example, Scala's structural typing.

scala&gt; def doDuckLikeThings(duck: { def walk: Unit; def quack: Unit }) = { duck.walk; duck.quack }
doDuckLikeThings: (AnyRef{def walk: Unit; def quack: Unit})Unit

scala&gt; class Swan { def walk = println("I'm walking"); def quack = println("waaak") }
defined class Swan

scala&gt; doDuckLikeThings(new Swan)
I'm walking
waaak

A potential problem is that there's no real way to know whether the method means to the object's author what it means to you.  aBath.run is quite different to anAthlete.run.  More importantly, not having types available makes it hard to think in types, i.e., it makes it hard to reason about your code.  Types can express a lot more than you might expect.  They can make unit tests unnecessary (or at least smaller), and in the case of QuickCheck/ScalaCheck they can improve unit tests no end.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>84</wp:comment_id>
			<wp:comment_author><![CDATA[computerlinguist]]></wp:comment_author>
			<wp:comment_author_email>nathanael.jones@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>76.252.50.11</wp:comment_author_IP>
			<wp:comment_date>2008-11-15 23:11:32</wp:comment_date>
			<wp:comment_date_gmt>2008-11-16 04:11:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[&gt; A potential problem is that there’s no real way to know whether the method means to the object’s author what it means to you. aBath.run is quite different to anAthlete.run.

Can you say you have ever encountered this in a real application?

&gt;More importantly, not having types available makes it hard to think in types, i.e., it makes it hard to reason about your code.

I don't think it makes it harder to reason about your code at all. Static typing provides a false sense of security just like compile-time checks do. Compile-time checking is really just a productivity feature. Static typing helps catch a small class of typos, but causes an incredible amount of programmer overhead.


&gt; Types can express a lot more than you might expect. They can make unit tests unnecessary (or at least smaller), and in the case of QuickCheck/ScalaCheck they can improve unit tests no end.

I'm no Scala expert - could you provide a real-world example of this?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>85</wp:comment_id>
			<wp:comment_author><![CDATA[Ricky Clarkson]]></wp:comment_author>
			<wp:comment_author_email>ricky.clarkson@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://cime.net/~ricky/</wp:comment_author_url>
			<wp:comment_author_IP>86.31.34.79</wp:comment_author_IP>
			<wp:comment_date>2008-11-16 07:30:14</wp:comment_date>
			<wp:comment_date_gmt>2008-11-16 12:30:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[&gt;&gt; A potential problem is that there’s no real way to know whether the method means to the object’s author what it means to you. aBath.run is quite different to anAthlete.run.

&gt; Can you say you have ever encountered this in a real application?

I said 'potential'.

&gt; Static typing provides a false sense of security just like compile-time checks do.

Actually, types prove that certain categories of runtime errors are impossible.  They can do much more than catch typos.  It's a shame that most people's experience of types is from C, C++ and Java, because I can't think of worse implementations of it.  People have a wider view of untyped languages than of typed ones.

For example, if I am working outside an IDE I can do a refactor, and generally the code won't compile until I have fixed all the resulting problems.  This is even true within an IDE, as IDEs don't support every refactor you might want.

Support for typing in the language helps me, a programmer who thinks in types, because it helps me to keep track of things.  If I've made an error in my thoughts, I'll get a compile error.

&gt; Compile-time checking is really just a productivity feature.

That's a non-argument.  You could argue that anything above assembler is a productivity feature.

&gt; Static typing helps catch a small class of typos, but causes an incredible amount of programmer overhead.

I hope I've addressed the typos bit above.  Whether it causes programmer overhead depends on the programmer and the type system.

&gt;&gt; Types can express a lot more than you might expect. They can make unit tests unnecessary (or at least smaller), and in the case of QuickCheck/ScalaCheck they can improve unit tests no end.

&gt; I’m no Scala expert - could you provide a real-world example of this?

This is from my current codebase; it's a ScalaCheck test inside a Specs specification:

"Converting an EventsCGI to a String and back" should {
  "not be lossy" in {
    property { e: EventsCGI =&gt; { EventsCGI.fromURL(e.toString).toString == e.toString } } must pass
  }
}

ScalaCheck will generate up to 500 EventsCGI objects (according to rules I defined elsewhere), and run this test on them.  When it finds a failure, it will try to 'shrink' the failure case, meaning that it generates more EventsCGI objects but with smaller values and runs the test again, so that the developer gets a small value.  I can't really paste more than that, which is the downside of asking for a real-world example.  It also doesn't really show off type inference, but the ScalaCheck docs should do that.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>86</wp:comment_id>
			<wp:comment_author><![CDATA[Ricky Clarkson]]></wp:comment_author>
			<wp:comment_author_email>ricky.clarkson@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://cime.net/~ricky/</wp:comment_author_url>
			<wp:comment_author_IP>86.31.34.79</wp:comment_author_IP>
			<wp:comment_date>2008-11-16 07:33:02</wp:comment_date>
			<wp:comment_date_gmt>2008-11-16 12:33:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I missed something in the ScalaCheck example.  The 'generator' for EventsCGI objects is not actually passed into the property method, so to implement this in Ruby you would probably have to have some kind of map of 'types' to generators, which would be a global mutable data structure, whereas in Scala it's an implicit parameter.  The type system is helping here by choosing the correct 'implicit value' from the surrounding scope.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>87</wp:comment_id>
			<wp:comment_author><![CDATA[computerlinguist]]></wp:comment_author>
			<wp:comment_author_email>nathanael.jones@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>76.252.50.11</wp:comment_author_IP>
			<wp:comment_date>2008-11-16 08:48:49</wp:comment_date>
			<wp:comment_date_gmt>2008-11-16 13:48:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Well, I think we both agree that the C/C++/Java/C# type system is an utter failure... And while I had previously thought of Scala as being an extension of the same bad idea, your examples have convinced me that Scala is actually worth looking in to.

Strangely enough, from looking at Scala's feature set you might mistake it for one of the dynamic languages. I'd assumed that (like C# and Java), each of those 'dynamic' features would introduce syntactical overhead since the behavior isn't inherent to the language approach.

I'll probably have to try a small app in Scala to see whether the type system gets in my way or not... If structural typing is the default, then Scala might just make it onto my 'list'. :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>88</wp:comment_id>
			<wp:comment_author><![CDATA[Ricky Clarkson]]></wp:comment_author>
			<wp:comment_author_email>ricky.clarkson@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://cime.net/~ricky/</wp:comment_author_url>
			<wp:comment_author_IP>86.26.99.203</wp:comment_author_IP>
			<wp:comment_date>2008-11-16 12:39:36</wp:comment_date>
			<wp:comment_date_gmt>2008-11-16 17:39:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Scala is worth looking into, but it isn't a silver bullet.  There are a number of syntactic oddities.  F# looks like it's a more consistent language (with similar features), but I haven't looked into it enough, not least because I don't normally run Windows.

C# is actually a bit of an improvement, e.g., var s = "hello"; s is typed as a String.  And C# has talented language designers, so it is certainly one to watch.

The point really is that typed languages don't have to have unreadable code.  It's just that the mainstream ones tend to, though this is likely to change, slowly.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>89</wp:comment_id>
			<wp:comment_author><![CDATA[davidi]]></wp:comment_author>
			<wp:comment_author_email>davidi@codegear.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>71.139.184.209</wp:comment_author_IP>
			<wp:comment_date>2008-11-22 10:18:11</wp:comment_date>
			<wp:comment_date_gmt>2008-11-22 15:18:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Why does the "perfect" language have to have everything?  Can't programming langugages have their focus and capability?  In the 1970s, PL/1 was the language that "had it all" - the best of Fortran, COBOL, and systems programming.  Maybe we should also add to your perfect list - database (SQL/LINQ), XML as a fundamental datatype, Contracts, Mocks, parallel/multi-core types and contructs, and anything else that programming language research comes up with in 2009 and beyond.   Focused languages and language interop seem to be a good way forward.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>90</wp:comment_id>
			<wp:comment_author><![CDATA[computerlinguist]]></wp:comment_author>
			<wp:comment_author_email>nathanael.jones@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>76.252.50.11</wp:comment_author_IP>
			<wp:comment_date>2008-11-22 11:03:58</wp:comment_date>
			<wp:comment_date_gmt>2008-11-22 16:03:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Well, I think the problem we're facing today is that modern web apps touch *everything*. They are receiving data and javascript commands, calling web services, talking to the database, calculating data, and rendering tons of XML.

If you're doing a focused command-line application, you may be fine with pure functional code or pure OO code. But most modern apps aren't just dealing with object simulation or calculations. They're working with lots of data structures, and therefore need dynamic objects and reflection. They need to manipulate sets of data easily, and do concurrent programming. Functional  programming is invaluable when working with data or making algorithms extensible.

PL/1 suffered from committee design.. But I agree, languages have always been far ahead of the industry as a whole. Think SmallTalk and LISP. LISP never went really mainstream until it got put in Java's syntax as Javascript. Programmers are hard-headed.

Regarding SQL/LINQ and integrated XML... Those are both easily implemented with dynamic objects and dot operator overloading (Present in most 'dynamic' languages). No need for a language addition there.

Regarding concurrent programming... I see a hybrid approach here. Almost all 'concurrent' programming is best expressed in the asynchronous begin/end form. For actual calculations (vs. I/O, audio, video, or web-service calls), I like the philosophy of <a href="http://clojure.org/" rel="nofollow">clojure</a>.

If you actually read my article, you should already know my opinion on contract-based vs. test-based programming.

What languages do you currently use on a day-to-day basis?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Clojure - cross platform, fast, concurrent, concise</title>
		<link>http://nathanaeljones.com/45/clojure-cross-platform-fast-concurrent-concise/</link>
		<pubDate>Mon, 10 Nov 2008 18:34:20 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://computerlinguist.wordpress.com/?p=45</guid>
		<description></description>
		<content:encoded><![CDATA[I recently ran across this video on Clojure... Very compelling presentation. 

I originally thought of lisp as being interpreted.. It's easy to build a simple lisp interpreter.

Clojure, however, is compiled lisp - but still quite as dynamic, and it supports edit-and-continue.

<a href="http://blip.tv/file/982823">Watch the video</a>

Looks very promising
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>45</wp:post_id>
		<wp:post_date>2008-11-10 13:34:20</wp:post_date>
		<wp:post_date_gmt>2008-11-10 18:34:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>clojure-cross-platform-fast-concurrent-concise</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="computerlinguist-com"><![CDATA[computerlinguist.com]]></category>
		<category domain="category" nicename="general-programming"><![CDATA[General Programming]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>105</wp:comment_id>
			<wp:comment_author><![CDATA[Ted Ednil]]></wp:comment_author>
			<wp:comment_author_email>dvd99101@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>216.26.143.41</wp:comment_author_IP>
			<wp:comment_date>2008-11-12 12:41:54</wp:comment_date>
			<wp:comment_date_gmt>2008-11-12 17:41:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I am pretty impressed with clojures and the video, next thing is getting good tools. Running repl in shell is not cool.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Language features vs. Libraries: Why we love extensible languages.</title>
		<link>http://nathanaeljones.com/80/language-features-vs-libraries-why-we-love-extensible-languages/</link>
		<pubDate>Thu, 21 May 2009 11:29:48 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://computerlinguist.com/?p=80</guid>
		<description></description>
		<content:encoded><![CDATA[Here, I'm doing it again. Linkblogging. But hey... It's too good to pass up.

How to implement several new high-profile .NET features in SmallTalk in less than a page of code.

<a href="http://blog.bitquabit.com/2009/05/20/your-language-features-are-my-libraries/">Your Language Features Are My Libraries </a>by Benjamin Pollack]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>80</wp:post_id>
		<wp:post_date>2009-05-21 07:29:48</wp:post_date>
		<wp:post_date_gmt>2009-05-21 11:29:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>language-features-vs-libraries-why-we-love-extensible-languages</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="computerlinguist-com"><![CDATA[computerlinguist.com]]></category>
		<category domain="category" nicename="general-programming"><![CDATA[General Programming]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>E-mail has changed. Our inboxes need to change, too.</title>
		<link>http://nathanaeljones.com/83/e-mail-has-changed-our-inboxes-need-to-change-too/</link>
		<pubDate>Tue, 09 Jun 2009 19:22:06 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://computerlinguist.com/?p=83</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="color: #ff6600;">Edit (May 18, 2011):</span> HA! Google launched the Priority Inbox, almost exactly what I was describing. Google is cool. Hmm... Did they read my blog, or was it just a coincidence? Probably a coincidence.

It's true. Software designers are still thinking about e-mail wrong. I love Gmail, and have used Outlook, Live Mail, Apple Mail, Entourage, Postbox, Thunderbird, Xobni, and a few others. But everyone is still stuck in a decade-old rut.

E-mail is much more than a way for people to communicate.   For freqent users of e-mail, it becomes their personal queue as well. The next generation of e-mail software needs to focus on making e-mail fulfill that role more smoothly.

One major challenge we often face is maintaining e-mail's ease-of-use as our inbox gets filled with newsletters, notifications, sales reciepts, usenet posts, and chain e-mails from distant acquaintances.

Our inbox contains messages that vary in priority from nearly-spam notifications to critical conversations and high-priority to-do items. Notifications bury the important items quickly, and I find myself forwarding e-mails to myself so they stay on top a little while longer. It doesn't have to be this hard! Most e-mail services and clients offer tagging features or flagging, but stop short of integrating those into a smooth workflow or allowing the inbox to be customized to take advantage of the data. To-do lists are great, but I never see them unless they appear in my inbox alongside my e-mails. Most to-do items originate <em>from</em> e-mails, so it makes sense that to-do items should really just be a tag or label for an e-mail. (E-mails sent to yourself should automatically get this tag).

50-70% of e-mails I receive come from a computer, not a human. I still need to see them, but only once, and I don't need to reply. These crowd my inbox, and hide other much more important items. More on how these are easy to label later.
<h2>Introducing the Thinbox</h2>
Some people like absolute control, others are lazy. I'm one of the lazy folk who want my computer to do all the work an keep things simple for me.  To handle this kind of person - I'm suggesting a whole new type of inbox - the thinbox...  This could live alongside the 'inbox' without any compatibility issues, I think. Gmail could implement this without a lot of trouble.

The thinbox is minimalistic. The goal is to only show items that need to be dealt with.  If I'm caught up, it's empty - a blank screen. To achieve this feat, the user is 'guided' to deal with e-mails as they are read, and the view is limited to a certain time span (such as the last week or month). Archived items are never shown.

First, what types of e-mails do we get?
<ol>
	<li>E-mails we want to see and handle now
<ol>
	<li>Reply, and the conversation disappears</li>
	<li>Read and act on. No reply needed; click Archive.</li>
	<li>Read and Archive. Completed conversations, or boring newsletters, sales reciepts, ship notifications, automatic notifications..</li>
</ol>
</li>
	<li>And ones I want to see later
<ol>
	<li>Skim and read later. Interesting newsletters, usenet posts, etc. Cool, but not right now.</li>
	<li>Read and remember to do something on a certain day. To-do item arrive in the form of an e-mail from a colleage or boss, an appointment reminder, or a bill.</li>
	<li>Read and reply later... when I have more data, or when I have more time, or when they get back from vacation/trip/etc</li>
</ol>
</li>
</ol>
This brings us to a feature that we need to achieve our goal - we need to be able to have a e-mail re-appear at the top of an inbox on a given day. This could be implemented with a 'reappearOn' field. This allows us to 'postpone' an e-mail/todo.
<h2>Supporting features needed for thinbox</h2>
<ul>
	<li>Limiting by age in needed, because I will never sort my 9,079 old e-mails: Hide older than 1 day | week | month | all (probably needs to be group level)</li>
</ul>
<ul>
	<li>Results from following queries displayed one after another in the thinbox, with no divider (just a different background color, and a pop-out tab on the left that vertically spans all group items.
<ul>
	<li>"Needs Reply": Search inbox (not all mail) for e-mails I haven't replied to, and aren't flagged automatic, review, or to-do. Plus all e-mails tagged "Needs reply". Defaults to 1 week visibility.</li>
	<li>"Automatic": Could be done with filters, but would be best done as a learning set of heuristics, based of user preferences. Users could black/whitelist addresses. Defaults to 1 day visibility.</li>
	<li>"Up for review": Articles tagged 'review', and have a review date before current time. This is a way to postpone/schedule e-mails and e-mails tagged 'to-do'. A way to remind oneself about an e-mail at a certain time in the future - simply set a future date for it to reappear in the inbox (just sort by scheduled date instead of sent date when present). Defaults to 1 week visibility.</li>
	<li>"to-do": A simple default label. E-mails to oneself are automatically tagged. Defaults to 1 month visibility.</li>
	<li>"Bored?": (optional) A 'quick' label for e-mails that I don't have time to read right now... Should probably stay minimized untill the other groups are empty.</li>
</ul>
</li>
	<li>Quick links (on hover) for marking an item as "to-do", "review", "automatic". Then choosing "soon, tomorrow, next week, next month" as the review time.</li>
	<li>It should be easy to manage groups as a whole: - a tab for each group in a left colum should allow batch archving, postponement, or re-labeling.</li>
	<li>Automatic archiving when I reply (Send and Archive is default). Forwarded e-mails should suggest "Archive" and "Check Later"</li>
	<li>It is important to keep things clean... Instead of displaying the 5+ groups in separate boxes, put them inline, ordered by group, then date. Background color should differ by group. Groups disappear when they have no items.</li>
</ul>
<h3>Labeling 'automatic' e-mails.</h3>
Separating such 'no reply' e-mails from the rest isn't very difficult - we can look for 'unsubscribe' links (newsletters) , large quantities of e-mail addresses in the TO field and the body (chain e-mails), keywords such as "order confirmation" or "reciept", or addresses like no-reply/donotreply@domain.com.  I think we can flag these with 90% accuracy at least, and allow users to correct algorithm mistakes at the e-mail and e-mail adress levels.
<h3>Other gripes</h3>
Viewing all e-mails by a particular address should be a 1-click operation. If I'm looking at an e-mail from johndoe@company.com, there should be a "See all conversations with this person" link. It could appear when hovering over any e-mail address in the entire application - easy to implement. Preferably, other recent conversations should appear below the current conversation as links... Maybe the last 3?]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>83</wp:post_id>
		<wp:post_date>2009-06-09 15:22:06</wp:post_date>
		<wp:post_date_gmt>2009-06-09 19:22:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>e-mail-has-changed-our-inboxes-need-to-change-too</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="computerlinguist-com"><![CDATA[computerlinguist.com]]></category>
		<category domain="category" nicename="general-programming"><![CDATA[General Programming]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>App_Code vs. ascx: Differences you should know</title>
		<link>http://nathanaeljones.com/132/app_code-vs-ascx-differences-you-should-know/</link>
		<pubDate>Thu, 23 Oct 2008 20:30:59 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/?p=132</guid>
		<description></description>
		<content:encoded><![CDATA[	

<p>There's an important factor you should consider when deciding whether to implement your control as an .ascx UserControl or as a Control subclass in App_Code.</p>

<p>Will you <em><strong>ever</strong></em> need to pass a relative path to the control, through a method or attribute? Does your control function as a container for markup? <strong>.ascx UserControls believe that all relative paths are relative to <em>them</em></strong>. I've experimented with a lot of different things, and I'm convinced there is no elegant workaround. If your user controls and pages are in the same directory, you may not discover this problem until you reorganize your app files! <del>While it is possible to set the value of AppRelativeTemplateSourceDirectory, it's not possible to reliably figure out what the value should <em>be</em>.</del> <ins>Added 8/8/08: While it is possible to deduce what the right value for AppRelativeTemplateSourceDirectory should be at a certain point in time using the algorithm at the bottom of the page, it isn't possible to keep that value in sync with hierarchy changes.</ins></p>

<p>The instinctive approach is to reach for the <strong>.Parent</strong> property, but that doesn't work in a some common situations. In particular, this approach won't work directly inside &lt;asp:Content> controls, since they incorrectly report themselves as children of the master page instead of the content page. Correcting for this becomes difficult if you plan to support the use of the controls within the master pages themselves, or support nested master pages. I use content pages exclusively, and I like to keep things simple - so at least 95% of my server controls are right inside the root &lt;asp:Content&gt;&lt;/asp:Content&gt; tags. Ouch. <ins>Update 8/8/08: It's complicated, but there is a way to adjust for the bug when looking for the true TemplateControl. Unfortunately, we're prevented from making .ascx act 'transparent' like App_Code controls by some methods marked 'internal'.</ins></p>

<p>If your control is going to contain other arbitrary controls, markup, or accept paths, you definitely need to go with the App_Code approach. Going with an .ascx file will make all child controls (even if built correctly!) rebase paths relative to your user control, not the file containing the markup.</p>

<p>In case you're curious, the TemplateControl class (which UserControl, Page, and MasterPage inherit from), overrides the TemplateControl property from the Control class.</p>

<pre name="code" class="brush:c-sharp">internal override TemplateControl GetTemplateControl()
{
    return this;
}
</pre>

<p>And when your .ascx file is translated into source code for compilation, the following line is inserted into the Page_Load event handler:</p>

<pre name="code" class="brush:c-sharp">((System.Web.UI.UserControl)(this)).AppRelativeVirtualPath = 
                      "~/cms/events/EventTable.ascx"; //Or whatever the physical location is

</pre>

<p>Application-relative paths can still be used, but are very fragile and sensitive to movement in the parent folder structure. Most paths (like images, css, slideshows, and videos) are best expressed in relative form. As a rule, use relative paths for related files. </p>

<p>I discovered this problem after I already had a series of controls written in .ascx form, so I e-mailed <a href="http://weblogs.asp.net/scottgu/">Scott Guthrie</a> about the dilemma. He passed my e-mail on to <a href="http://blogs.msdn.com/mattgi/">Matt Gibbs</a>, who was very helpful as always. 
</p>

<p>The behavior of .ascx files is actually by design - they aren't designed to have a resident filepath-agnostic mode. He also suggested placing an &lt;asp:Placeholder> control right inside the &lt;asp:Content&gt; tags to make <strong>.Parent</strong> work in that situation.</p>

<p>Since I already had several hundred content pages, I ended up rewriting most of my controls in App_Code instead. For a few controls I really wanted to keep in declarative markup, I used a hack to automatically change AppRelativeTemplateSourceDirectory. Even though I can't fix the TemplateControl structure, I can change the AppRelativeTemplateSourceDirectory to mimic the proper behavior in a few common situations.</p>
<pre name="code" class="brush:c-sharp">        /// &lt;summary&gt;
        /// Set this to true if you externally set the AppRelativeTemplateSourceDirectory.
        /// Otherwise, the externally set value will be ignored.
        /// &lt;/summary&gt;
        public bool LocationOverriden
        {
            get
            {
                return _LocationOverriden;
            }
            set
            {
                if (value)
                    if (!_LocationOverriden) _LocationOverriden = true;
            }
        }
        protected override void OnLoad(EventArgs e)
        {
            if (!LocationOverriden) ImpersonateParentLocation();
            base.OnLoad(e);
        }
        /// &lt;summary&gt;
        /// Retrieves the correct parent template control of the current template control
        /// Doesn't support use within .master files, only content pages. Support for master pages 
        /// could be added with more granular type checks.
        /// &lt;/summary&gt;
        public Control ParentTemplateControl
        {
            get
            {
                //If TemplateControl==Master, return Page instead.
                if (this.Parent != null)
                    if (this.Page != null)
                    {
                        if (this.Parent.TemplateControl == this.Page.Master)
                            return this.Page;
                        else
                            return this.Parent.TemplateControl;
                    }
                return null;

            }
        }

        /// &lt;summary&gt;
        /// Changes AppRelativeTemplateSourceDirectory to match the parent file, if it 
        /// hasn't already been overriden.
        /// Paths 
        /// &lt;/summary&gt;
        public void ImpersonateParentLocation()
        {
            if (ParentTemplateControl != null)
                this.AppRelativeTemplateSourceDirectory = 
               ParentTemplateControl.AppRelativeTemplateSourceDirectory;
        }
</pre>



<p>You are welcome to read (and vote for!) the <a href="https://connect.microsoft.com/VisualStudio/feedback/ViewFeedback.aspx?FeedbackID=273688">Microsoft Connect issue.</a></p>


<h3 style="color:red;">Update 8/5/2008</h3>
<p>I've figured out an algorithm that seems to do a good job of accounting for the ContentPlaceHolder bug. It's a little complicated, but seems to work better than the first hack. I've written a <a href="~/tests/contentplaceholder/" runat="server">live test</a> you can play with. It only tests the algorithm in a few situations, so your mileage may vary. </p>
<p>Use: To resolve a path relative to the parent of your .ascx file, you could call
GetAdjustedParentTemplateControl(this).ResolveUrl(path) to resolve it. Much less brittle than Page.ResolveUrl().
However, that won't work if you have one .ascx file inside another - it only works one level deep.
You can also plug this into the above hack by using the following code.
</p>
<pre name="code" class="brush:c-sharp">
public Control ParentTemplateControl{
   get
   {
      return GetAdjustedParentTemplateControl(this)
   }
}
</pre>
<p>We're essentially mirroring the 'real' TemplateControl with that hack - instead of simply being transparent like the Control class. The problem with mirroring is that we can't keep it up-to-date, so a hack that 'clones'   AppRelativeTemplateSource will never be completely reliable.</p>
<p>If Microsoft hadn't made TemplateControlVirtualDirectory 'internal', it would have been possible to use GetAdjustedParentTemplateControl() to make it act transparent. However, we can't override it, and that's the property ResolveUrl, ResolveClientUrl, MapPath, LoadControl, and everything else uses. Some days I wish the 'internal' keyword had never been invented.</p>
<p> There is an additional loophole we simply can't patch, too - the class ancestry. System.Web is littered with type comparisons which check for "c is TemplateControl" to determine behavior. We can't fool that code, so our success with these hacks will always be limited.
</p>

<h3 style="color:red;">Update 8/8/2008</h3>
<p>Made algorithm to be easier to read and added support for when (c.Parent == null).</p>
<pre name="code" class="brush:c-sharp">
/// &lt;summary&gt;
/// Returns the adjusted TemplateControl property for 'c'. Accounts for the ContentPlaceHolder 
/// Template Control bug.
/// 
/// This bug causes the TemplateControl property of each ContentPlaceHolder to equal the master
/// page that the ContentPlaceHolder originated from. Unfortunately, the contents of each 
/// matchingContent control are dumped right into the ContentPlaceHolder. This makes it 
/// impossible to rely on Parent.TemplateControl, because if the control is right inside 
/// a Content tag, then it will evaluate to the Master page, instead of the Content page.
/// 
/// This function should be useful for .ascx controls wishing to find their true TemplateControl
/// parent. 
/// &lt;/summary&gt;
/// &lt;param name=&quot;c&quot;&gt;The control you want to calculate the adjusted parent TemplateControl
/// property for. If c *is* a TemplateControl, then the function will return the 
/// parent TemplateControl&lt;/param&gt;
/// &lt;returns&gt;&lt;/returns&gt;
public static TemplateControl GetAdjustedParentTemplateControl(Control c)
{
    Control p = null;

    if (c is ContentPlaceHolder)
    {
        //So this method can find the right value for a ContentPlaceHolder itself.
        //To make things work right, CPHs should act as members of the content page, 
        //since the CONTENT tags are replaced by them.
        p = c;
    }
    else
    {
        //We can't do anything here - We must have a parent if c isn't a ContentPlaceHolder.
        if (c.Parent == null) return c.TemplateControl;

        //Start with the parent
        //We want to skip c, so we can use this function on TemplateControls directly 
        //as well as on their .Parent attribute.
        p = c.Parent;

        //Find the first ContentPlaceHolder or TemplateControl in the ancestry. 
        //We skipped c above (also stops at the root control)
        while ((p.Parent != null) &amp;&amp; !(p is ContentPlaceHolder) &amp;&amp; !(p is TemplateControl))
            p = p.Parent;

        //If there aren't any CPHs in the immediate heirarchy, we have nothing to adjust for
        //(An intermediate TemplateControl (.ascx file, UserControl) makes it safe, since it
        //overrides the TemplateControl, etc. properties)
        if (!(p is ContentPlaceHolder)) return c.TemplateControl;
    }



    // If the TemplateControl properties match, then we need to fix the child's (The child's 
    // should reference the child TemplateControl instead). If they're different, we have 
    // nothing to correct.
    if (p.TemplateControl != c.TemplateControl)
    {
        return c.TemplateControl; //Hey, it's different - maybe an intermediate PlaceHolder is
        //cleaning things up for us.
    } else
    {
        //At this point we know that 'c' has an invalid TemplateControl value, because
        //it *must* be different from the value the parent CPH has.

        //At this point, 'c' must be inside a content page or a intermediate 
        //master page.

        //We also know that the correct value is the child TemplateControl
        //So we start at 'c' and work our way back through the master page chain. 
        //We will return the child right before the match.

        //We're starting at the content page and then going through the master pages.

        //Return the content page if the immediate master page is a match
        if (c.Page.Master == c.TemplateControl) return c.Page;

        //Loop through the nested master pages
        MasterPage mp = c.Page.Master;
        while (true)
        {
            System.Diagnostics.Debug.Assert(mp.Master != null,
              &quot;How can the CPH have a TemplateControl reference that's not in the heirarchy?&quot;);

            //If the parent is a match, return the child.
            if (mp.Master == c.TemplateControl) return mp;
            //No match yet? go deeper
            mp = mp.Master;

        }
    }
}

</pre>


]]></content:encoded>
		<excerpt:encoded><![CDATA[Will you ever need to pass relative paths to your control? Does your control function as a container for markup? If so, you should subclass Control instead of using a .ascx file.]]></excerpt:encoded>
		<wp:post_id>132</wp:post_id>
		<wp:post_date>2008-10-23 16:30:59</wp:post_date>
		<wp:post_date_gmt>2008-10-23 20:30:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>app_code-vs-ascx-differences-you-should-know</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="asp-net"><![CDATA[ASP.NET]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>url</wp:meta_key>
			<wp:meta_value><![CDATA[11021_App_Code_vs_ascx_Differences_you_should_know]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>articlebanner</wp:meta_key>
			<wp:meta_value><![CDATA[<a href="~/products/asp-net-image-resizer/" runat="server"><img src="~/ad2.jpg" runat="server" alt="Easy image resizing" /></a>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>5439</wp:comment_id>
			<wp:comment_author><![CDATA[david]]></wp:comment_author>
			<wp:comment_author_email>davidlinde@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>216.205.223.34</wp:comment_author_IP>
			<wp:comment_date>2011-03-21 07:29:41</wp:comment_date>
			<wp:comment_date_gmt>2011-03-21 11:29:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[searched ascx this website came up ranked in 8th... nice ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1300721381.845";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:113:{s:15:"comment_post_ID";s:3:"132";s:14:"comment_author";s:5:"david";s:20:"comment_author_email";s:20:"davidlinde@gmail.com";s:18:"comment_author_url";s:0:"";s:15:"comment_content";s:56:"searched ascx this website came up ranked in 8th... nice";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:14:"216.205.223.34";s:10:"user_agent";s:129:"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; en-US) AppleWebKit/534.16 (KHTML, like Gecko) Chrome/10.0.648.151 Safari/534.16";s:8:"referrer";s:75:"http://nathanaeljones.com/132/app_code-vs-ascx-differences-you-should-know/";s:4:"blog";s:25:"http://nathanaeljones.com";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:75:"http://nathanaeljones.com/132/app_code-vs-ascx-differences-you-should-know/";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:5:"david";s:10:"POST_email";s:20:"davidlinde@gmail.com";s:8:"POST_url";s:0:"";s:12:"POST_comment";s:56:"searched ascx this website came up ranked in 8th... nice";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:3:"132";s:19:"POST_comment_parent";s:1:"0";s:26:"POST_akismet_comment_nonce";s:10:"3759a69c80";s:15:"SERVER_SOFTWARE";s:17:"Microsoft-IIS/7.0";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:21:"PHP_FCGI_MAX_REQUESTS";s:5:"10000";s:5:"PHPRC";s:18:"C:Program FilesPHP";s:15:"ALLUSERSPROFILE";s:13:"C:ProgramData";s:7:"APPDATA";s:50:"C:Windowssystem32configsystemprofileAppDataRoaming";s:11:"APP_POOL_ID";s:13:"ndj-wordpress";s:18:"CommonProgramFiles";s:27:"C:Program FilesCommon Files";s:12:"COMPUTERNAME";s:6:"DED793";s:7:"ComSpec";s:24:"C:Windowssystem32cmd.exe";s:16:"FP_NO_HOST_CHECK";s:2:"NO";s:12:"LOCALAPPDATA";s:48:"C:Windowssystem32configsystemprofileAppDataLocal";s:20:"NUMBER_OF_PROCESSORS";s:1:"2";s:2:"OS";s:10:"Windows_NT";s:4:"Path";s:147:"C:Program FilesPHP;C:Windowssystem32;C:Windows;C:WindowsSystem32Wbem;C:Program FilesMySQLMySQL Server 5.0bin;C:WindowsSystem32WindowsPowerShellv1.0";s:7:"PATHEXT";s:53:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC";s:22:"PROCESSOR_ARCHITECTURE";s:3:"x86";s:20:"PROCESSOR_IDENTIFIER";s:46:"x86 Family 15 Model 4 Stepping 1, GenuineIntel";s:15:"PROCESSOR_LEVEL";s:2:"15";s:18:"PROCESSOR_REVISION";s:4:"0401";s:11:"ProgramData";s:13:"C:ProgramData";s:12:"ProgramFiles";s:15:"C:Program Files";s:12:"PSModulePath";s:45:"C:Windowssystem32WindowsPowerShellv1.0Modules";s:6:"PUBLIC";s:13:"C:UsersPublic";s:11:"SystemDrive";s:2:"C:";s:10:"SystemRoot";s:9:"C:Windows";s:4:"TEMP";s:13:"C:WindowsTEMP";s:3:"TMP";s:13:"C:WindowsTEMP";s:10:"USERDOMAIN";s:15:"MAXIMUMASPLOCAL";s:8:"USERNAME";s:7:"DED793$";s:11:"USERPROFILE";s:36:"C:Windowssystem32configsystemprofile";s:6:"windir";s:9:"C:Windows";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:18:"HTTP_CACHE_CONTROL";s:9:"max-age=0";s:15:"HTTP_CONNECTION";s:10:"Keep-Alive";s:8:"HTTP_VIA";s:11:"1.1 VGRGATE";s:19:"HTTP_CONTENT_LENGTH";s:3:"223";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:90:"application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5";s:19:"HTTP_ACCEPT_CHARSET";s:30:"ISO-8859-1,utf-8;q=0.7,*;q=0.3";s:20:"HTTP_ACCEPT_ENCODING";s:4:"gzip";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"en-US,en;q=0.8";s:11:"HTTP_COOKIE";s:0:"";s:9:"HTTP_HOST";s:18:"nathanaeljones.com";s:12:"HTTP_REFERER";s:75:"http://nathanaeljones.com/132/app_code-vs-ascx-differences-you-should-know/";s:15:"HTTP_USER_AGENT";s:129:"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; en-US) AppleWebKit/534.16 (KHTML, like Gecko) Chrome/10.0.648.151 Safari/534.16";s:11:"HTTP_ORIGIN";s:25:"http://nathanaeljones.com";s:13:"DOCUMENT_ROOT";s:23:"C:Websitesndj-wordpress";s:15:"SCRIPT_FILENAME";s:43:"C:Websitesndj-wordpresswp-comments-post.php";s:20:"IIS_UrlRewriteModule";s:1:"1";s:12:"APPL_MD_PATH";s:16:"/LM/W3SVC/2/ROOT";s:18:"APPL_PHYSICAL_PATH";s:23:"C:Websitesndj-wordpress";s:9:"AUTH_TYPE";s:0:"";s:13:"AUTH_PASSWORD";s:0:"";s:9:"AUTH_USER";s:0:"";s:11:"CERT_COOKIE";s:0:"";s:10:"CERT_FLAGS";s:0:"";s:11:"CERT_ISSUER";s:0:"";s:17:"CERT_SERIALNUMBER";s:0:"";s:12:"CERT_SUBJECT";s:0:"";s:14:"CONTENT_LENGTH";s:3:"223";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:5:"HTTPS";s:3:"off";s:13:"HTTPS_KEYSIZE";s:0:"";s:19:"HTTPS_SECRETKEYSIZE";s:0:"";s:19:"HTTPS_SERVER_ISSUER";s:0:"";s:20:"HTTPS_SERVER_SUBJECT";s:0:"";s:11:"INSTANCE_ID";s:1:"2";s:18:"INSTANCE_META_PATH";s:11:"/LM/W3SVC/2";s:10:"LOCAL_ADDR";s:12:"66.29.219.39";s:10:"LOGON_USER";s:0:"";s:15:"PATH_TRANSLATED";s:43:"C:Websitesndj-wordpresswp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:11:"REMOTE_ADDR";s:14:"216.205.223.34";s:11:"REMOTE_HOST";s:14:"216.205.223.34";s:11:"REMOTE_PORT";s:5:"25025";s:11:"REMOTE_USER";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:11:"SERVER_NAME";s:18:"nathanaeljones.com";s:11:"SERVER_PORT";s:2:"80";s:18:"SERVER_PORT_SECURE";s:1:"0";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:3:"URL";s:21:"/wp-comments-post.php";s:14:"ORIG_PATH_INFO";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1300721380";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1305732717.0321";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Image Resizer Documentation</title>
		<link>http://nathanaeljones.com/142/image-resizer-documentation/</link>
		<pubDate>Fri, 08 Aug 2008 18:28:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/?p=142</guid>
		<description></description>
		<content:encoded><![CDATA[<div style="padding:10px; color:red; font-size:11pt; border:1px solid red; margin-bottom:1.5em;">This is regarding a depreciated version. <a href="http://imageresizing.net/">Visit the V3 website for the latest documentation.</a></div>

<div style="font-size: 130%;">
<div style="font-size: 12pt; border: 1px solid gray; padding: 15px; padding-bottom: 0; margin-bottom: 15px;">

Installation is quick and simple, provided you follow the steps carefully. 99% of problems users encounter are due to skipping a step.

1) <strong>Copy and paste</strong> ImageResizer.dll and ImageResizer.pdb into the /bin directory of your app.
Alternatively, you can copy the inner ImageResizer folder (which contains .cs files) into /App_Code. This second approach allows modification of CustomFolders.cs and Watermark.cs.

2) <strong>Copy and paste</strong> the settings at the bottom of the page into web.config to configure the module.

3) Users of 2.1+, <strong>you're done</strong>! You can now resize images using the "image.jpg.<strong>ashx</strong>?width=500" syntax.
For versions prior to 2.1, or for users wanting the cleaner "image.jpg?width=500" syntax, some <a href="/11111">additional IIS configuration is needed</a>.

<strong>Upgrading?</strong> Read the <a href="/11171">v1.0-v1.2</a>, <a href="/11181">v1.2 to v2.0</a>, <a href="/438/version-2-1b-released/">v2.0-v2.1</a>, or <a href="/489">v2.1b-v2.6</a> upgrade notes instead.

</div>
<h2>Configuration</h2>
You will need to insert the following settings into web.config in the designated places.
<pre class="brush:xml">&lt;system.web&gt;
  ...
  &lt;httpModules&gt;
    &lt;add name="ImageResizer" type="fbs.ImageResizer.InterceptModule"/&gt;
  &lt;/httpModules&gt;
  ...
&lt;/system.web&gt;
&lt;system.webServer&gt;
  &lt;validation validateIntegratedModeConfiguration="false"/&gt;
  ...
  &lt;modules&gt;
    &lt;add name="ImageResizer" type="fbs.ImageResizer.InterceptModule"/&gt;
  &lt;/modules&gt;
&lt;/system.webServer&gt;</pre>
Last, some app settings for the resizer. You can use the following safely with v2.1 and up. Full configuration reference and notes for other versions can be found in the next section.
<pre class="brush:xml">&lt;appSettings&gt;
    ...
    &lt;add key="ImageDiskCacheDir" value="imagecache" /&gt;
    &lt;add key="MaxCachedImages" value="30000" /&gt;
    &lt;add key="ImageResizerMaxWidth" value="1680" /&gt;
    &lt;add key="ImageResizerMaxHeight" value="1680" /&gt;
    &lt;add key="ImageResizerClientCacheMinutes" value="1440" /&gt;
    &lt;add key="AllowURLRewriting" value="true" /&gt;
    &lt;add key ="ResizeExtension" value=".ashx"/&gt;
    ...
&lt;/appSettings&gt;</pre>
<h2>Complete reference</h2>
<pre class="brush:xml"> &lt;!-- The directory to store cached version of images. Relative to the application root.
If you want the cache outside the application, use a
Virtual Folder in IIS to point the physical location elsewhere. --&gt;
&lt;add key=&quot;ImageDiskCacheDir&quot; value=&quot;imagecache&quot;/&gt;

&lt;!-- How many files to keep in the cache. The 10% least recently used files
will be deleted when this limit is reached. Don&#39;t set this lower than the
number of images on your site. 2x the image count is a good default. 
If you are getting &quot;Access Denied&quot; messages, this is the cuplrit - you need to 
increase it --&gt;
&lt;add key=&quot;MaxCachedImages&quot; value=&quot;30000&quot; /&gt;

&lt;!-- The following settings are optional: --&gt;

&lt;!-- The maximum size to permit images to be resized to. --&gt;
&lt;add key=&quot;ImageResizerMaxWidth&quot; value=&quot;1680&quot; /&gt;
&lt;add key=&quot;ImageResizerMaxHeight&quot; value=&quot;1680&quot; /&gt;

&lt;!-- Takes effect in version 1.2+. The default (for all versions) 
is 1440 minutes (24 hours). Set to 0 to disable *client* caching 
(304 &quot;Not Modified&quot; responses will still be returned if nothing has changed). 
Client caching is not related to disk caching. --&gt;
&lt;add key=&quot;ImageResizerClientCacheMinutes&quot; value=&quot;1440&quot; /&gt;

&lt;!-- This enables /resize(x,y,f)/image.jpg notation in v1.2+. Enabling this
will make URL authorization ineffective on image files. 
Changed to AllowURLRewriting in 2.0--&gt;
&lt;add key=&quot;AllowFolderResizeNotation&quot; value=&quot;true&quot; /&gt;

&lt;!-- This enables /resize(x,y,f)/image.jpg notation and other CustomFolders.cs
rewriting (other than querystring-only changes) in v2.0. Enabling this
will make URL authorization ineffective on image files on versions prior to 2.1b.--&gt;
&lt;add key=&quot;AllowURLRewriting&quot; value=&quot;true&quot; /&gt;

&lt;!-- Enable only for debugging! (v2.0a+ only) 
Prevents use of cached files - Required for seeing results 
when changing the resizing algorithms.
Causes terrible performance - don&#39;t leave enabled.--&gt;
&lt;add key=&quot;DiskCacheAlwaysInvalid&quot; value=&quot;false&quot;/&gt;

&lt;!-- (v2.0b+ only) Prevents the cache cleanup routine from running. If you want to
manually purge the image cache yourself, and aren&#39;t worried about running out
of disk space via a DOS attack, you can disable this. Not advised. --&gt;
&lt;add key=&quot;DisableCacheCleanup&quot; value=&quot;false&quot;/&gt;

&lt;!-- (v2.1+ only) Disabling custom quantization allows the resizer to function in low trust
environments where managed pointer access and data type marshaling is prohibited.
However, PNGs and BMPs can only be output in 32-bit mode, and GIFs will use the default
halftone pallete. Enable this if JPGs and PNGs work, but GIFs don&#39;t, and using colors=255
on PNGs causes them to break also.
Causes much lower quality GIFs to be generated.
Version 2.1+.
--&gt;
&lt;add key =&quot;DisableCustomQuantization&quot; value=&quot;false&quot;/&gt;

&lt;!-- (v2.1b+ only) This allows images to be resized without any
IIS configuration whatsoever (AllowURLRewriting must be true, however).
Just set this value to &quot;.axd&quot;, &quot;.ashx&quot;, &quot;.aspx&quot;, or any extension
already registered in IIS, and add the same extension to your image URLs
when you are resizing them. Doesn&#39;t conflict with other pages/files with 
that extension, unless you name them .jpeg.ashx., etc.
When configured properly in IIS, any extension should work, but &quot;.ashx&quot; 
seems to be configured right on the largest number of servers.
    
Ex. /images/media/flower.jpg -&gt; /images/media/flower.jpg.axd?width=x&amp;height=y  
--&gt;
&lt;add key =&quot;ResizeExtension&quot; value=&quot;.ashx&quot;/&gt;

&lt;!-- v2.6+ Disables the additional URL authorization checks 
performed by the resizer after URL rewriting. --&gt;
&lt;add key=&quot;DisableImageURLAuthorization&quot; value=&quot;false&quot;/&gt;
      
&lt;!-- v2.2+ Enables use of registired VirtualPathProviders.
Inherently stops modified date checking.
(i.e, cached files are never updated, unless the VirtualFile
implements IVirtualFileWithModifiedDatae). --&gt;
&lt;add key=&quot;ImageResizerUseVirtualPathProvider&quot; value =&quot;false&quot;/&gt;
    
&lt;!-- v2.5+ Only executes the virtual path provider if the physical file doesn&#39;t exist --&gt;
&lt;add key=&quot;ImageResizerUseVirtualPathProviderAsFallback&quot; value =&quot;false&quot;/&gt;

&lt;!-- v2.3+ When set to a non-empty value, divides the cache into the
specified number of subfolders. MUST be a power of two, or it will get 
rounded up to the next power of two, which might be VERY different from 
the configured value. Values above 8096 are not suggested for best NTFS performance. 
Suggested value is (MaxCachedImages / 7500).  Remember to delete the imagecache
folder every time you change this value - otherwise lots of orphaned files will be there.
--&gt;
&lt;add key=&quot;ImageCacheSubfolders&quot; value=&quot;8&quot;/&gt;</pre>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[Installation and configuration instructions for the Image Resizer]]></excerpt:encoded>
		<wp:post_id>142</wp:post_id>
		<wp:post_date>2008-08-08 14:28:00</wp:post_date>
		<wp:post_date_gmt>2008-08-08 18:28:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>image-resizer-documentation</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="image-resizer"><![CDATA[image resizer]]></category>
		<category domain="post_tag" nicename="image-resizing"><![CDATA[Image Resizing]]></category>
		<category domain="category" nicename="image-resizing"><![CDATA[Image Resizing]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>url</wp:meta_key>
			<wp:meta_value><![CDATA[11141_Image_Resizer_Documentation]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>460</wp:comment_id>
			<wp:comment_author><![CDATA[Chris]]></wp:comment_author>
			<wp:comment_author_email>cwruck@pro-masystems.com.au</wp:comment_author_email>
			<wp:comment_author_url>http://www.gracecosmetics.com.au</wp:comment_author_url>
			<wp:comment_author_IP>118.208.115.190</wp:comment_author_IP>
			<wp:comment_date>2010-04-30 02:59:57</wp:comment_date>
			<wp:comment_date_gmt>2010-04-30 02:59:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I have installed your trial version and I discovered that there is a conflict with IIS default configuration, where the extension .axd is already defined under Home Directory/Configuration/Mappings. Your code is not rendering the images at all (red x in IE for an unfound image). If I modify the extension to something unused, say .axda in web.config and also in the image src, it works correctly. What is the best fix for this, other than changing the extension to something other than .axd? ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>461</wp:comment_id>
			<wp:comment_author><![CDATA[nathanaeljones]]></wp:comment_author>
			<wp:comment_author_email>nathanael.jones@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://intensedebate.com/people/nathanaeljones</wp:comment_author_url>
			<wp:comment_author_IP>69.208.135.204</wp:comment_author_IP>
			<wp:comment_date>2010-05-05 23:58:04</wp:comment_date>
			<wp:comment_date_gmt>2010-05-05 23:58:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The best solution is to change it to .ashx. Some version of IIS don&#039;t handle .axd well, and other do... All seem to handle .ashx properly.  ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>460</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>981</wp:comment_id>
			<wp:comment_author><![CDATA[Herve]]></wp:comment_author>
			<wp:comment_author_email>hcotrez@yahoo.fr</wp:comment_author_email>
			<wp:comment_author_url>http://www.aromes-de-vin.com</wp:comment_author_url>
			<wp:comment_author_IP>93.26.174.76</wp:comment_author_IP>
			<wp:comment_date>2010-06-30 13:52:19</wp:comment_date>
			<wp:comment_date_gmt>2010-06-30 17:52:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, 
 
I have converted some asp.net applications from 3.5 to 4 and image resizer isn&#039;t working anymore. 
 
I found that one of my upgraded DLL mentions the .axd extension in my web.config and have changed to .ashx without anymore success. 
 
I there an known issue with the asp.net 4 VB ? 
 
Thanks for your support... ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1096</wp:comment_id>
			<wp:comment_author><![CDATA[Herve]]></wp:comment_author>
			<wp:comment_author_email>hcotrez@yahoo.fr</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>62.192.17.8</wp:comment_author_IP>
			<wp:comment_date>2010-07-08 06:24:44</wp:comment_date>
			<wp:comment_date_gmt>2010-07-08 10:24:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I have converted several asp.net applications from 3.5 to 4 and image resizer isn&rsquo;t working anymore even if I change .axd with .ashx. 
 
Can you confirm me that IR should work on the version of the .net framework ? ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1184</wp:comment_id>
			<wp:comment_author><![CDATA[Herve]]></wp:comment_author>
			<wp:comment_author_email>hcotrez@yahoo.fr</wp:comment_author_email>
			<wp:comment_author_url>http://twitter.com/hcotrez</wp:comment_author_url>
			<wp:comment_author_IP>62.192.17.8</wp:comment_author_IP>
			<wp:comment_date>2010-07-13 02:32:11</wp:comment_date>
			<wp:comment_date_gmt>2010-07-13 06:32:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, 
 
I can&#039;t make image resizer working under .net 4.0 and all my post are deleted, email not replied. 
 
Is it possible to have your feedback about it? 
 
Thanks ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1294</wp:comment_id>
			<wp:comment_author><![CDATA[Herve]]></wp:comment_author>
			<wp:comment_author_email>hcotrez@yahoo.fr</wp:comment_author_email>
			<wp:comment_author_url>http://www.aromes-de-vin.com</wp:comment_author_url>
			<wp:comment_author_IP>92.90.21.5</wp:comment_author_IP>
			<wp:comment_date>2010-07-18 15:44:21</wp:comment_date>
			<wp:comment_date_gmt>2010-07-18 19:44:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[All is ok, was a right problem (Network service instead of IUSRS), saw it after a direct check on the image url, thanks for your support and that great tool. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1184</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6999</wp:comment_id>
			<wp:comment_author><![CDATA[Aftab]]></wp:comment_author>
			<wp:comment_author_email>aftab@avenir-technologies.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>182.177.76.30</wp:comment_author_IP>
			<wp:comment_date>2011-08-14 09:19:53</wp:comment_date>
			<wp:comment_date_gmt>2011-08-14 13:19:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Can some one upload a configured sample of asp.net project ... i mean a sample project .... ]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1313342394.0457";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:110:{s:15:"comment_post_ID";s:3:"142";s:14:"comment_author";s:5:"Aftab";s:20:"comment_author_email";s:29:"aftab@avenir-technologies.com";s:18:"comment_author_url";s:0:"";s:15:"comment_content";s:91:"Can some one upload a configured sample of asp.net project ... i mean a sample project ....";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:13:"182.177.76.30";s:10:"user_agent";s:90:"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2.19) Gecko/20110707 Firefox/3.6.19";s:8:"referrer";s:58:"http://nathanaeljones.com/142/image-resizer-documentation/";s:4:"blog";s:25:"http://nathanaeljones.com";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:58:"http://nathanaeljones.com/142/image-resizer-documentation/";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:5:"Aftab";s:10:"POST_email";s:29:"aftab@avenir-technologies.com";s:8:"POST_url";s:0:"";s:12:"POST_comment";s:91:"Can some one upload a configured sample of asp.net project ... i mean a sample project ....";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:3:"142";s:19:"POST_comment_parent";s:1:"0";s:26:"POST_akismet_comment_nonce";s:10:"3e872149a5";s:15:"SERVER_SOFTWARE";s:17:"Microsoft-IIS/7.0";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:21:"PHP_FCGI_MAX_REQUESTS";s:5:"10000";s:5:"PHPRC";s:18:"C:Program FilesPHP";s:15:"ALLUSERSPROFILE";s:13:"C:ProgramData";s:7:"APPDATA";s:50:"C:Windowssystem32configsystemprofileAppDataRoaming";s:11:"APP_POOL_ID";s:13:"ndj-wordpress";s:18:"CommonProgramFiles";s:27:"C:Program FilesCommon Files";s:12:"COMPUTERNAME";s:6:"DED793";s:7:"ComSpec";s:24:"C:Windowssystem32cmd.exe";s:16:"FP_NO_HOST_CHECK";s:2:"NO";s:12:"LOCALAPPDATA";s:48:"C:Windowssystem32configsystemprofileAppDataLocal";s:20:"NUMBER_OF_PROCESSORS";s:1:"2";s:2:"OS";s:10:"Windows_NT";s:4:"Path";s:306:"C:Program FilesPHP;C:Windowssystem32;C:Windows;C:WindowsSystem32Wbem;C:Program FilesMySQLMySQL Server 5.0bin;C:WindowsSystem32WindowsPowerShellv1.0;c:Program FilesMicrosoft SQL Server100ToolsBinn;c:Program FilesMicrosoft SQL Server100DTSBinn;c:Program FilesMicrosoft SQL Server100ToolsBinnVSShellCommon7IDE";s:7:"PATHEXT";s:53:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC";s:22:"PROCESSOR_ARCHITECTURE";s:3:"x86";s:20:"PROCESSOR_IDENTIFIER";s:46:"x86 Family 15 Model 4 Stepping 1, GenuineIntel";s:15:"PROCESSOR_LEVEL";s:2:"15";s:18:"PROCESSOR_REVISION";s:4:"0401";s:11:"ProgramData";s:13:"C:ProgramData";s:12:"ProgramFiles";s:15:"C:Program Files";s:12:"PSModulePath";s:45:"C:Windowssystem32WindowsPowerShellv1.0Modules";s:6:"PUBLIC";s:13:"C:UsersPublic";s:11:"SystemDrive";s:2:"C:";s:10:"SystemRoot";s:9:"C:Windows";s:4:"TEMP";s:13:"C:WindowsTEMP";s:3:"TMP";s:13:"C:WindowsTEMP";s:10:"USERDOMAIN";s:15:"MAXIMUMASPLOCAL";s:8:"USERNAME";s:7:"DED793$";s:11:"USERPROFILE";s:36:"C:Windowssystem32configsystemprofile";s:6:"windir";s:9:"C:Windows";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:15:"HTTP_KEEP_ALIVE";s:3:"115";s:19:"HTTP_CONTENT_LENGTH";s:3:"267";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:19:"HTTP_ACCEPT_CHARSET";s:30:"ISO-8859-1,utf-8;q=0.7,*;q=0.7";s:20:"HTTP_ACCEPT_ENCODING";s:12:"gzip,deflate";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"en-us,en;q=0.5";s:9:"HTTP_HOST";s:18:"nathanaeljones.com";s:12:"HTTP_REFERER";s:58:"http://nathanaeljones.com/142/image-resizer-documentation/";s:15:"HTTP_USER_AGENT";s:90:"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2.19) Gecko/20110707 Firefox/3.6.19";s:13:"DOCUMENT_ROOT";s:23:"C:Websitesndj-wordpress";s:15:"SCRIPT_FILENAME";s:43:"C:Websitesndj-wordpresswp-comments-post.php";s:20:"IIS_UrlRewriteModule";s:1:"1";s:12:"APPL_MD_PATH";s:16:"/LM/W3SVC/2/ROOT";s:18:"APPL_PHYSICAL_PATH";s:23:"C:Websitesndj-wordpress";s:9:"AUTH_TYPE";s:0:"";s:13:"AUTH_PASSWORD";s:0:"";s:9:"AUTH_USER";s:0:"";s:11:"CERT_COOKIE";s:0:"";s:10:"CERT_FLAGS";s:0:"";s:11:"CERT_ISSUER";s:0:"";s:17:"CERT_SERIALNUMBER";s:0:"";s:12:"CERT_SUBJECT";s:0:"";s:14:"CONTENT_LENGTH";s:3:"267";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:5:"HTTPS";s:3:"off";s:13:"HTTPS_KEYSIZE";s:0:"";s:19:"HTTPS_SECRETKEYSIZE";s:0:"";s:19:"HTTPS_SERVER_ISSUER";s:0:"";s:20:"HTTPS_SERVER_SUBJECT";s:0:"";s:11:"INSTANCE_ID";s:1:"2";s:18:"INSTANCE_META_PATH";s:11:"/LM/W3SVC/2";s:10:"LOCAL_ADDR";s:12:"66.29.219.39";s:10:"LOGON_USER";s:0:"";s:15:"PATH_TRANSLATED";s:43:"C:Websitesndj-wordpresswp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:11:"REMOTE_ADDR";s:13:"182.177.76.30";s:11:"REMOTE_HOST";s:13:"182.177.76.30";s:11:"REMOTE_PORT";s:5:"19986";s:11:"REMOTE_USER";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:11:"SERVER_NAME";s:18:"nathanaeljones.com";s:11:"SERVER_PORT";s:2:"80";s:18:"SERVER_PORT_SECURE";s:1:"0";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:3:"URL";s:21:"/wp-comments-post.php";s:14:"ORIG_PATH_INFO";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1313342393";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1313681395.7951";s:7:"message";s:41:"admin changed the comment status to trash";s:5:"event";s:12:"status-trash";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[1]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1326224906]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7128</wp:comment_id>
			<wp:comment_author><![CDATA[ZMR_BINU]]></wp:comment_author>
			<wp:comment_author_email>binuvar1989@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>59.90.206.61</wp:comment_author_IP>
			<wp:comment_date>2011-10-25 09:17:52</wp:comment_date>
			<wp:comment_date_gmt>2011-10-25 13:17:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Its working fine with me. But there is a problem if the width and height are not he same..Its not giving the actual image i wanted. I resized an image of 1000*600 to 600*600 but its not giving the requested answer. its giving an amage of 600* 400. Can any one help me please ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7129</wp:comment_id>
			<wp:comment_author><![CDATA[Nathanael Jomes]]></wp:comment_author>
			<wp:comment_author_email>nathanael.jones@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>109.200.58.134</wp:comment_author_IP>
			<wp:comment_date>2011-10-25 09:28:41</wp:comment_date>
			<wp:comment_date_gmt>2011-10-25 13:28:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi folks, unfortunately, I don&#039;t get e-mails when you comment here. I can&#039;t get SMTP to work right on this windows box... But soon  I will be migrating this website to a Ruby CMS, and things shoud be better. 
 
Also, if you will notice, there is a bright red box at the top of the screen. Click that link - it will take you to the real website, with support info and up-to-date documentation. 
 
And Sample Projects for everything! 
 
Also, please email support@imageresizing.net if you have any issues, rather than posting here, where I don&#039;t get notifed of replies. I respond to 60% of emails within 30 minutes. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7130</wp:comment_id>
			<wp:comment_author><![CDATA[Nathanael Jones]]></wp:comment_author>
			<wp:comment_author_email>Nathanael.jones@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>109.200.58.134</wp:comment_author_IP>
			<wp:comment_date>2011-10-25 09:38:02</wp:comment_date>
			<wp:comment_date_gmt>2011-10-25 13:38:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You need to use 'width' and 'height' instead of 'maxwidth' and 'maxheight'. Please take a look at the documentation on http://imageresizing.net/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>7128</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1319549882.4389";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:110:{s:15:"comment_post_ID";s:3:"142";s:14:"comment_author";s:15:"Nathanael Jones";s:20:"comment_author_email";s:25:"Nathanael.jones@gmail.com";s:18:"comment_author_url";s:0:"";s:15:"comment_content";s:144:"You need to use 'width' and 'height' instead of 'maxwidth' and 'maxheight'. Please take a look at the documentation on http://imageresizing.net/";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:4:"7128";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:14:"109.200.58.134";s:10:"user_agent";s:139:"Mozilla/5.0 (iPad; U; CPU OS 4_3_5 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8L1 Safari/6533.18.5";s:8:"referrer";s:58:"http://nathanaeljones.com/142/image-resizer-documentation/";s:4:"blog";s:25:"http://nathanaeljones.com";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:58:"http://nathanaeljones.com/142/image-resizer-documentation/";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:15:"Nathanael Jones";s:10:"POST_email";s:25:"Nathanael.jones@gmail.com";s:8:"POST_url";s:0:"";s:12:"POST_comment";s:144:"You need to use 'width' and 'height' instead of 'maxwidth' and 'maxheight'. Please take a look at the documentation on http://imageresizing.net/";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:3:"142";s:19:"POST_comment_parent";s:4:"7128";s:26:"POST_akismet_comment_nonce";s:10:"6e4a735fca";s:15:"SERVER_SOFTWARE";s:17:"Microsoft-IIS/7.0";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:21:"PHP_FCGI_MAX_REQUESTS";s:5:"10000";s:5:"PHPRC";s:18:"C:Program FilesPHP";s:15:"ALLUSERSPROFILE";s:13:"C:ProgramData";s:7:"APPDATA";s:50:"C:Windowssystem32configsystemprofileAppDataRoaming";s:11:"APP_POOL_ID";s:13:"ndj-wordpress";s:18:"CommonProgramFiles";s:27:"C:Program FilesCommon Files";s:12:"COMPUTERNAME";s:6:"DED793";s:7:"ComSpec";s:24:"C:Windowssystem32cmd.exe";s:16:"FP_NO_HOST_CHECK";s:2:"NO";s:12:"LOCALAPPDATA";s:48:"C:Windowssystem32configsystemprofileAppDataLocal";s:20:"NUMBER_OF_PROCESSORS";s:1:"2";s:2:"OS";s:10:"Windows_NT";s:4:"Path";s:306:"C:Program FilesPHP;C:Windowssystem32;C:Windows;C:WindowsSystem32Wbem;C:Program FilesMySQLMySQL Server 5.0bin;C:WindowsSystem32WindowsPowerShellv1.0;c:Program FilesMicrosoft SQL Server100ToolsBinn;c:Program FilesMicrosoft SQL Server100DTSBinn;c:Program FilesMicrosoft SQL Server100ToolsBinnVSShellCommon7IDE";s:7:"PATHEXT";s:53:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC";s:22:"PROCESSOR_ARCHITECTURE";s:3:"x86";s:20:"PROCESSOR_IDENTIFIER";s:46:"x86 Family 15 Model 4 Stepping 1, GenuineIntel";s:15:"PROCESSOR_LEVEL";s:2:"15";s:18:"PROCESSOR_REVISION";s:4:"0401";s:11:"ProgramData";s:13:"C:ProgramData";s:12:"ProgramFiles";s:15:"C:Program Files";s:12:"PSModulePath";s:45:"C:Windowssystem32WindowsPowerShellv1.0Modules";s:6:"PUBLIC";s:13:"C:UsersPublic";s:11:"SystemDrive";s:2:"C:";s:10:"SystemRoot";s:9:"C:Windows";s:4:"TEMP";s:13:"C:WindowsTEMP";s:3:"TMP";s:13:"C:WindowsTEMP";s:10:"USERDOMAIN";s:15:"MAXIMUMASPLOCAL";s:8:"USERNAME";s:7:"DED793$";s:11:"USERPROFILE";s:36:"C:Windowssystem32configsystemprofile";s:6:"windir";s:9:"C:Windows";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:19:"HTTP_CONTENT_LENGTH";s:3:"353";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:90:"application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:20:"HTTP_ACCEPT_LANGUAGE";s:5:"en-us";s:11:"HTTP_COOKIE";s:0:"";s:9:"HTTP_HOST";s:18:"nathanaeljones.com";s:12:"HTTP_REFERER";s:58:"http://nathanaeljones.com/142/image-resizer-documentation/";s:15:"HTTP_USER_AGENT";s:139:"Mozilla/5.0 (iPad; U; CPU OS 4_3_5 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8L1 Safari/6533.18.5";s:11:"HTTP_ORIGIN";s:25:"http://nathanaeljones.com";s:13:"DOCUMENT_ROOT";s:23:"C:Websitesndj-wordpress";s:15:"SCRIPT_FILENAME";s:43:"C:Websitesndj-wordpresswp-comments-post.php";s:20:"IIS_UrlRewriteModule";s:1:"1";s:12:"APPL_MD_PATH";s:16:"/LM/W3SVC/2/ROOT";s:18:"APPL_PHYSICAL_PATH";s:23:"C:Websitesndj-wordpress";s:9:"AUTH_TYPE";s:0:"";s:13:"AUTH_PASSWORD";s:0:"";s:9:"AUTH_USER";s:0:"";s:11:"CERT_COOKIE";s:0:"";s:10:"CERT_FLAGS";s:0:"";s:11:"CERT_ISSUER";s:0:"";s:17:"CERT_SERIALNUMBER";s:0:"";s:12:"CERT_SUBJECT";s:0:"";s:14:"CONTENT_LENGTH";s:3:"353";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:5:"HTTPS";s:3:"off";s:13:"HTTPS_KEYSIZE";s:0:"";s:19:"HTTPS_SECRETKEYSIZE";s:0:"";s:19:"HTTPS_SERVER_ISSUER";s:0:"";s:20:"HTTPS_SERVER_SUBJECT";s:0:"";s:11:"INSTANCE_ID";s:1:"2";s:18:"INSTANCE_META_PATH";s:11:"/LM/W3SVC/2";s:10:"LOCAL_ADDR";s:12:"66.29.219.39";s:10:"LOGON_USER";s:0:"";s:15:"PATH_TRANSLATED";s:43:"C:Websitesndj-wordpresswp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:11:"REMOTE_ADDR";s:14:"109.200.58.134";s:11:"REMOTE_HOST";s:14:"109.200.58.134";s:11:"REMOTE_PORT";s:5:"65355";s:11:"REMOTE_USER";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:11:"SERVER_NAME";s:18:"nathanaeljones.com";s:11:"SERVER_PORT";s:2:"80";s:18:"SERVER_PORT_SECURE";s:1:"0";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:3:"URL";s:21:"/wp-comments-post.php";s:14:"ORIG_PATH_INFO";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1319549881";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Image Resizer License</title>
		<link>http://nathanaeljones.com/145/image-resizer-license/</link>
		<pubDate>Wed, 06 Aug 2008 18:38:07 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/?p=145</guid>
		<description></description>
		<content:encoded><![CDATA[<div style="padding:10px; color:red; font-size:11pt; border:1px solid red; margin-bottom:1em">This is regarding a depreciated version. <a href="http://imageresizing.net/licenses/">You can access the latest license details for V3 here</a></div>



By <strong>purchasing the download</strong>, you (the developer) are permitted to
<ol>
	<li><strong>Modify and use</strong> the component in all of your projects.</li>
	<li><strong>Redistribute the source code as part of another project</strong>, provided the component
is <strong>less than 5% of the project</strong> (in lines of code), and you keep this information attached.</li>
</ol>

You may <strong>not</strong>
<ol>
	<li><strong>Extract it from a project</strong> for re-use (in a different project) without purchasing a download
from http://nathanaeljones.com/. If nathanaeljones.com is no longer running, and a download
cannot be purchased, then you may extract the code.</li>
</ol>
<strong>This is basically a developer license</strong> - if you aren't a developer (i.e., a hosting company wanting a site or server license), please e-mail me (nathanael.jones@gmail.com).
<p style="margin-bottom:10em"></p>

<h3>Aaand... the stock software disclaimer, in highly annoying all caps</h3>
<h4>Disclaimer of Warranty</h4>
THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM “AS IS” WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.
<h4>Limitation of Liability</h4>
IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.]]></content:encoded>
		<excerpt:encoded><![CDATA[License agreement for the Image Resizer]]></excerpt:encoded>
		<wp:post_id>145</wp:post_id>
		<wp:post_date>2008-08-06 14:38:07</wp:post_date>
		<wp:post_date_gmt>2008-08-06 18:38:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>image-resizer-license</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="image-resizing"><![CDATA[Image Resizing]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>url</wp:meta_key>
			<wp:meta_value><![CDATA[11151_Image_Resizer_License]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Referencing stylesheets, scripts from content pages</title>
		<link>http://nathanaeljones.com/146/referencing-stylesheets-scripts-from-content-pages/</link>
		<pubDate>Fri, 08 Aug 2008 23:59:34 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/?p=146</guid>
		<description></description>
		<content:encoded><![CDATA[The ability to reference style sheets and scripts from within content pages is greatly needed, but<strong> link and meta tags only work in the root master page</strong>. Script references don't work anywhere... that's a separate issue. Here's how to add full link, meta, and script parsing to your entire application.

Because the parsing logic for 'link', 'meta', and 'title' is only inside the HtmlHead class (in the HtmlHeadBuilder class), link and meta tags don't work in content pages. If you put a &lt;asp:ContentPlaceHolder&gt; tag in the <a href="http://aspnetresources.com/blog/linking_stylesheets_from_master_pages.aspx">head section of the master page</a>, and a matching &lt;asp:Content&gt; tag in the content page, you've created a barrier the special parsing logic can't cross.

I wrote a <a href="/aspnet/LiveTests/ContentPlaceHolder/">series of tests</a> to determine exactly when &lt;script&gt;, &lt;link&gt;, and &lt;meta&gt; parsing stop working. It's kind of like an 'acid test' for this issue. It also includes 8 tests for a 2nd bug with ContentPlaceHolder. While 2 of those always fail, the rest turn green when you hit 'Enable patch". Only Microsoft can fix the last two, since the methods are marked 'internal'.

If you haven't tried using <a href="~/10981">application-relative</a> paths, you might not have noticed the issue yet. Relative paths will appear to work if the physical path of the page matches the browser path, i.e, no nested master pages, no URL rewriting or Server.Transfer. Root-relative paths will work, but <a href="~/11071">using them is a short-sighted mistake.</a>.

So, what <em><strong>does</strong></em> happen to them? Well, if your link and meta tags have <em>runat="server"</em> on them, then the generic parsing code will turn them into HtmlGenericControl instances. If not, the tags are left as plain text and packed together in a LiteralControl instance between other server tags.
HtmlGenericControl doesn't do path resolution, so adding runat="server" doesn't help any.
<h2>My solution</h2>
I wrote an algorithm that does a 2nd parsing pass to make everything act like it should. While I was at it, I also added support for script references in the head section. The algorithm
<ol class="normallist">
	<li><strong>Parses the leftover LiteralControl instances in Page.Header</strong> and turns &lt;link&gt;, &lt;meta&gt;, and &lt;script&gt; tags into <strong>HtmlMeta, HtmlLink, and ScriptReference(custom class)</strong> instances. The remnants of the LiteralControl are split into multiple LiteralControl instances. tags inside client or server comments are ignored.</li>
	<li><strong>Recursively loops through all HtmlGeneric control instances</strong> in Page.Header and turns &lt;link&gt;, &lt;meta&gt;, and &lt;script&gt; tags into HtmlMeta, HtmlLink or ScriptReference instances (This catches the ones that twere parsed by the generic parser because they had <em>runat="server"</em> specified.)</li>
</ol>
When dynamically creating controls directly inside a ContentPlaceHolder, it's critical that you assign the TemplateControl property correctly if you want URL rebasing to work. If you don't, the control will ask it's parent (the CPH), what the TemplateControl is, and the CPH will return the master page. Then everything will get rebased relative to the master page instead.
In my algorithm, I use the <a href="~/11021">GetAdjustedParentTemplateControl() method</a> to adjust for the CPH issue when setting the TemplateControl property.
<h2>What if it's fixed?</h2>
The patch just looks at the leftovers. If Microsoft fixes this behavior, there won't be any leftovers.
<h2>What about performance?</h2>
Regular expressions are very, very fast, and we're only running them on leftover LiteralControls. On a large head section, timing tests hovered around 0.7 milliseconds. I've been using this on a high-traffic site for over a year.
<h2>The code</h2>
The two main files are ContentPlaceHolderFixes.cs and ScriptReference.cs. To repair the head section on the current page, call ContentPlaceHolderFixes.RepairPageHeader(this); during OnLoad.

I recommend sub-classing Page and doing this application-wide. You'll end up wanting to do this at some time or another anyway.
<pre class="c-sharp">    public class PageBase : Page
    {
        /// &lt;summary&gt;
        /// Creates a new PageBase instance.
        /// &lt;/summary&gt;
        public PageBase(){}

        /// &lt;summary&gt;
        /// Calls the ContentPlaceHolderHeadRepair.Repair method
        /// &lt;/summary&gt;
        /// &lt;param name="e"&gt;&lt;/param&gt;
        protected override void OnLoad(EventArgs e)
        {
            //Parses link, meta, and script tags that got missed by the Head&gt;CPH bug.
            ContentPlaceHolderFixes.RepairPageHeader(this);

            //Fire the events later
            base.OnLoad(e);
        }

    }</pre>
To use this base class, tell your code-behind file to inherit from PageBase instead of Page. If you don't have a code-behind, set <em>Inherits="PageBase"</em> on the page directive.
<h2>Tests</h2>
The project includes a "Test" folder and a Test.aspx file. Run it to compare results with and without the patch. It contains about 26 tests, which exercise the patch under different conditions: nested master pages, runat="server", visible="false". etc. Test.aspx uses Server.Transfer to simulate URL rewriting.

I'll be very happy when those <a href="~/tests/contentplaceholder/">26 tests</a> succeed without needing the patch, and I'm sure everyone else will also. If you're interested in monitoring the progress of the issue, you can check out the <a href="https://connect.microsoft.com/VisualStudio/feedback/ViewFeedback.aspx?FeedbackID=273683">Micrsoft Connect ticket</a>.

<a href="/aspnet/ContentPlaceHolderFix.zip">Download Code</a>
<a href="~/tests/contentplaceholder/">Run live test</a>
<h2 style="margin-top: 8em;">Alternative solutions and their issues</h2>
Here are some alternative solutions I've tried and read about. I wasn't really satisfied with any of them.
<ol class="normallist">
	<li>Create an <a href="http://www.edream.org/BlogArticle.aspx?RecordID=112">HtmlLink instance, assign the properties, and add it to Page.Header</a> from a code-behind file. Adding a code-behind file isn't something designers typically feel comfortable with, and it adds clutter.</li>
	<li>Use inline code to resolve the URL:
<strong>&lt;link type="text/css" rel="stylesheet" href='&lt;%= ResolveUrl("styles.css") %&gt;' /&gt;</strong>. <a href="http://aspnetresources.com/blog/code_blocks_inside_master_pages_cause_trouble.aspx">Check out this article about why code blocks inside master pages can cause problems.</a> I ran into the issue myself, and it's frustrating.</li>
	<li>Create a <a href="http://blog.btburnett.com/2008/04/linking-stylesheets-from-content-pages_02.html">custom control</a> for embedding stylesheets to replace the 'link' tag. This sounds the best of the alternatives, assuming you reference the control globally in Web.config. I haven't tried this one, though, so YMMV.</li>
</ol>
These alternatives all require markup changes, and will prevent WYSIWYG editors from reading the stylesheet references properly. I'm adverse to making things any more non-standard than they have to be. I like to implement a patch such that I can forget it exists.
<h2><script src="/scripts/syntaxhighlighter/shCore.js" type="text/javascript"></script>See Also</h2>
<a href="http://nathanaeljones.com/152/extending-page-adding-metadata-and-stylesheet-management/">A more comprehensive subclass</a> that allows runtime management of stylesheets and metadata.]]></content:encoded>
		<excerpt:encoded><![CDATA[The ability to reference style sheets and scripts from within content pages is greatly needed, but link and meta tags only work in the root master page. Here's how to add full link, meta, and script parsing to your entire application.]]></excerpt:encoded>
		<wp:post_id>146</wp:post_id>
		<wp:post_date>2008-08-08 19:59:34</wp:post_date>
		<wp:post_date_gmt>2008-08-08 23:59:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>referencing-stylesheets-scripts-from-content-pages</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="asp-net"><![CDATA[ASP.NET]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>url</wp:meta_key>
			<wp:meta_value><![CDATA[11011_Referencing_stylesheets_scripts_from_content_pages]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>articlebanner</wp:meta_key>
			<wp:meta_value><![CDATA[<a href="~/products/asp-net-image-resizer/" runat="server"><img src="~/ad2.jpg" runat="server" alt="Easy image resizing" /></a>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1326</wp:comment_id>
			<wp:comment_author><![CDATA[Richard Collette]]></wp:comment_author>
			<wp:comment_author_email>richard_collette@hsb.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>192.77.139.1</wp:comment_author_IP>
			<wp:comment_date>2010-07-21 05:19:49</wp:comment_date>
			<wp:comment_date_gmt>2010-07-21 09:19:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I&#039;m getting an invalid zip file message when I open ContentPlaceholderFix.zip   Any chance you could correct this? ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7090</wp:comment_id>
			<wp:comment_author><![CDATA[Tasen Software]]></wp:comment_author>
			<wp:comment_author_email>shanson@tasensoftware.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.tasensoftware.com</wp:comment_author_url>
			<wp:comment_author_IP>192.223.243.5</wp:comment_author_IP>
			<wp:comment_date>2010-02-08 16:43:25</wp:comment_date>
			<wp:comment_date_gmt>2010-02-08 21:43:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I can&#039;t handle any of these answers. It seems as though there should be an easy way to generate domain root relative URLs for linking to stylesheets in Master Pages. It should be an simple as including runat=&quot;server&quot; and linking to the stylesheet as if you were in the root of the domain. Why it does not work as expected is beyond me. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7091</wp:comment_id>
			<wp:comment_author><![CDATA[Nathanael Jones]]></wp:comment_author>
			<wp:comment_author_email>nathanael.jones@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>93.146.241.146</wp:comment_author_IP>
			<wp:comment_date>2011-10-11 09:31:20</wp:comment_date>
			<wp:comment_date_gmt>2011-10-11 13:31:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It doesn&#039;t work as expected because MS hacked the way master pages are implemented. They could fix it easily (in minutes), if it was a priority for them. The issue was reported in 2007, and is still listed as open and pending. Vote for it here: <a href="https://connect.microsoft.com/VisualStudio/feedback/details/273683/contentplaceholder-inside-the-head-element-special-head-parsing-logic-no-longer-applies" rel="nofollow">https://connect.microsoft.com/VisualStudio/feedba...</a> ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>7090</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7132</wp:comment_id>
			<wp:comment_author><![CDATA[Buy PHP Script]]></wp:comment_author>
			<wp:comment_author_email>KallstromLyday558@yahoomail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.cheapphpscript.com</wp:comment_author_url>
			<wp:comment_author_IP>58.26.69.3</wp:comment_author_IP>
			<wp:comment_date>2011-10-26 20:53:57</wp:comment_date>
			<wp:comment_date_gmt>2011-10-27 00:53:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I have read a few good stuff here. Definitely price bookmarking for revisiting. I wonder how so much attempt you place to make this type of magnificent informative website.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1319676837.7554";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:107:{s:15:"comment_post_ID";s:3:"146";s:14:"comment_author";s:14:"Buy PHP Script";s:20:"comment_author_email";s:31:"KallstromLyday558@yahoomail.com";s:18:"comment_author_url";s:29:"http://www.cheapphpscript.com";s:15:"comment_content";s:172:"I have read a few good stuff here. Definitely price bookmarking for revisiting. I wonder how so much attempt you place to make this type of magnificent informative website.";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:10:"58.26.69.3";s:10:"user_agent";s:89:"Mozilla/5.0 (Windows; U; Windows NT 5.1; bg; rv:1.8.1.14) Gecko/20080404 Firefox/2.0.0.14";s:8:"referrer";s:81:"http://nathanaeljones.com/146/referencing-stylesheets-scripts-from-content-pages/";s:4:"blog";s:25:"http://nathanaeljones.com";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:81:"http://nathanaeljones.com/146/referencing-stylesheets-scripts-from-content-pages/";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:14:"Buy PHP Script";s:10:"POST_email";s:31:"KallstromLyday558@yahoomail.com";s:8:"POST_url";s:29:"http://www.cheapphpscript.com";s:12:"POST_comment";s:172:"I have read a few good stuff here. Definitely price bookmarking for revisiting. I wonder how so much attempt you place to make this type of magnificent informative website.";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:3:"146";s:19:"POST_comment_parent";s:1:"0";s:26:"POST_akismet_comment_nonce";s:10:"4ca20729d4";s:15:"SERVER_SOFTWARE";s:17:"Microsoft-IIS/7.0";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:21:"PHP_FCGI_MAX_REQUESTS";s:5:"10000";s:5:"PHPRC";s:18:"C:Program FilesPHP";s:15:"ALLUSERSPROFILE";s:13:"C:ProgramData";s:7:"APPDATA";s:50:"C:Windowssystem32configsystemprofileAppDataRoaming";s:11:"APP_POOL_ID";s:13:"ndj-wordpress";s:18:"CommonProgramFiles";s:27:"C:Program FilesCommon Files";s:12:"COMPUTERNAME";s:6:"DED793";s:7:"ComSpec";s:24:"C:Windowssystem32cmd.exe";s:16:"FP_NO_HOST_CHECK";s:2:"NO";s:12:"LOCALAPPDATA";s:48:"C:Windowssystem32configsystemprofileAppDataLocal";s:20:"NUMBER_OF_PROCESSORS";s:1:"2";s:2:"OS";s:10:"Windows_NT";s:4:"Path";s:306:"C:Program FilesPHP;C:Windowssystem32;C:Windows;C:WindowsSystem32Wbem;C:Program FilesMySQLMySQL Server 5.0bin;C:WindowsSystem32WindowsPowerShellv1.0;c:Program FilesMicrosoft SQL Server100ToolsBinn;c:Program FilesMicrosoft SQL Server100DTSBinn;c:Program FilesMicrosoft SQL Server100ToolsBinnVSShellCommon7IDE";s:7:"PATHEXT";s:53:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC";s:22:"PROCESSOR_ARCHITECTURE";s:3:"x86";s:20:"PROCESSOR_IDENTIFIER";s:46:"x86 Family 15 Model 4 Stepping 1, GenuineIntel";s:15:"PROCESSOR_LEVEL";s:2:"15";s:18:"PROCESSOR_REVISION";s:4:"0401";s:11:"ProgramData";s:13:"C:ProgramData";s:12:"ProgramFiles";s:15:"C:Program Files";s:12:"PSModulePath";s:45:"C:Windowssystem32WindowsPowerShellv1.0Modules";s:6:"PUBLIC";s:13:"C:UsersPublic";s:11:"SystemDrive";s:2:"C:";s:10:"SystemRoot";s:9:"C:Windows";s:4:"TEMP";s:13:"C:WindowsTEMP";s:3:"TMP";s:13:"C:WindowsTEMP";s:10:"USERDOMAIN";s:15:"MAXIMUMASPLOCAL";s:8:"USERNAME";s:7:"DED793$";s:11:"USERPROFILE";s:36:"C:Windowssystem32configsystemprofile";s:6:"windir";s:9:"C:Windows";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:15:"HTTP_CONNECTION";s:10:"Keep-Alive";s:19:"HTTP_CONTENT_LENGTH";s:3:"374";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:9:"HTTP_HOST";s:18:"nathanaeljones.com";s:12:"HTTP_REFERER";s:81:"http://nathanaeljones.com/146/referencing-stylesheets-scripts-from-content-pages/";s:15:"HTTP_USER_AGENT";s:89:"Mozilla/5.0 (Windows; U; Windows NT 5.1; bg; rv:1.8.1.14) Gecko/20080404 Firefox/2.0.0.14";s:19:"HTTP_X_BLUECOAT_VIA";s:16:"57aecab71010f434";s:13:"DOCUMENT_ROOT";s:23:"C:Websitesndj-wordpress";s:15:"SCRIPT_FILENAME";s:43:"C:Websitesndj-wordpresswp-comments-post.php";s:20:"IIS_UrlRewriteModule";s:1:"1";s:12:"APPL_MD_PATH";s:16:"/LM/W3SVC/2/ROOT";s:18:"APPL_PHYSICAL_PATH";s:23:"C:Websitesndj-wordpress";s:9:"AUTH_TYPE";s:0:"";s:13:"AUTH_PASSWORD";s:0:"";s:9:"AUTH_USER";s:0:"";s:11:"CERT_COOKIE";s:0:"";s:10:"CERT_FLAGS";s:0:"";s:11:"CERT_ISSUER";s:0:"";s:17:"CERT_SERIALNUMBER";s:0:"";s:12:"CERT_SUBJECT";s:0:"";s:14:"CONTENT_LENGTH";s:3:"374";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:5:"HTTPS";s:3:"off";s:13:"HTTPS_KEYSIZE";s:0:"";s:19:"HTTPS_SECRETKEYSIZE";s:0:"";s:19:"HTTPS_SERVER_ISSUER";s:0:"";s:20:"HTTPS_SERVER_SUBJECT";s:0:"";s:11:"INSTANCE_ID";s:1:"2";s:18:"INSTANCE_META_PATH";s:11:"/LM/W3SVC/2";s:10:"LOCAL_ADDR";s:12:"66.29.219.39";s:10:"LOGON_USER";s:0:"";s:15:"PATH_TRANSLATED";s:43:"C:Websitesndj-wordpresswp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:11:"REMOTE_ADDR";s:10:"58.26.69.3";s:11:"REMOTE_HOST";s:10:"58.26.69.3";s:11:"REMOTE_PORT";s:5:"42458";s:11:"REMOTE_USER";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:11:"SERVER_NAME";s:18:"nathanaeljones.com";s:11:"SERVER_PORT";s:2:"80";s:18:"SERVER_PORT_SECURE";s:1:"0";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:3:"URL";s:21:"/wp-comments-post.php";s:14:"ORIG_PATH_INFO";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1319676835";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7147</wp:comment_id>
			<wp:comment_author><![CDATA[Francisco Rodriguez]]></wp:comment_author>
			<wp:comment_author_email>franciscoluisrv@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>190.25.37.55</wp:comment_author_IP>
			<wp:comment_date>2011-11-24 23:58:46</wp:comment_date>
			<wp:comment_date_gmt>2011-11-25 04:58:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Nathanael, I&#039;ve also found this nasty bug in ASP.Net, and I like how you solved it. But I couldn&#039;t download the ContentPlaceHolderFix.zip file, it looks like it&#039;s corrupt. Can you check it, please? I don&#039;t want to use inline code :)  
 
Thank you very much. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7159</wp:comment_id>
			<wp:comment_author><![CDATA[Brad]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>203.22.83.75</wp:comment_author_IP>
			<wp:comment_date>2010-04-07 09:44:46</wp:comment_date>
			<wp:comment_date_gmt>2010-04-07 14:44:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, the download code zip is invalid. Is there another location for the sample code? ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7161</wp:comment_id>
			<wp:comment_author><![CDATA[Nathanael Jones]]></wp:comment_author>
			<wp:comment_author_email>nathanael.jones@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>74.134.20.19</wp:comment_author_IP>
			<wp:comment_date>2012-01-10 17:12:29</wp:comment_date>
			<wp:comment_date_gmt>2012-01-10 22:12:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Sincere apologies for the delay. I lost those files during a disaster in 2009, and had to re-create them. 
I&#039;ve uploaded them as a project to <a href="https://github.com/nathanaeljones/WebFormsFixes" rel="nofollow">https://github.com/nathanaeljones/WebFormsFixes</a>    Let me know if you find any bugs; e-mail me at support@imageresizing.net, as I don&#039;t get comment notifications. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>7147</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Image Resizer - Web.config</title>
		<link>http://nathanaeljones.com/149/image-resizer-1-2-2-0-web-config/</link>
		<pubDate>Fri, 21 Nov 2008 22:44:56 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/?p=149</guid>
		<description></description>
		<content:encoded><![CDATA[The image resizer is implemented as an HttpModule. URL authorization is performed by .NET prior to any URL rewriting, and also by the image resizer afterwards. This ensures no holes in URL authorization are created.

For best performance,  *all* file serving work is done by IIS. The cached image is first written to disk, allowing a simple RewritePath call to pass the work to IIS. This eliminates all the threads that would otherwise be hanging around, using memory.

The same code can now be used for both IIS5, 6, 7 classic and 7 integrated. The httpModules section handles IIS5/6/7c, and the modules section handles IIS7 integrated mode.
<pre class="brush:xml">&lt;system.web&gt;
  ...
  &lt;httpModules&gt;
    &lt;add name="ImageResizer" type="fbs.ImageResizer.InterceptModule"/&gt;
  &lt;/httpModules&gt;
  ...
&lt;/system.web&gt;
&lt;system.webServer&gt;
  &lt;validation validateIntegratedModeConfiguration="false"/&gt;
  ...
  &lt;modules&gt;
    &lt;add name="ImageResizer" type="fbs.ImageResizer.InterceptModule"/&gt;
  &lt;/modules&gt;
&lt;/system.webServer&gt;</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[Adding web.config settings]]></excerpt:encoded>
		<wp:post_id>149</wp:post_id>
		<wp:post_date>2008-11-21 18:44:56</wp:post_date>
		<wp:post_date_gmt>2008-11-21 22:44:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>image-resizer-1-2-2-0-web-config</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="image-resizer"><![CDATA[image resizer]]></category>
		<category domain="post_tag" nicename="image-resizing"><![CDATA[Image Resizing]]></category>
		<category domain="category" nicename="image-resizing"><![CDATA[Image Resizing]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>url</wp:meta_key>
			<wp:meta_value><![CDATA[11161_Image_Resizer_1_2_2_0_Web_config]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Extending Page: Adding Metadata and Stylesheet management</title>
		<link>http://nathanaeljones.com/152/extending-page-adding-metadata-and-stylesheet-management/</link>
		<pubDate>Thu, 05 Feb 2009 14:01:01 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/?p=152</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Adding stylesheets or changing meta tags is just <em>slighly</em> clunky with the default Page class provided by ASP.NET. We're going to fix that.</p>

<p>Here's how to add metadata and stylesheet management by making a subclass which we'll call PageBase, since all markup pages will inherit from it.</p>

<h2>Features</h2>

<ul class="normallist">
<li>One-line method calls for  common operations like adding a stylsheet reference or changing metadata. </li>
<li>Duplicate stylsheet/meta tag prevention.</li>
<li>Only 2 instance members will be added to PageBase - .Stylesheets and .Metadata.<br />
Stylesheet (HtmlLink) and Metadata (HtmlMeta) management is encapsulated in separate classes to keep things clean, and reduce methods inside the page class.</li>
<li>Static PageBase.GetControlsOfType&lt;t>(Control parent) method simplifies all kinds of hierarchy querying.</li>
</ul>

<h2>StylesheetManager methods</h2>

<p>Complete documentation is in the XML comments in the code.</p>

<pre name="code" class="c-sharp">
Page.Stylesheets.AddLink("~/css/effects/css","stylesheet", "text/css");
Page.Stylesheets.AddLink("~/css/effects/css"); //Shorter syntax for typcial usage
Page.Stylesheets.AddLinkIfMissing("~/css/effects/css"); //So User Controls and multi-instance objects can safely include stylesheets without worrying about duplicates.
Page.Stylesheets.RemoveLinks("~/css/effects/css"); //Removes all links matching this path (ResolveUrl() is called on all paths prior to comparison)
Page.Stylesheets.GetControls() //returns all HtmlLink controls within the page header.
Page.Stylesheets.GetHrefs() //Returns a collection of all hrefs from the link tags on the page.
Page.Stylesheets.FindLinkControl(string href); //Case-insensitive, ResolveURL-cleaned search by href value.
</pre>

<h2>MetadataManager methods</h2>

<pre name="code" class="c-sharp">
Page.Metadata[&quot;description&quot;] = &quot;Why everybody ends up extending the Page class&quot;.
if (Page.Metadata[&quot;description&quot;] == &quot;Why everybody ends up extending the Page class&quot;){}

// Returns a collection of all HtmlMeta controls in the header
// Calls  PageBase.GetControlsOfType&lt;HtmlMeta&gt;(_page.Header);            
Page.Metadata.GetControls(); 
Page.Metadata.GetNameContentPairs(); //Returns a NameValueCollection of the metadata name/content pairs.
Page.Metadata.GetControl(&quot;description&quot;) // Returns the first HtmlMeta instance matching the specified name attribute
Page.Metadata.RemoveControls(List&lt;HtmlMeta&gt;) //Detaches each item in the collection from its parent
Page.Metadata.HideControls(List&lt;HtmlMeta&gt;) //Sets .Visible and .EnableViewState to &quot;false&quot; on all items.
Page.Metadata.GetMatches(query) //Returns all HtmlMeta instances with matching Name attributes. Query can be &quot;*&quot; or a comma-delimited list of values like &quot;description,keywords,test&quot;
Page.Metadata.GetNonMatches(quer) //Returns all non-matching HtmlMeta instances
</pre>

<h2>Usage</h2>

We can use this base class in any page my making a single change.
If the page has a code-behind file, just change 

<pre name="code" class="c-sharp">
public partial class _Default : System.Web.UI.Page

to

public partial class _Default : fbs.PageBase</pre>

If it is a standalone .aspx file, you can set <code>Inherits="fbs.PageBase"</code>.

<h2>Internals</h2>

<p>All of the querying operations performed only affect controls of a certain type. To greatly simplify the code for both StylesheetManager and MetdataManager, we have added GetControlsOfType&lt;t>(Control parent) to the PageBase class.</p>

<p>This method efficiently builds a collection of all controls in the specified hierarchy that are of type T.</p>


<pre name="code" class="c-sharp">
/// &lt;summary&gt;
/// Iterates over the control structure of the specified object and returns all elements that are
/// of the specified type
/// &lt;/summary&gt;
/// &lt;param name=&quot;parent&quot;&gt;&lt;/param&gt;
/// &lt;returns&gt;&lt;/returns&gt;
public static List&lt;T&gt; GetControlsOfType&lt;T&gt;(Control parent) where T : Control
{
	return GetControlsOfType&lt;T&gt;(parent, false,false);
}
/// &lt;summary&gt;
/// Iterates over the control structure of the specified object and returns all elements that are
/// of the specified type. If there are two items of the specified type, and one is a child of the other, 
/// the childrenOnly and parentOnly parameters can be used to control which is selected. If both are false, both controls are returned.
/// &lt;/summary&gt;
/// &lt;param name=&quot;parent&quot;&gt;The control to search&lt;/param&gt;
/// &lt;param name=&quot;childrenOnly&quot;&gt;If true, only the innermost matching children will be returned.&lt;/param&gt;
/// &lt;param name=&quot;parentsOnly&quot;&gt;If true, only the outermost matching parents will be returned.&lt;/param&gt;
/// &lt;returns&gt;&lt;/returns&gt;
public static List&lt;T&gt; GetControlsOfType&lt;T&gt;(Control parent, bool childrenOnly, bool parentsOnly) where T : Control
{
	if (parent == null) return null;
	if (childrenOnly &amp;&amp; parentsOnly) throw 
		new ArgumentException(&quot;Only one of childrenOnly and parentsOnly may be true. They are mutually exclusive&quot;);

	//We are doing last-minute initialization to minimize the overhead of building one of these.
	//The List&lt;&gt; constructor should only be called n times, where n is the number of ContentPlaceHolder controls.
	List&lt;T&gt; temp = null;

	if (parent.Controls != null)
	{
		//Loop through all of the child controls
		foreach (Control child in parent.Controls)
		{
			//Recursively search them also.
			List&lt;T&gt; next = GetControlsOfType&lt;T&gt;(child,childrenOnly,parentsOnly);

			//To save on initialization costs.
			if (next != null)
			{
				if (temp == null)
				{
					temp = next; //Use existing collection from recursive call
				}
				else
				{
					//Merge the collections

					//If a the same object is the child of two different parents, this will
					//stop it.
					foreach (T c in next)
					{
						if (!temp.Contains(c)) temp.Add(c);
					}

				}
			}
		}
	}

	//If this item is of the target type, add it 
	if ((parent is T))
	{
		//If there are no children or we are trying to discard children
		if (parentsOnly || temp == null)
		{
			//Clear the list and add the parent
			T item = (T)parent;

			temp = new List&lt;T&gt;();

			temp.Add(item);
		}
		else if (!childrenOnly)
		{
			//Append the parent with the children
			T item = (T)parent;

			if (temp == null) temp = new List&lt;T&gt;();

			temp.Add(item);
		}
	}

	return temp;
}
</pre>

<p>The remainder of the PageBase class</p>

<pre name="code" class="c-sharp">
/// <summary>
/// Extends System.Web.UI.Page
/// Adds metadata and stylehseet management
/// </summary>
public partial class PageBase : Page
{


/// &lt;summary&gt;
/// Creates a new PageBase instance. 
/// &lt;/summary&gt;
public PageBase()
{
}


protected MetadataManager _metadata = null;
/// &lt;summary&gt;
/// Manages page metadata. Add, remove, and query metadata 
/// (Only meta tags with a name attribute are affected, and only those located in the head section)
/// &lt;/summary&gt;
public MetadataManager Metadata { 
	get {
		if (_metadata == null) _metadata = new MetadataManager(this);
		return _metadata; 
	} 
}


protected LinkManager _Stylesheets = null;
/// &lt;summary&gt;
/// Manages all of the HtmlLink controls in the head section of the page.
/// Register, delete, and enumerate all link tags.
/// &lt;/summary&gt;
public LinkManager Stylesheets
{
	get
	{
		if (_Stylesheets == null) _Stylesheets = new LinkManager(this);
		return _Stylesheets;
	}
}
</pre>

<h2>LinkManager</h2>

<pre name="code" class="c-sharp">

using System;
using System.Data;
using System.Configuration;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using System.Collections.Generic;
using System.IO;
using System.Text;
using System.Diagnostics;
using System.Text.RegularExpressions;
using System.Collections.Specialized;

namespace fbs
{
    public partial class PageBase
    {
        /// &lt;summary&gt;
        /// Manages &amp;lt;link&gt; tags (controls) on the current page.
        /// &lt;/summary&gt;
        public class LinkManager
        {
            protected Page _page = null;
            /// &lt;summary&gt;
            /// Creates a new Link Manager attached to the specified Page instance
            /// &lt;/summary&gt;
            /// &lt;param name=&quot;parent&quot;&gt;&lt;/param&gt;
            public LinkManager(Page parent)
            {
                _page = parent;
            }
            /// &lt;summary&gt;
            /// Adds a CSS reference. Paths must be 1) relative to the page, 2) application-relative, or 3) absolute
            /// &lt;/summary&gt;
            /// &lt;param name=&quot;href&quot;&gt;&lt;/param&gt;
            public void AddLink(string href)
            {
                AddLink(href, &quot;stylesheet&quot;, &quot;text/css&quot;);
            }
            /// &lt;summary&gt;
            /// Adds a CSS stylsheet reference, but only if there isn't one yet for that path.
            /// Paths must be 1) relative to the page, 2) application-relative, or 3) absolute
            /// &lt;/summary&gt;
            /// &lt;param name=&quot;href&quot;&gt;&lt;/param&gt;
            /// &lt;param name=&quot;resolveFirst&quot;&gt;If true, compares resolved paths instead of raw paths&lt;/param&gt;
            public void AddLinkIfMissing(string href)
            {
                if (this.FindLinkControl(href) == null)
                {
                    AddLink(href);
                }
            }
            /// &lt;summary&gt;
            /// Adds a link tag with the specified rel and type attributes
            /// Paths must be 1) relative to the page, 2) application-relative, or 3) absolute
            /// &lt;/summary&gt;
            /// &lt;param name=&quot;href&quot;&gt;&lt;/param&gt;
            /// &lt;param name=&quot;rel&quot;&gt;&lt;/param&gt;
            /// &lt;param name=&quot;type&quot;&gt;&lt;/param&gt;
            public void AddLink(string href, string rel, string type)
            {
                HtmlLink l = new HtmlLink();

                l.EnableViewState = false;
                l.Href = href;
                l.Attributes[&quot;type&quot;] = type;
                l.Attributes[&quot;rel&quot;] = rel;
                l.AppRelativeTemplateSourceDirectory = _page.AppRelativeTemplateSourceDirectory;
                _page.Header.Controls.Add(l);
            }
            /// &lt;summary&gt;
            /// Removes all meta tags with a matching href.
            /// Paths must be 1) relative to the page, 2) application-relative, or 3) absolute
            /// &lt;/summary&gt;
            /// &lt;param name=&quot;href&quot;&gt;&lt;/param&gt;
            /// &lt;param name=&quot;resolveFirst&quot;&gt;If true, compares resolved paths instead of raw paths&lt;/param&gt;
            public void RemoveLinks(string href)
            {
                bool resolveFirst = false;
                List&lt;HtmlLink&gt; controls = GetControls();
                string searchfor = href;
                if (resolveFirst) searchfor = _page.ResolveUrl(searchfor);
                foreach (HtmlLink hl in controls)
                {
                    string thishref = hl.Href;

                    if (resolveFirst) thishref = _page.ResolveUrl(thishref);

                    if (thishref.Equals(searchfor, StringComparison.OrdinalIgnoreCase))
                    {
                        hl.Parent.Controls.Remove(hl);
                    }
                }

            }
            /// &lt;summary&gt;
            /// Returns a collection of all HtmlLink controls in the page header.
            /// &lt;/summary&gt;
            /// &lt;returns&gt;&lt;/returns&gt;
            public List&lt;HtmlLink&gt; GetControls()
            {
                return PageBase.GetControlsOfType&lt;HtmlLink&gt;(_page.Header);
            }
            /// &lt;summary&gt;
            /// Returns a collection of the hrefs in each link tag in the head section.
            /// Paths are 1) relative to the page, 2) application-relative, or 3) absolute
            /// &lt;/summary&gt;
            /// &lt;returns&gt;&lt;/returns&gt;
            public List&lt;string&gt; GetHrefs()
            {
                List&lt;HtmlLink&gt; list = GetControls();
                List&lt;string&gt; hrefs = new List&lt;string&gt;();
                foreach (HtmlLink l in list)
                {
                    hrefs.Add(l.Href);
                }
                return hrefs;
            }
            /// &lt;summary&gt;
            /// Case-insensitive. Returns the first HtmlLink control in the heirarchy that matches the href. Only scans inside the head tag.
            /// returns null if no match is found.
            /// 
            /// &lt;/summary&gt;
            /// &lt;param name=&quot;href&quot;&gt;Paths must be 1) relative to the page, 2) application-relative, or 3) absolute&lt;/param&gt;
            /// &lt;param name=&quot;resolveFirst&quot;&gt;If true, compares resolved paths instead of raw paths&lt;/param&gt;
            /// &lt;returns&gt;&lt;/returns&gt;
            public HtmlLink FindLinkControl(string href)
            {
                bool resolveFirst = false;
                List&lt;HtmlLink&gt; controls = GetControls();
                string searchfor = href;
                if (resolveFirst) searchfor = _page.ResolveUrl(searchfor);
                foreach (HtmlLink hl in controls)
                {
                    string thishref = hl.Href;

                    if (resolveFirst) thishref = _page.ResolveUrl(thishref);

                    if (thishref.Equals(searchfor, StringComparison.OrdinalIgnoreCase)) return hl;
                }
                return null;
            }


        }
    }
}
</pre>

<h2>MetadataManager</h2>

<pre class="c-sharp" name="code">

using System;
using System.Data;
using System.Configuration;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using System.Collections.Generic;
using System.IO;
using System.Text;
using System.Diagnostics;
using System.Text.RegularExpressions;
using System.Collections.Specialized;

namespace fbs
{
    public partial class PageBase
    {
        /// &lt;summary&gt;
        /// Manages &amp;lt;meta&gt; tags (controls) on the current page. Not designed for HTTP-EQUIV tags - they are ignored and skipped unless they have a name attribute.
        /// Only deals with meta tags within the Head of the page. The page must have a server-side head tag.
        /// &lt;/summary&gt;
        public class MetadataManager
        {
            protected Page _page = null;
            
            /// &lt;summary&gt;
            /// Creates a new MetadataManager and attaches it to the current page.
            /// &lt;/summary&gt;
            /// &lt;param name=&quot;parent&quot;&gt;&lt;/param&gt;
 
            public MetadataManager(Page parent)
            {
                _page = parent;
            }
            /// &lt;summary&gt;
            /// Gets or sets the Content attribute for the specified metadata tag.
            /// Returns null if pair does not exist.
            /// Creates a new metadata tag if it does not exist.
            /// &lt;/summary&gt;
            /// &lt;param name=&quot;name&quot;&gt;&lt;/param&gt;
            /// &lt;returns&gt;&lt;/returns&gt;
            public string this[string name]
            {

                get
                {
                    HtmlMeta m = FindMetaControl(name, _page.Header);
                    if (m == null) return null;
                    return m.Content;
                }
                set
                {
                    HtmlMeta m = FindMetaControl(name, _page.Header);
                    if (m != null)
                    {
                        m.Content = value;
                    }
                    else
                    {
                        HtmlMeta newm = new HtmlMeta();
                        newm.EnableViewState = false;
                        newm.Name = name;
                        newm.Content = value;
                        _page.Header.Controls.Add(newm);
                    }

                }

            }
            /// &lt;summary&gt;
            /// Returns a collection of all HtmlMeta controls in the header
            /// &lt;/summary&gt;
            /// &lt;returns&gt;&lt;/returns&gt;
            public List&lt;HtmlMeta&gt; GetControls()
            {
                return PageBase.GetControlsOfType&lt;HtmlMeta&gt;(_page.Header);
            }
            /// &lt;summary&gt;
            /// Returns a name:value collection of meta name:content pairs from the page.
            /// If there are multiple meta tags with the same name, the contents are comma-delimited (NameValueCollection.Add behavior)
            /// &lt;/summary&gt;
            /// &lt;returns&gt;&lt;/returns&gt;
            public NameValueCollection GetNameContentPairs()
            {
                List&lt;HtmlMeta&gt; list = PageBase.GetControlsOfType&lt;HtmlMeta&gt;(_page.Header);
                NameValueCollection pairs = new NameValueCollection();
                foreach (HtmlMeta m in list)
                {
                    pairs.Add(m.Name, m.Content);
                }
                return pairs;
            }
            /// &lt;summary&gt;
            /// Returns the first HtmlMeta control with the specified name
            /// &lt;/summary&gt;
            /// &lt;param name=&quot;name&quot;&gt;&lt;/param&gt;
            /// &lt;returns&gt;&lt;/returns&gt;
            public HtmlMeta GetControl(string name)
            {
                return FindMetaControl(name, this._page.Header);
            }
            /// &lt;summary&gt;
            /// Whether to include or exclude matches
            /// &lt;/summary&gt;
            public enum FilterType
            {
                ReturnMatches = 1,
                ReturnNonMatches = 2
            }
            /// &lt;summary&gt;
            /// Returns all meta tags that don't match 'pattern' 
            /// To exclude all, specify &quot;*&quot;. Otherwise, specify a list of exclusions: &quot;date,expires,description,flags&quot;.
            /// Not regex, but case-insensitive.
            /// &lt;/summary&gt;
            /// &lt;param name=&quot;pattern&quot;&gt;To exclude all, specify &quot;*&quot;. Otherwise, specify a list of exclusions: &quot;date,expires,description,flags&quot;.&lt;/param&gt;
            /// &lt;returns&gt;&lt;/returns&gt;
            public List&lt;HtmlMeta&gt; GetNonMatches(string pattern)
            {
                return GetMatches(pattern, FilterType.ReturnNonMatches);
            }
            /// &lt;summary&gt;
            /// Returns all meta tags with a name that matches 'pattern' 
            /// To match all, specify &quot;*&quot;. Otherwise, specify a list of possibilities: &quot;date,expires,description,flags&quot;.
            /// Not regex, but case-insensitive.
            /// &lt;/summary&gt;
            /// &lt;param name=&quot;pattern&quot;&gt;To match all, specify &quot;*&quot;. Otherwise, specify a list of possibilities: &quot;date,expires,description,flags&quot;.&lt;/param&gt;
            /// &lt;returns&gt;&lt;/returns&gt;
            public List&lt;HtmlMeta&gt; GetMatches(string pattern)
            {
                return GetMatches(pattern, FilterType.ReturnMatches);
            }

            /// &lt;summary&gt;
            /// Removes the specified HtmlMeta controls from their parents.
            /// &lt;/summary&gt;
            /// &lt;param name=&quot;list&quot;&gt;&lt;/param&gt;
            public void RemoveControls(List&lt;HtmlMeta&gt; list)
            {
                foreach (HtmlMeta m in list)
                {
                    if (m.Parent != null)
                    {
                        m.Parent.Controls.Remove(m);
                    }
                }
            }

            /// &lt;summary&gt;
            /// Hides the specified HtmlMeta controls from rendering
            /// &lt;/summary&gt;
            /// &lt;param name=&quot;list&quot;&gt;&lt;/param&gt;
            public void HideControls(List&lt;HtmlMeta&gt; list)
            {
                foreach (HtmlMeta m in list)
                {
                    m.Visible = false;
                    m.EnableViewState = false;
                }
            }
            /// &lt;summary&gt;
            /// Returns a collection of HtmlMeta tags that match 'pattern' (or don't match, depending on 'filter').
            /// Pattern is not a regex, but supports alternations and is case-insensitive. if Pattern=&quot;*&quot;, then everything matches.
            /// Pattern can be a single meta name, or a list of meta names (comma or | delimited).
            /// &lt;/summary&gt;
            /// &lt;param name=&quot;pattern&quot;&gt;To match all, specify &quot;*&quot;. Otherwise, specify a list of possibilities: &quot;date,expires,description,flags&quot;.&lt;/param&gt;
            /// &lt;param name=&quot;filter&quot;&gt;&lt;/param&gt;
            /// &lt;returns&gt;&lt;/returns&gt;
            public List&lt;HtmlMeta&gt; GetMatches(string pattern, FilterType filter)
            {

                //List of all meta controls in the head
                List&lt;HtmlMeta&gt; list = PageBase.GetControlsOfType&lt;HtmlMeta&gt;(_page.Header);

                //Parse pattern string
                bool wildcard = (pattern.Equals(&quot;*&quot;, StringComparison.OrdinalIgnoreCase));

                string[] parts = pattern.Replace(',', '|').Split('|');
                for (int i = 0; i &lt; parts.Length; i++)
                    parts[i] = parts[i].Trim().ToLowerInvariant();

                //Index valid names in a binary tree
                List&lt;string&gt; names = new List&lt;string&gt;(parts);
                names.Sort();

                //Create collections to hold matches and non-matches.
                List&lt;HtmlMeta&gt; matches = new List&lt;HtmlMeta&gt;();
                List&lt;HtmlMeta&gt; nonmatches = new List&lt;HtmlMeta&gt;();

                //Loop throught controls and distribute to the appropriate collection.
                foreach (HtmlMeta m in list)
                {
                    //Skip meta tags with an no name (probably HTTP-EQIV)
                    if (m.Name == null) continue;

                    if (wildcard)
                    {
                        matches.Add(m);
                    }
                    else if ((names.BinarySearch(m.Name.ToLowerInvariant()) &gt; 0))
                    {
                        matches.Add(m);
                    }
                    else
                    {
                        nonmatches.Add(m);
                    }
                }

                //Return the correct collection based upon the filter type
                if (filter == FilterType.ReturnMatches) return matches;
                else if (filter == FilterType.ReturnNonMatches) return nonmatches;
                else throw new ArgumentException(&quot;filter must be a valid enumeration value&quot;, &quot;filter&quot;);
            }
            /// &lt;summary&gt;
            /// Recursively searches the hierarchy of 'parent' for the first HtmlMeta instance with the specified Name attribute.
            /// Case-insensitive. 
            /// &lt;/summary&gt;
            /// &lt;param name=&quot;name&quot;&gt;Case-insensitive. &lt;/param&gt;
            /// &lt;param name=&quot;parent&quot;&gt;Control tree to search&lt;/param&gt;
            /// &lt;returns&gt;&lt;/returns&gt;
            protected static HtmlMeta FindMetaControl(string name, Control parent)
            {
                if (parent is HtmlMeta)
                {
                    HtmlMeta m = parent as HtmlMeta;
                    if (m.Name.Equals(name, StringComparison.OrdinalIgnoreCase)) return m;
                }
                foreach (Control c in parent.Controls)
                {
                    HtmlMeta m = FindMetaControl(name, c);
                    if (m != null) return m;
                }
                return null;
            }

        }
    }
}
</pre>

<h2>Integrating script support</h2>

<p>If you haven't already read <em><a href="~/11011" runat="server">Referencing stylesheets and scripts from content pages</a></em>, give it a glance. Download the attached code files and combine them with this one. The only file you'll have to merge is PageBase.cs. </p>
<p>Just add this code to the PageBase.cs included in the article, and make sure ContentPlaceHolderFixes.cs and the ScriptReference.cs files are included also.</p>

<pre class="c-sharp" name="code">
/// &lt;summary&gt;
/// Calls the ContentPlaceHolderHeadRepair.Repair method
/// &lt;/summary&gt;
/// &lt;param name=&quot;e&quot;&gt;&lt;/param&gt;
protected override void OnLoad(EventArgs e)
{
	//Parses link, meta, and script tags that got missed by the Head&gt;CPH bug.
	ContentPlaceHolderFixes.RepairPageHeader(this);

	//Fire the events later
	base.OnLoad(e);
}
</pre>

<p>This will allow you to use script tags from the head section and get proper ASP.NET URL resolution on them.<p>





<p>If you have any questions, please use the comments form below.</p>

<p>Happy coding!</p>

<!--Todo: use IEnumerable instead of List when possible-->

<p>
<a href='http://nathanaeljones.com/wp-content/uploads/2009/02/MetadataStylesheetManagement.zip'>Download files</a>
</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[Adding simple metadata and stylesheet management to the Page class.]]></excerpt:encoded>
		<wp:post_id>152</wp:post_id>
		<wp:post_date>2009-02-05 10:01:01</wp:post_date>
		<wp:post_date_gmt>2009-02-05 14:01:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>extending-page-adding-metadata-and-stylesheet-management</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asp-net"><![CDATA[ASP.NET]]></category>
		<category domain="category" nicename="asp-net"><![CDATA[ASP.NET]]></category>
		<category domain="post_tag" nicename="pageclass"><![CDATA[PageClass]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>url</wp:meta_key>
			<wp:meta_value><![CDATA[11101_Extending_Page_Adding_Metadata_and_Stylesheet_management]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>articlebanner</wp:meta_key>
			<wp:meta_value><![CDATA[<a href="~/products/asp-net-image-resizer/" runat="server"><img src="~/ad2.jpg" runat="server" alt="Easy image resizing" /></a>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>443</wp:comment_id>
			<wp:comment_author><![CDATA[Referencing stylesheets, scripts from content pages&nbsp;|&nbsp;Nathanael Jones]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://nathanaeljones.com/146/referencing-stylesheets-scripts-from-content-pages/</wp:comment_author_url>
			<wp:comment_author_IP>66.29.219.39</wp:comment_author_IP>
			<wp:comment_date>2010-01-04 08:05:32</wp:comment_date>
			<wp:comment_date_gmt>2010-01-04 13:05:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] A more comprehensive subclass that allows runtime management of stylesheets and metadata. [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>4650</wp:comment_id>
			<wp:comment_author><![CDATA[Daby Schuurmans]]></wp:comment_author>
			<wp:comment_author_email>DabyS@NWPacking.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>67.129.35.99</wp:comment_author_IP>
			<wp:comment_date>2010-09-30 09:13:40</wp:comment_date>
			<wp:comment_date_gmt>2010-09-30 13:13:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good Afternoon Sir: 
 
I was just reading this excellent article Extending page adding metadata and style sheet management. However, the last subject within this article mentions you will need to download ContentPlaceHolderFixes.cs and the ScriptReference.cs files via a hyperlink. However, when I tried downloading the ZIP file that contains the above two named classes; WINZIP gives me an error indicating that the file is not recognized as a valid archive file.  
 
Would you mind terribly if you could email me the zip file that contains the two classes contained in this article. 
 
Thanks 
Daby Schuurmans 
Sr. Software Architect ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7124</wp:comment_id>
			<wp:comment_author><![CDATA[Biarcaria]]></wp:comment_author>
			<wp:comment_author_email>z486opuroefforia@lugarus.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.dosca-ob.ru/</wp:comment_author_url>
			<wp:comment_author_IP>46.183.167.28</wp:comment_author_IP>
			<wp:comment_date>2011-10-23 15:15:25</wp:comment_date>
			<wp:comment_date_gmt>2011-10-23 19:15:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Хороший сайт http://www.dosca-ob.ru/ - частные объявления бесплатно, размести объявление бесплатно, <a href="http://www.dosca-ob.ru/" / rel="nofollow">дать бесплатное объявление в интернете</a>, доски объявлений москва и многое другое.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1319397326.069";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:107:{s:15:"comment_post_ID";s:3:"152";s:14:"comment_author";s:9:"Biarcaria";s:20:"comment_author_email";s:28:"z486opuroefforia@lugarus.com";s:18:"comment_author_url";s:23:"http://www.dosca-ob.ru/";s:15:"comment_content";s:348:"Хороший сайт http://www.dosca-ob.ru/ - частные объявления бесплатно, размести объявление бесплатно, <a href=http://www.dosca-ob.ru/>дать бесплатное объявление в интернете</a>, доски объявлений москва и многое другое.";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:13:"46.183.167.28";s:10:"user_agent";s:47:"Mozilla/4.0 (compatible; MSIE 5.0; Windows 3.1)";s:8:"referrer";s:87:"http://nathanaeljones.com/152/extending-page-adding-metadata-and-stylesheet-management/";s:4:"blog";s:25:"http://nathanaeljones.com";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:87:"http://nathanaeljones.com/152/extending-page-adding-metadata-and-stylesheet-management/";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:9:"Biarcaria";s:10:"POST_email";s:28:"z486opuroefforia@lugarus.com";s:8:"POST_url";s:23:"http://www.dosca-ob.ru/";s:12:"POST_comment";s:348:"Хороший сайт http://www.dosca-ob.ru/ - частные объявления бесплатно, размести объявление бесплатно, <a href=http://www.dosca-ob.ru/>дать бесплатное объявление в интернете</a>, доски объявлений москва и многое другое.";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:3:"152";s:19:"POST_comment_parent";s:1:"0";s:26:"POST_akismet_comment_nonce";s:10:"7175023958";s:15:"SERVER_SOFTWARE";s:17:"Microsoft-IIS/7.0";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:21:"PHP_FCGI_MAX_REQUESTS";s:5:"10000";s:5:"PHPRC";s:18:"C:Program FilesPHP";s:15:"ALLUSERSPROFILE";s:13:"C:ProgramData";s:7:"APPDATA";s:50:"C:Windowssystem32configsystemprofileAppDataRoaming";s:11:"APP_POOL_ID";s:13:"ndj-wordpress";s:18:"CommonProgramFiles";s:27:"C:Program FilesCommon Files";s:12:"COMPUTERNAME";s:6:"DED793";s:7:"ComSpec";s:24:"C:Windowssystem32cmd.exe";s:16:"FP_NO_HOST_CHECK";s:2:"NO";s:12:"LOCALAPPDATA";s:48:"C:Windowssystem32configsystemprofileAppDataLocal";s:20:"NUMBER_OF_PROCESSORS";s:1:"2";s:2:"OS";s:10:"Windows_NT";s:4:"Path";s:306:"C:Program FilesPHP;C:Windowssystem32;C:Windows;C:WindowsSystem32Wbem;C:Program FilesMySQLMySQL Server 5.0bin;C:WindowsSystem32WindowsPowerShellv1.0;c:Program FilesMicrosoft SQL Server100ToolsBinn;c:Program FilesMicrosoft SQL Server100DTSBinn;c:Program FilesMicrosoft SQL Server100ToolsBinnVSShellCommon7IDE";s:7:"PATHEXT";s:53:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC";s:22:"PROCESSOR_ARCHITECTURE";s:3:"x86";s:20:"PROCESSOR_IDENTIFIER";s:46:"x86 Family 15 Model 4 Stepping 1, GenuineIntel";s:15:"PROCESSOR_LEVEL";s:2:"15";s:18:"PROCESSOR_REVISION";s:4:"0401";s:11:"ProgramData";s:13:"C:ProgramData";s:12:"ProgramFiles";s:15:"C:Program Files";s:12:"PSModulePath";s:45:"C:Windowssystem32WindowsPowerShellv1.0Modules";s:6:"PUBLIC";s:13:"C:UsersPublic";s:11:"SystemDrive";s:2:"C:";s:10:"SystemRoot";s:9:"C:Windows";s:4:"TEMP";s:13:"C:WindowsTEMP";s:3:"TMP";s:13:"C:WindowsTEMP";s:10:"USERDOMAIN";s:15:"MAXIMUMASPLOCAL";s:8:"USERNAME";s:7:"DED793$";s:11:"USERPROFILE";s:36:"C:Windowssystem32configsystemprofile";s:6:"windir";s:9:"C:Windows";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:11:"HTTP_PRAGMA";s:8:"no-cache";s:19:"HTTP_CONTENT_LENGTH";s:4:"1104";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:3:"*/*";s:9:"HTTP_HOST";s:18:"nathanaeljones.com";s:12:"HTTP_REFERER";s:87:"http://nathanaeljones.com/152/extending-page-adding-metadata-and-stylesheet-management/";s:15:"HTTP_USER_AGENT";s:47:"Mozilla/4.0 (compatible; MSIE 5.0; Windows 3.1)";s:21:"HTTP_PROXY_CONNECTION";s:10:"Keep-Alive";s:13:"DOCUMENT_ROOT";s:23:"C:Websitesndj-wordpress";s:15:"SCRIPT_FILENAME";s:43:"C:Websitesndj-wordpresswp-comments-post.php";s:20:"IIS_UrlRewriteModule";s:1:"1";s:12:"APPL_MD_PATH";s:16:"/LM/W3SVC/2/ROOT";s:18:"APPL_PHYSICAL_PATH";s:23:"C:Websitesndj-wordpress";s:9:"AUTH_TYPE";s:0:"";s:13:"AUTH_PASSWORD";s:0:"";s:9:"AUTH_USER";s:0:"";s:11:"CERT_COOKIE";s:0:"";s:10:"CERT_FLAGS";s:0:"";s:11:"CERT_ISSUER";s:0:"";s:17:"CERT_SERIALNUMBER";s:0:"";s:12:"CERT_SUBJECT";s:0:"";s:14:"CONTENT_LENGTH";s:4:"1104";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:5:"HTTPS";s:3:"off";s:13:"HTTPS_KEYSIZE";s:0:"";s:19:"HTTPS_SECRETKEYSIZE";s:0:"";s:19:"HTTPS_SERVER_ISSUER";s:0:"";s:20:"HTTPS_SERVER_SUBJECT";s:0:"";s:11:"INSTANCE_ID";s:1:"2";s:18:"INSTANCE_META_PATH";s:11:"/LM/W3SVC/2";s:10:"LOCAL_ADDR";s:12:"66.29.219.39";s:10:"LOGON_USER";s:0:"";s:15:"PATH_TRANSLATED";s:43:"C:Websitesndj-wordpresswp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:11:"REMOTE_ADDR";s:13:"46.183.167.28";s:11:"REMOTE_HOST";s:13:"46.183.167.28";s:11:"REMOTE_PORT";s:4:"2114";s:11:"REMOTE_USER";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:11:"SERVER_NAME";s:18:"nathanaeljones.com";s:11:"SERVER_PORT";s:2:"80";s:18:"SERVER_PORT_SECURE";s:1:"0";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.0";s:3:"URL";s:21:"/wp-comments-post.php";s:14:"ORIG_PATH_INFO";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1319397325";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7160</wp:comment_id>
			<wp:comment_author><![CDATA[Nathanael Jones]]></wp:comment_author>
			<wp:comment_author_email>nathanael.jones@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>74.134.20.19</wp:comment_author_IP>
			<wp:comment_date>2012-01-10 17:11:41</wp:comment_date>
			<wp:comment_date_gmt>2012-01-10 22:11:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I lost those files during a disaster in 2009. I&#039;ve recreated them and uploaded them as a project to <a href="https://github.com/nathanaeljones/WebFormsFixes" rel="nofollow">https://github.com/nathanaeljones/WebFormsFixes</a>    Let me know if you find any bugs; e-mail me at support@imageresizing.net, as I don&#039;t get comment notifications. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>4650</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7164</wp:comment_id>
			<wp:comment_author><![CDATA[nasawerq]]></wp:comment_author>
			<wp:comment_author_email>qwdaweytl@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>173.168.249.27</wp:comment_author_IP>
			<wp:comment_date>2012-01-17 08:36:35</wp:comment_date>
			<wp:comment_date_gmt>2012-01-17 13:36:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<a href="http://www.asciifriends.com/syntaxixugar/viewtopic.php?pid=350856#p350856" rel="nofollow">sell online anti-stress massage oil affordable</a> Order Cheap Mega Hoodia Overnight,<a href="http://www.oozleideas.com/forums/viewtopic.php?f=15&amp;t=43805" rel="nofollow">where to buy megathin without prescription mexico</a> Get Cheap Mega Hoodia Non Prescription Free Shipping,<a href="http://ismforums.com/index.php/topic,840138.new.html#new" rel="nofollow">get online anexil fedex without prescription</a> Where to Buy Mega Hoodia Cheap Sales]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1326807395.6297";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:106:{s:15:"comment_post_ID";s:3:"152";s:14:"comment_author";s:8:"nasawerq";s:20:"comment_author_email";s:19:"qwdaweytl@gmail.com";s:18:"comment_author_url";s:0:"";s:15:"comment_content";s:492:"<a href=http://www.asciifriends.com/syntaxixugar/viewtopic.php?pid=350856#p350856>sell online anti-stress massage oil affordable</a> Order Cheap Mega Hoodia Overnight,<a href=http://www.oozleideas.com/forums/viewtopic.php?f=15&t=43805>where to buy megathin without prescription mexico</a> Get Cheap Mega Hoodia Non Prescription Free Shipping,<a href=http://ismforums.com/index.php/topic,840138.new.html#new>get online anexil fedex without prescription</a> Where to Buy Mega Hoodia Cheap Sales";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:14:"173.168.249.27";s:10:"user_agent";s:111:"Mozilla/4.0 (compatible; MSIE 7.0b; Windows NT 6.0 ; .NET CLR 2.0.50215; SL Commerce Client v1.0; Tablet PC 2.0";s:8:"referrer";s:87:"http://nathanaeljones.com/152/extending-page-adding-metadata-and-stylesheet-management/";s:4:"blog";s:25:"http://nathanaeljones.com";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:87:"http://nathanaeljones.com/152/extending-page-adding-metadata-and-stylesheet-management/";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:8:"nasawerq";s:10:"POST_email";s:19:"qwdaweytl@gmail.com";s:12:"POST_comment";s:492:"<a href=http://www.asciifriends.com/syntaxixugar/viewtopic.php?pid=350856#p350856>sell online anti-stress massage oil affordable</a> Order Cheap Mega Hoodia Overnight,<a href=http://www.oozleideas.com/forums/viewtopic.php?f=15&t=43805>where to buy megathin without prescription mexico</a> Get Cheap Mega Hoodia Non Prescription Free Shipping,<a href=http://ismforums.com/index.php/topic,840138.new.html#new>get online anexil fedex without prescription</a> Where to Buy Mega Hoodia Cheap Sales";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:3:"152";s:19:"POST_comment_parent";s:1:"0";s:26:"POST_akismet_comment_nonce";s:10:"ad0deb9a0d";s:15:"SERVER_SOFTWARE";s:17:"Microsoft-IIS/7.0";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:21:"PHP_FCGI_MAX_REQUESTS";s:5:"10000";s:5:"PHPRC";s:18:"C:Program FilesPHP";s:15:"ALLUSERSPROFILE";s:13:"C:ProgramData";s:7:"APPDATA";s:50:"C:Windowssystem32configsystemprofileAppDataRoaming";s:11:"APP_POOL_ID";s:13:"ndj-wordpress";s:18:"CommonProgramFiles";s:27:"C:Program FilesCommon Files";s:12:"COMPUTERNAME";s:6:"DED793";s:7:"ComSpec";s:24:"C:Windowssystem32cmd.exe";s:16:"FP_NO_HOST_CHECK";s:2:"NO";s:12:"LOCALAPPDATA";s:48:"C:Windowssystem32configsystemprofileAppDataLocal";s:20:"NUMBER_OF_PROCESSORS";s:1:"2";s:2:"OS";s:10:"Windows_NT";s:4:"Path";s:306:"C:Program FilesPHP;C:Windowssystem32;C:Windows;C:WindowsSystem32Wbem;C:Program FilesMySQLMySQL Server 5.0bin;C:WindowsSystem32WindowsPowerShellv1.0;c:Program FilesMicrosoft SQL Server100ToolsBinn;c:Program FilesMicrosoft SQL Server100DTSBinn;c:Program FilesMicrosoft SQL Server100ToolsBinnVSShellCommon7IDE";s:7:"PATHEXT";s:53:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC";s:22:"PROCESSOR_ARCHITECTURE";s:3:"x86";s:20:"PROCESSOR_IDENTIFIER";s:46:"x86 Family 15 Model 4 Stepping 1, GenuineIntel";s:15:"PROCESSOR_LEVEL";s:2:"15";s:18:"PROCESSOR_REVISION";s:4:"0401";s:11:"ProgramData";s:13:"C:ProgramData";s:12:"ProgramFiles";s:15:"C:Program Files";s:12:"PSModulePath";s:45:"C:Windowssystem32WindowsPowerShellv1.0Modules";s:6:"PUBLIC";s:13:"C:UsersPublic";s:11:"SystemDrive";s:2:"C:";s:10:"SystemRoot";s:9:"C:Windows";s:4:"TEMP";s:13:"C:WindowsTEMP";s:3:"TMP";s:13:"C:WindowsTEMP";s:10:"USERDOMAIN";s:15:"MAXIMUMASPLOCAL";s:8:"USERNAME";s:7:"DED793$";s:11:"USERPROFILE";s:36:"C:Windowssystem32configsystemprofile";s:6:"windir";s:9:"C:Windows";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:11:"HTTP_PRAGMA";s:8:"no-cache";s:19:"HTTP_CONTENT_LENGTH";s:3:"714";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:3:"*/*";s:9:"HTTP_HOST";s:18:"nathanaeljones.com";s:12:"HTTP_REFERER";s:87:"http://nathanaeljones.com/152/extending-page-adding-metadata-and-stylesheet-management/";s:15:"HTTP_USER_AGENT";s:111:"Mozilla/4.0 (compatible; MSIE 7.0b; Windows NT 6.0 ; .NET CLR 2.0.50215; SL Commerce Client v1.0; Tablet PC 2.0";s:21:"HTTP_PROXY_CONNECTION";s:10:"Keep-Alive";s:13:"DOCUMENT_ROOT";s:23:"C:Websitesndj-wordpress";s:15:"SCRIPT_FILENAME";s:43:"C:Websitesndj-wordpresswp-comments-post.php";s:20:"IIS_UrlRewriteModule";s:1:"1";s:12:"APPL_MD_PATH";s:16:"/LM/W3SVC/2/ROOT";s:18:"APPL_PHYSICAL_PATH";s:23:"C:Websitesndj-wordpress";s:9:"AUTH_TYPE";s:0:"";s:13:"AUTH_PASSWORD";s:0:"";s:9:"AUTH_USER";s:0:"";s:11:"CERT_COOKIE";s:0:"";s:10:"CERT_FLAGS";s:0:"";s:11:"CERT_ISSUER";s:0:"";s:17:"CERT_SERIALNUMBER";s:0:"";s:12:"CERT_SUBJECT";s:0:"";s:14:"CONTENT_LENGTH";s:3:"714";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:5:"HTTPS";s:3:"off";s:13:"HTTPS_KEYSIZE";s:0:"";s:19:"HTTPS_SECRETKEYSIZE";s:0:"";s:19:"HTTPS_SERVER_ISSUER";s:0:"";s:20:"HTTPS_SERVER_SUBJECT";s:0:"";s:11:"INSTANCE_ID";s:1:"2";s:18:"INSTANCE_META_PATH";s:11:"/LM/W3SVC/2";s:10:"LOCAL_ADDR";s:12:"66.29.219.39";s:10:"LOGON_USER";s:0:"";s:15:"PATH_TRANSLATED";s:43:"C:Websitesndj-wordpresswp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:11:"REMOTE_ADDR";s:14:"173.168.249.27";s:11:"REMOTE_HOST";s:14:"173.168.249.27";s:11:"REMOTE_PORT";s:4:"3929";s:11:"REMOTE_USER";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:11:"SERVER_NAME";s:18:"nathanaeljones.com";s:11:"SERVER_PORT";s:2:"80";s:18:"SERVER_PORT_SECURE";s:1:"0";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.0";s:3:"URL";s:21:"/wp-comments-post.php";s:14:"ORIG_PATH_INFO";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1326807394";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Performance killer: Disk I/O</title>
		<link>http://nathanaeljones.com/153/performance-killer-disk-io/</link>
		<pubDate>Mon, 16 Feb 2009 11:44:05 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/?p=153</guid>
		<description></description>
		<content:encoded><![CDATA[Many people think of "performance tuning" as optimizing loops, algorithms, and memory use. In truth, however, you don't get the huge performance gains from optimizing CPU and memory use (which is good), but from eliminating I/O calls.

Disk I/O is responsible for almost all slow websites and desktop applications. It's true. Watch your CPU use next time you open a program, or your server is under load. CPUs aren't the bottleneck anymore - your hard drive is. At the hardware level, the hard drive is the slowest component by an incredibly large factor. Today's memory ranges between <a href="http://en.wikipedia.org/wiki/DDR2_SDRAM"> 3200 and 10400 MB/s</a>. In contrast, today's desktop hard drive speeds average about 50 MB/s (Seagate 500GB), with high-end drives getting 85MB/s (WD 640, Seagate 1TB). If you're looking at bandwidth, hard drives are 200-300 times slower. Bandwidth, though, isn't the killer - it's the latency. Few modern hard drives have latencies under 13 milliseconds - while memory latency is usually about 5 <em>nanoseconds</em> - 2,000 times faster.

You're probably looking at these numbers and thinking, "13ms is quite fast enough for me, and my app is only dealing with small files". However, I have a question: what other applications are using that drive? If you're on a shared server, the odds are high that between 25 and 2500 ASP.NET apps are being run on the same drive.

CPU, bandwidth, and memory throttling is becoming more and more common on shared servers and virtualization systems, but practical disk throttling isn't even on the horizon from what I can tell. Improper I/O usage from <em>any</em> app affects <em>everybody</em>.

Since hard drives are slow, pending operations go into a queue. So even if your app only needs a single byte of data from the hard drive, it still has to wait its turn. It's quite common for disk operations to take several <em><strong>seconds</strong></em> on a shared server under heavy load. If any application on the server is paging to disk from exessive memory use, it can take several minutes, causing a timeout.

Realistic I/O performance is really hard to simulate in a development environment. On a dedicated development machine, disk queues are short, and response times are usually near the optimal 13ms, which tends to give software developers gravely incrorrect ideas about the performance characteristics of their application.
<h2>Load test!</h2>
A good way to acid test your code is to run it on a cheap, overloaded shared server. Webhost4life.com has $10/month plans that are excellent for this purpose. I'm actually using Webhost4life.com for this site, and while I/O calls consistently take around 1 second each, page views are decently quick since everything is in memory. I can't seem to get more than 30-40KB/s bandwidth though, so I'm probably going to switch hosts soon.

Stress testing can also be accomplished with load testing tools like the <a href="http://www.microsoft.com/downloads/details.aspx?familyid=e2c0585a-062a-439e-a67d-75a89aa36495&amp;displaylang=en">Web Application Stress Tool</a>. Getting realistic results often means multiplying user load by a factor of 1000 or more, since I/O speeds can vary by that much on a production server. So, if you want to handle 50 concurrent users gracefully, test with 50,000.

One good way to make sure your app can handle high load is to get your per-request time very low. There is an <a href="http://www.recommendedwebtools.com/index.php/594/test-your-website-loading-speed-with-lori-firefox-extension/">extension for Firefox</a> that provides TTFB (time-to-first-byte) information that will help you measure this. (Trace.axd is an invaluable tool here also). If requests complete in 13 milliseconds, the odds are good that you can handle 100 of those requests per second.
<h2>Cache smart</h2>
It's not too hard to cache files in memory. Here's one approach that uses ASP.NET's built in caching system:
<pre class="brush:c-sharp">namespace fbs.Filesystem
{
    /// &lt;summary&gt;
    /// Provides cached read access to small, frequently used files. Use carefully!
    //// Uses HostingEnvironment.Cache (same as app cache).
    /// &lt;/summary&gt;
    public static class CachedFileAccess
    {
        /// &lt;summary&gt;
        /// Retrieves the file from the cache, or from disk if neccessary. Exceptions from IO.File.ReadAllText are not caught.
        /// Make sure the file exists and can be accessed before attempting this function.
        /// &lt;/summary&gt;
        /// &lt;param name="file"&gt;Standard pathname (C:\..&lt;/param&gt;
        /// &lt;param name="encoding"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public static string ReadAllText(string file, Encoding encoding)
        {

            if (HostingEnvironment.Cache == null) throw new InvalidOperationException("HostingEnvironment.Cache is null");
            string key = "cached_file(" + encoding.EncodingName + ")_" + file.ToLowerInvariant().GetHashCode();

            string value = HostingEnvironment.Cache[key] as string;
            if (value == null)
            {
                value = System.IO.File.ReadAllText(file, encoding);
                HostingEnvironment.Cache.Add(key, value, new System.Web.Caching.CacheDependency(file),
                    System.Web.Caching.Cache.NoAbsoluteExpiration, System.Web.Caching.Cache.NoSlidingExpiration, System.Web.Caching.CacheItemPriority.Low,null);

            }
            return value;
        }
    }
}</pre>
If you must do I/O, File.Exists and File.GetLastWriteTimeUtc are much faster that actually opening a file. The filesystem 'tables' are <em>often</em> cached in memory, and therefore have much higher <em>average</em> performance.

Don't do memory leaks. In-memory caching is good, but if you have a memory leak the app's memory space will get moved to disk, effectively slowing all memory access down the hard disk speeds. Not good. And you're going to kill everyone else on the same disk. Make sure there is a finite and reasonable limit to what will be cached (especially if you're using static variables instead of the ASP.NET cache object).
<h3>Asynchronous=good, synchronous=evil.</h3>
In any application, asynchronous IO calls should be used whenever possible. There's a reason that I/O and web service calls in well-built applcations are async - it is impossible to predict how long I/O operations will take. Any  hard drive operation can take seconds to minutes - and there is no way to insure a responsive experience to users unless you make sure all I/O calls are out-of-band.

One nice thing about the web is that HTTP request are by nature  async - so if you have any I/O calls that *must* be made, you can  do them with AJAX later instead of holding up the entire page while they execute.
<h2>Databases are a Good Thing</h2>
Databases are Good. Build the right indexes, and queries will be quick. Most engines cache as much data as possible in memory (usually indexes get priority caching), so a well-designed database will almost alwasy beat standard I/O.
<h2>Hybrid approaches can get the best of both worlds</h2>
Being able to edit your files on disk is really nice - it tempts people away from database-driven websites all the time. But - you can have both ease-of-use and performance. nathanaeljones.com can be completely managed through an FTP connection and Notepad, if needed. It's nice to drag-and drop files when I need to upload a bunch. It's nice to use VS when I want to do some tricky coding.

Every few minutes, a ~1.5 second syncronization routine does a quick GetLastWriteTimeUTC check on the .aspx files that start with an ID, and pushes any changes to the database. The database is read only - basically a cache of the filesystem. But it allows instant, flexible querying/searching of all the articles, and provides the best of both worlds.

I don't edit files manually much anymore, although it does come in handy. Right now I'm using the web-based article editor to write this - most of my work occurs through my online ASP.NET markup editor. But for those who like the comfort of Dreamweaver or VS, they can edit their articles in WYSIWYWYG mode all day long :)

It can be difficult to write a filesystem to database synchronization system properly - there are a lot of wrong ways to go about it. Done properly, it can scale up to at least 50,000 articles. The routine must be located on a separate thread, and must use a ReaderWriterLock to prevent reads while database is build batch updated with SqlBulkCopy calls. A single call is used to get the listing of .aspx files: System.IO.Directory.GetFiles(appRoot, "*.aspx", System.IO.SearchOption.AllDirectories); A database call downloads the paths and last-modified dates from the database, and the two are cross-referenced to compile a list of created, moved, changed, and deleted files. These changes are then commited to the database using SqlBulkCopy, as well as being logged. Changed files are compared with the SQL copy to generate a Diff report for the log.
<h2>Filesystem state</h2>
Another factor in disk performance is the state of the filesystem. While filesystems are usually built using very smart algorithms, all algorithms slow down as they have to crunch more data. The more files you get on a disk, the slower file lookup and access becomes. I've compared identical 15k disks with no difference except the number of files, and the response time difference would <em>almost</em> make you suspect the one with 500,000 files to be a floppy drive.
<h2>In conclusion</h2>
Disk performance slightly increases each year and SSDs are promising, but physical disks never seem to catch up to our need for space and speed. I/O operations on shared or highly-active servers will probably be slow for many years to come.

Think carefully before you use System.IO, and make sure there aren't any alternatives. Pretend you're calling a web service each time you use the File class, and be kind to your users.

Say NO to IO]]></content:encoded>
		<excerpt:encoded><![CDATA[Many people think of "performance tuning" as optimizing loops, algorithms, and memory use. In truth, however, you don't get the huge performance gains from optimizing CPU and memory use (which is good), but from eliminating I/O calls.]]></excerpt:encoded>
		<wp:post_id>153</wp:post_id>
		<wp:post_date>2009-02-16 07:44:05</wp:post_date>
		<wp:post_date_gmt>2009-02-16 11:44:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>performance-killer-disk-io</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="asp-net"><![CDATA[ASP.NET]]></category>
		<category domain="post_tag" nicename="computerlinguist-com"><![CDATA[computerlinguist.com]]></category>
		<category domain="category" nicename="general-programming"><![CDATA[General Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>url</wp:meta_key>
			<wp:meta_value><![CDATA[11061_Performance_killer_Disk_I_O]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>articlebanner</wp:meta_key>
			<wp:meta_value><![CDATA[<a href="~/products/asp-net-image-resizer/" runat="server"><img src="~/ad2.jpg" runat="server" alt="Easy image resizing" /></a>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>459</wp:comment_id>
			<wp:comment_author><![CDATA[chris]]></wp:comment_author>
			<wp:comment_author_email>cvance@goiwx.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>173.11.37.193</wp:comment_author_IP>
			<wp:comment_date>2010-04-20 15:59:36</wp:comment_date>
			<wp:comment_date_gmt>2010-04-20 15:59:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[thank you Mr. Jones, very insightful ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>5435</wp:comment_id>
			<wp:comment_author><![CDATA[Art Clark]]></wp:comment_author>
			<wp:comment_author_email>artatartnettech.com@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://NA</wp:comment_author_url>
			<wp:comment_author_IP>174.91.75.17</wp:comment_author_IP>
			<wp:comment_date>2011-02-18 13:23:04</wp:comment_date>
			<wp:comment_date_gmt>2011-02-18 18:23:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yes, server-side IO caching can improve performance! 
 
However, client-side caching can improve perceived performance to users. This is a method I have used for a slow hosted site. The first request to site does a JavaScript lazy pre-cache of all website chrome, basic assets, and landing page assets for each section. 
 
Use CDN! Host static assets (images, SWF, JS, CSS, XML) on a different server! Keep in mind that there are limits and requirements for accessing the DOM on a page when the JS is on a different server. Similar requirements exist for SWF that needs access to web services. 
 
Use Meta! There are some metatags which suggest the next page to be preloaded by the browser. 
 
Load and cache DataSets that will be used frequently. Async load and cache DataSets which might be used in the next request so that when the next request comes, the data is available in the cache. 
 
Note: SQL Server can also cache DataSets for you as well. 
 
AJAX does not necessarily make a web application perform faster. However, the load on the server will be reduced thus increasing available resources for other requests. 
 
Server-load detection can be useful to toggle client-side (JavaScript) pre-caching of assets as server conditions change. 
 
User-state might suggest improving their specific experience. For example, if the user has an item in their shopping cart then optimize their browsing with background client-side caching of assets anticipated to be used in the next request. A user that is logged in should be provided with a faster user experience than an anonymous user. 
 
High server load? Use lazy-loading images on long pages. These images are loaded only when the image scrolls into view as the user browses the page. 
 
Separate presentation and common client-scripts from the server-generated (scripted) page. 
 
Using scripting libraries or presentation libraries? For example; jquery libraries, Yahoo! User Interface Library. Consider loading them directly from Yahoo or Google servers. (see CDN) 
 
Rebuild your DB indexes to improve scan and searching times. 
 
There is a finite amount of caching which can be accomplished at various levels of a web site application. 
1. DISK IO. When a web application loads, perform a HTTP load on all ASPX pages such that they are all in memory.(Shouldn&#039;t be necessary if all Page and UserControl classes are in a single library file (DLL). 
2. IIS Caching. Load all frequently accessed static assets to utilize IIS Caching. Enable the option when possible. 
3. .NET Caching. If possible, break pages into UserControls and add Caching by Query String to the controls where possible. Now you needn&#039;t cache the DataSet because the rendered HTML content is cached. (Caching Pages is not always practical.) 
4. SQL Caching. Cache DataSets. SQL Server may not be hosted on the same machine, or same drive as IIS assets. It might even be practical to serve images from the database via .NET page or module, in which case disc IO on a BUSY drive or BUSY server is not an issue. I use a custom control to serve either from CDN/DB/File depending on server load/current session count. 
 
5. Use CDN to spread the load across multiple servers. 
6. Client-side caching/pre-loading/lazy-loading using script and/or metatags. 
7. At one time, all AOL Internet users used the same gateway. It would have been very practical to allow your static assets to be cached at this gateway or other similar gateways of different Internet providers. Set a content header with an expiry time on images to utilize the caching ability of proxy servers and gateways. This option may not be very useful in recent years, but it may be utilized if you think it will be beneficial. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7027</wp:comment_id>
			<wp:comment_author><![CDATA[Stewart Scott]]></wp:comment_author>
			<wp:comment_author_email>stewart.scott@starz.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>66.151.166.5</wp:comment_author_IP>
			<wp:comment_date>2010-02-08 19:26:50</wp:comment_date>
			<wp:comment_date_gmt>2010-02-09 00:26:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[When your saying that database performance is better than disk IO do you assume that the database is local as opposed to over the network on a different server? Wouldn&#039;t you start to see that local disk IO might be faster considering memory disk cache as opposed to sql calls over the network? ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7028</wp:comment_id>
			<wp:comment_author><![CDATA[Nathanael Jones]]></wp:comment_author>
			<wp:comment_author_email>nathanael.jones@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>217.203.179.174</wp:comment_author_IP>
			<wp:comment_date>2011-08-26 11:38:08</wp:comment_date>
			<wp:comment_date_gmt>2011-08-26 15:38:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[In practice, Windows is extremely bad, no, horrible at filesystem caching. If the people who wrote MS Sql wrote NTFS instead, perhaps we&#039;d be in better shape. In fact, SQL over the network (to a dedicated SQL server) usually beats a locally-installed SQL Express instance. It&#039;s strange, but quite consistent. It could be due to Express version limitations, or perhaps it&#039;s due to increased filesystem contention. Either way, make sure that any filesystem-interaction code is either (a) mem-cached, or (b) occurs in a separate AJAX request that can span several seconds without bothering the user. Databases are architected to provide consistent and quick response times, filesystems are NOT. 
 ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>7027</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7033</wp:comment_id>
			<wp:comment_author><![CDATA[Sue Selmer]]></wp:comment_author>
			<wp:comment_author_email>CFukuda8@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://mycanadaonline.com</wp:comment_author_url>
			<wp:comment_author_IP>124.244.55.169</wp:comment_author_IP>
			<wp:comment_date>2011-08-28 10:05:44</wp:comment_date>
			<wp:comment_date_gmt>2011-08-28 14:05:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi all, We just wanted to commend you all for this blog. I found it on Bing and will be referring it to others. Keep up the good work. Thanks,]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1314540344.5349";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:105:{s:15:"comment_post_ID";s:3:"153";s:14:"comment_author";s:10:"Sue Selmer";s:20:"comment_author_email";s:18:"CFukuda8@gmail.com";s:18:"comment_author_url";s:25:"http://mycanadaonline.com";s:15:"comment_content";s:142:"Hi all, We just wanted to commend you all for this blog. I found it on Bing and will be referring it to others. Keep up the good work. Thanks,";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:14:"124.244.55.169";s:10:"user_agent";s:85:"Mozilla/5.0 (Windows; U; Windows NT 5.1; pl; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3";s:8:"referrer";s:25:"http://nathanaeljones.com";s:4:"blog";s:25:"http://nathanaeljones.com";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:57:"http://nathanaeljones.com/153/performance-killer-disk-io/";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"failed";s:11:"POST_author";s:10:"Sue Selmer";s:10:"POST_email";s:18:"CFukuda8@gmail.com";s:8:"POST_url";s:25:"http://mycanadaonline.com";s:12:"POST_comment";s:142:"Hi all, We just wanted to commend you all for this blog. I found it on Bing and will be referring it to others. Keep up the good work. Thanks,";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:3:"153";s:19:"POST_comment_parent";s:1:"0";s:15:"SERVER_SOFTWARE";s:17:"Microsoft-IIS/7.0";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:21:"PHP_FCGI_MAX_REQUESTS";s:5:"10000";s:5:"PHPRC";s:18:"C:Program FilesPHP";s:15:"ALLUSERSPROFILE";s:13:"C:ProgramData";s:7:"APPDATA";s:50:"C:Windowssystem32configsystemprofileAppDataRoaming";s:11:"APP_POOL_ID";s:13:"ndj-wordpress";s:18:"CommonProgramFiles";s:27:"C:Program FilesCommon Files";s:12:"COMPUTERNAME";s:6:"DED793";s:7:"ComSpec";s:24:"C:Windowssystem32cmd.exe";s:16:"FP_NO_HOST_CHECK";s:2:"NO";s:12:"LOCALAPPDATA";s:48:"C:Windowssystem32configsystemprofileAppDataLocal";s:20:"NUMBER_OF_PROCESSORS";s:1:"2";s:2:"OS";s:10:"Windows_NT";s:4:"Path";s:306:"C:Program FilesPHP;C:Windowssystem32;C:Windows;C:WindowsSystem32Wbem;C:Program FilesMySQLMySQL Server 5.0bin;C:WindowsSystem32WindowsPowerShellv1.0;c:Program FilesMicrosoft SQL Server100ToolsBinn;c:Program FilesMicrosoft SQL Server100DTSBinn;c:Program FilesMicrosoft SQL Server100ToolsBinnVSShellCommon7IDE";s:7:"PATHEXT";s:53:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC";s:22:"PROCESSOR_ARCHITECTURE";s:3:"x86";s:20:"PROCESSOR_IDENTIFIER";s:46:"x86 Family 15 Model 4 Stepping 1, GenuineIntel";s:15:"PROCESSOR_LEVEL";s:2:"15";s:18:"PROCESSOR_REVISION";s:4:"0401";s:11:"ProgramData";s:13:"C:ProgramData";s:12:"ProgramFiles";s:15:"C:Program Files";s:12:"PSModulePath";s:45:"C:Windowssystem32WindowsPowerShellv1.0Modules";s:6:"PUBLIC";s:13:"C:UsersPublic";s:11:"SystemDrive";s:2:"C:";s:10:"SystemRoot";s:9:"C:Windows";s:4:"TEMP";s:13:"C:WindowsTEMP";s:3:"TMP";s:13:"C:WindowsTEMP";s:10:"USERDOMAIN";s:15:"MAXIMUMASPLOCAL";s:8:"USERNAME";s:7:"DED793$";s:11:"USERPROFILE";s:36:"C:Windowssystem32configsystemprofile";s:6:"windir";s:9:"C:Windows";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:19:"HTTP_CONTENT_LENGTH";s:3:"364";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:20:"HTTP_ACCEPT_LANGUAGE";s:1:"*";s:9:"HTTP_HOST";s:18:"nathanaeljones.com";s:12:"HTTP_REFERER";s:25:"http://nathanaeljones.com";s:15:"HTTP_USER_AGENT";s:85:"Mozilla/5.0 (Windows; U; Windows NT 5.1; pl; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3";s:13:"DOCUMENT_ROOT";s:23:"C:Websitesndj-wordpress";s:15:"SCRIPT_FILENAME";s:43:"C:Websitesndj-wordpresswp-comments-post.php";s:20:"IIS_UrlRewriteModule";s:1:"1";s:12:"APPL_MD_PATH";s:16:"/LM/W3SVC/2/ROOT";s:18:"APPL_PHYSICAL_PATH";s:23:"C:Websitesndj-wordpress";s:9:"AUTH_TYPE";s:0:"";s:13:"AUTH_PASSWORD";s:0:"";s:9:"AUTH_USER";s:0:"";s:11:"CERT_COOKIE";s:0:"";s:10:"CERT_FLAGS";s:0:"";s:11:"CERT_ISSUER";s:0:"";s:17:"CERT_SERIALNUMBER";s:0:"";s:12:"CERT_SUBJECT";s:0:"";s:14:"CONTENT_LENGTH";s:3:"364";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:5:"HTTPS";s:3:"off";s:13:"HTTPS_KEYSIZE";s:0:"";s:19:"HTTPS_SECRETKEYSIZE";s:0:"";s:19:"HTTPS_SERVER_ISSUER";s:0:"";s:20:"HTTPS_SERVER_SUBJECT";s:0:"";s:11:"INSTANCE_ID";s:1:"2";s:18:"INSTANCE_META_PATH";s:11:"/LM/W3SVC/2";s:10:"LOCAL_ADDR";s:12:"66.29.219.39";s:10:"LOGON_USER";s:0:"";s:15:"PATH_TRANSLATED";s:43:"C:Websitesndj-wordpresswp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:11:"REMOTE_ADDR";s:14:"124.244.55.169";s:11:"REMOTE_HOST";s:14:"124.244.55.169";s:11:"REMOTE_PORT";s:4:"3322";s:11:"REMOTE_USER";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:11:"SERVER_NAME";s:18:"nathanaeljones.com";s:11:"SERVER_PORT";s:2:"80";s:18:"SERVER_PORT_SECURE";s:1:"0";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.0";s:3:"URL";s:21:"/wp-comments-post.php";s:14:"ORIG_PATH_INFO";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1314540343";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7145</wp:comment_id>
			<wp:comment_author><![CDATA[get firefox]]></wp:comment_author>
			<wp:comment_author_email>HolubGovern43@aol.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.getfirefox.pl</wp:comment_author_url>
			<wp:comment_author_IP>89.76.93.162</wp:comment_author_IP>
			<wp:comment_date>2011-11-14 21:37:48</wp:comment_date>
			<wp:comment_date_gmt>2011-11-15 02:37:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Woah this blog is excellent i love reading your posts. Keep up the great paintings! You recognize, lots of individuals are hunting round for this information, you can aid them greatly.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1321324668.278";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:105:{s:15:"comment_post_ID";s:3:"153";s:14:"comment_author";s:11:"get firefox";s:20:"comment_author_email";s:21:"HolubGovern43@aol.com";s:18:"comment_author_url";s:24:"http://www.getfirefox.pl";s:15:"comment_content";s:184:"Woah this blog is excellent i love reading your posts. Keep up the great paintings! You recognize, lots of individuals are hunting round for this information, you can aid them greatly.";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:12:"89.76.93.162";s:10:"user_agent";s:96:"Mozilla/5.0 (Macintosh; U; PPC Mac OS X; de-de) AppleWebKit/419 (KHTML, like Gecko) Safari/419.3";s:8:"referrer";s:57:"http://nathanaeljones.com/153/performance-killer-disk-io/";s:4:"blog";s:25:"http://nathanaeljones.com";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:57:"http://nathanaeljones.com/153/performance-killer-disk-io/";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:11:"get firefox";s:10:"POST_email";s:21:"HolubGovern43@aol.com";s:8:"POST_url";s:24:"http://www.getfirefox.pl";s:12:"POST_comment";s:184:"Woah this blog is excellent i love reading your posts. Keep up the great paintings! You recognize, lots of individuals are hunting round for this information, you can aid them greatly.";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:3:"153";s:19:"POST_comment_parent";s:1:"0";s:26:"POST_akismet_comment_nonce";s:10:"f52e750564";s:15:"SERVER_SOFTWARE";s:17:"Microsoft-IIS/7.0";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:21:"PHP_FCGI_MAX_REQUESTS";s:5:"10000";s:5:"PHPRC";s:18:"C:Program FilesPHP";s:15:"ALLUSERSPROFILE";s:13:"C:ProgramData";s:7:"APPDATA";s:50:"C:Windowssystem32configsystemprofileAppDataRoaming";s:11:"APP_POOL_ID";s:13:"ndj-wordpress";s:18:"CommonProgramFiles";s:27:"C:Program FilesCommon Files";s:12:"COMPUTERNAME";s:6:"DED793";s:7:"ComSpec";s:24:"C:Windowssystem32cmd.exe";s:16:"FP_NO_HOST_CHECK";s:2:"NO";s:12:"LOCALAPPDATA";s:48:"C:Windowssystem32configsystemprofileAppDataLocal";s:20:"NUMBER_OF_PROCESSORS";s:1:"2";s:2:"OS";s:10:"Windows_NT";s:4:"Path";s:306:"C:Program FilesPHP;C:Windowssystem32;C:Windows;C:WindowsSystem32Wbem;C:Program FilesMySQLMySQL Server 5.0bin;C:WindowsSystem32WindowsPowerShellv1.0;c:Program FilesMicrosoft SQL Server100ToolsBinn;c:Program FilesMicrosoft SQL Server100DTSBinn;c:Program FilesMicrosoft SQL Server100ToolsBinnVSShellCommon7IDE";s:7:"PATHEXT";s:53:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC";s:22:"PROCESSOR_ARCHITECTURE";s:3:"x86";s:20:"PROCESSOR_IDENTIFIER";s:46:"x86 Family 15 Model 4 Stepping 1, GenuineIntel";s:15:"PROCESSOR_LEVEL";s:2:"15";s:18:"PROCESSOR_REVISION";s:4:"0401";s:11:"ProgramData";s:13:"C:ProgramData";s:12:"ProgramFiles";s:15:"C:Program Files";s:12:"PSModulePath";s:45:"C:Windowssystem32WindowsPowerShellv1.0Modules";s:6:"PUBLIC";s:13:"C:UsersPublic";s:11:"SystemDrive";s:2:"C:";s:10:"SystemRoot";s:9:"C:Windows";s:4:"TEMP";s:13:"C:WindowsTEMP";s:3:"TMP";s:13:"C:WindowsTEMP";s:10:"USERDOMAIN";s:15:"MAXIMUMASPLOCAL";s:8:"USERNAME";s:7:"DED793$";s:11:"USERPROFILE";s:36:"C:Windowssystem32configsystemprofile";s:6:"windir";s:9:"C:Windows";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:19:"HTTP_CONTENT_LENGTH";s:3:"372";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:9:"HTTP_HOST";s:18:"nathanaeljones.com";s:12:"HTTP_REFERER";s:57:"http://nathanaeljones.com/153/performance-killer-disk-io/";s:15:"HTTP_USER_AGENT";s:96:"Mozilla/5.0 (Macintosh; U; PPC Mac OS X; de-de) AppleWebKit/419 (KHTML, like Gecko) Safari/419.3";s:13:"DOCUMENT_ROOT";s:23:"C:Websitesndj-wordpress";s:15:"SCRIPT_FILENAME";s:43:"C:Websitesndj-wordpresswp-comments-post.php";s:20:"IIS_UrlRewriteModule";s:1:"1";s:12:"APPL_MD_PATH";s:16:"/LM/W3SVC/2/ROOT";s:18:"APPL_PHYSICAL_PATH";s:23:"C:Websitesndj-wordpress";s:9:"AUTH_TYPE";s:0:"";s:13:"AUTH_PASSWORD";s:0:"";s:9:"AUTH_USER";s:0:"";s:11:"CERT_COOKIE";s:0:"";s:10:"CERT_FLAGS";s:0:"";s:11:"CERT_ISSUER";s:0:"";s:17:"CERT_SERIALNUMBER";s:0:"";s:12:"CERT_SUBJECT";s:0:"";s:14:"CONTENT_LENGTH";s:3:"372";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:5:"HTTPS";s:3:"off";s:13:"HTTPS_KEYSIZE";s:0:"";s:19:"HTTPS_SECRETKEYSIZE";s:0:"";s:19:"HTTPS_SERVER_ISSUER";s:0:"";s:20:"HTTPS_SERVER_SUBJECT";s:0:"";s:11:"INSTANCE_ID";s:1:"2";s:18:"INSTANCE_META_PATH";s:11:"/LM/W3SVC/2";s:10:"LOCAL_ADDR";s:12:"66.29.219.39";s:10:"LOGON_USER";s:0:"";s:15:"PATH_TRANSLATED";s:43:"C:Websitesndj-wordpresswp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:11:"REMOTE_ADDR";s:12:"89.76.93.162";s:11:"REMOTE_HOST";s:12:"89.76.93.162";s:11:"REMOTE_PORT";s:5:"63216";s:11:"REMOTE_USER";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:11:"SERVER_NAME";s:18:"nathanaeljones.com";s:11:"SERVER_PORT";s:2:"80";s:18:"SERVER_PORT_SECURE";s:1:"0";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:3:"URL";s:21:"/wp-comments-post.php";s:14:"ORIG_PATH_INFO";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1321324667";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Image Resizer v2 Examples</title>
		<link>http://nathanaeljones.com/155/image-resizer-v2-examples/</link>
		<pubDate>Fri, 08 May 2009 19:23:59 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/?p=155</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Here are some examples of what can be done with Version 2.0.</p>
    <p>Hover over the images to view the querystrings used. All commands can be combined.</p>
    
    <h2>Resizing using maxwidth and/or maxheight</h2>
    <p>Aspect ratio is always maintained with maxwidth and maxheight. The image is scaled to fit within those bounds.</p>
    <img src="red-leaf.jpg?maxwidth=300" title="With ?maxwidth=300"/>
    <img  src="grass.jpg?maxheight=300"  title="With ?maxheight=300"/>
    
    <img  src="tulip-leaf.jpg?maxwidth=300&amp;maxheight=300"  title="With ?maxwidth=300&amp;maxheight=300"/>
    <h2>Resizing using width and height</h2>
    <p>Specifying only one of <em>width</em> or <em>height</em> will behave the same as using <em>maxwidth</em>
    or <em>maxheight</em>. The difference is when you specify both.</p>
    <p>Specifying both width and height will force the image to those exact dimensions, unless the 
    image is already smaller (see scale). This is done by adding whitespace to the image. To center and crop instead, use
    <strong>&amp;crop=auto</strong>. To lose aspect ratio and fill the specified rectangle, use <strong>&amp;stretch=fill</strong>.</p>
    <img style="border:1px solid gray;" src="grass.jpg?width=200&height=200"  title="Shown with a border so you can see the added whitespace. ?width=200&height=200"/>
     <img src="grass.jpg?width=200&height=200&bgcolor=black"  title="With ?width=200&height=200&bgcolor=black"/>
    <img  src="red-leaf.jpg?width=100&height=200&stretch=fill" title="Distorted to 100x200. ?width=100&height=200&stretch=fill"/>
    <img src="red-leaf.jpg?width=100&height=200&crop=auto"   title="Cropped to 100x200. ?width=100&height=200&crop=auto"/>
    
    <h2>Scaling</h2>
    <p>By default, images are not upscaled. If an image is already smaller than width/height/maxwidth/maxheight, it is not resized.
    To upscale images, use <strong>?scale=both</strong>. <strong>?scale=downscaleonly</strong> is the default.</p>
    
    
    <img src="tractor-tiny.jpg?scale=both&width=200"  title="Upscaled from 100px to 200px using ?scale=both&width=200" />
    <br />
    The slight blur around the edges is a bug in Graphics.DrawImage(). You can control the color by setting <strong>&amp;bgcolor=color|hex</strong>.
    <h2>Cropping</h2>
    <p>To enable cropping, you can use <strong>&amp;crop=auto</strong>, which minimally crops and centers to preserve aspect ratio, or custom cropping.</p>
    <p><strong>&amp;crop=(x1,y1,x2,y2)</strong> specifies the rectangle to crop on the image. You can still resize and modify the cropped portion 
    using the other commands as normal. Negative coordinates are relative to the bottom-right corner - 
    which makes it easy to trim off a 50-pixel border by specifying <strong>&amp;crop=(50,50,-50,-50)</strong>.</p>
    
    <img id="Img5" src="tractor.jpg?crop=(10,150,200,350)"   title="Cropping out a 200x200 square using ?crop=(10,150,200,350)" />
    <img id="Img6" src="tractor.jpg?crop=(60,200,250,400)"    title="Cropping out a 200x200 square using ?crop=(60,200,250,400)"  />
    <img id="Img7" src="tractor.jpg?crop=auto&width=300&height=150"    title="Cropping out to 300x150 square using ?crop=auto&width=300&height=150"/>
    <h2>Rotation</h2>
    <p>Rotation is easy - just specify the number of degrees. You may want to set bgcolor also.</p>
    <img id="Img8" src="red-leaf.jpg?rotate=30&maxwidth=100"   title="With ?rotate=30&maxwidth=100"/>
    
    <img id="Img9" src="tractor.jpg?rotate=-30&crop=(60,200,250,400)"   title="Using ?rotate=-30&amp;crop=(60,200,250,400)" />
    
    <img id="Img10" src="grass.jpg?rotate=45&width=200&height=200&crop=auto&bgcolor=black"  title="With ?rotate=45&width=200&height=200&crop=auto&bgcolor=black"/>
      
    <h2>Flipping</h2>
    <p>You can horizontally or verically flip an image, as well as both. <strong>&amp;flip=h|v|both</strong></p>
    <img id="Img11" src="tractor.jpg?flip=v&crop=(60,200,250,400)"   title="Using ?flip=v&crop=(60,200,250,400)"  />
     <img id="Img12" src="tractor.jpg?flip=both&crop=(60,200,250,400)"   title="Using ?flip=both&crop=(60,200,250,400)"/><br />
    <img id="Img13" src="tractor.jpg?crop=(60,200,250,400)"   title="Using ?crop=(60,200,250,400)"  />
     <img id="Img14" src="tractor.jpg?flip=h&crop=(60,200,250,400)"   title="Using ?flip=h&crop=(60,200,250,400)" />
    <h2>Source flipping</h2>
    <p>Since normal flipping applies after rotation and cropping occur, it can be 
    difficult to work with if you are just wanting the source image flipped before the other
    adjustments are applied. To flip the source prior to work, use <strong>&amp;sourceFlip=h|v|both</strong>.</p>
    <p>Note how the same crop coordinates return different sections of the image. This is because the source image is flipped before *anything* happens.</p>
    <img id="Img20" src="tractor.jpg?maxwidth=100"   title="Using ?maxwidth=100" />
    <img id="Img15" src="tractor.jpg?crop=(0,0,100,100)"   title="Using ?crop=(0,0,100,100)"/>
    <img id="Img16" src="tractor.jpg?flip=both&crop=(0,0,100,100)"   title="Using ?flip=both&crop=(0,0,100,100)" />
    <h2>Stretching</h2>
    <p>To stretch an image to width and height, use <strong>&amp;stretch=fill</strong>. </p>
    <img id="Img17" src="tractor.jpg?stretch=fill&width=200&height=100"   title="Using ?stretch=fill&width=200&height=100)"  />
    <h2>Padding</h2>
    <p>You can add padding around the image with <strong>&amp;paddingWidth=px</strong> and 
    <strong>&amp;paddingColor=color|hex</strong>. paddingColor defaults to bgcolor, which defaults to white.
    This setting can be.... useful.</p>
    <img id="Img18" src="grass.jpg?maxwidth=200&paddingColor=black&paddingwidth=20"  title="With ?maxwidth=200&paddingColor=black&paddingwidth=20"/>
    <h2>Borders</h2>
    <p>You can add a border around the image with <strong>&amp;borderWidth=px</strong>, 
    <strong>&amp;borderColor=color|hex</strong>.</p>
    <img id="Img19" src="grass.jpg?maxwidth=200&paddingColor=white&paddingwidth=20&borderWidth=8&borderColor=808080" title="With ?maxwidth=200&borderWidth=8&borderColor=808080&paddingwidth=20"/>
    
    <h1>Output format</h1>
    <p>GIF, JPG, and PNG output is supported. BMP and TIFF input fils are additionally supported, and every format can be converted to any other format with <strong>&amp;format=jpg|png|gif</strong></p>
    <h2>Jpeg compression levels 0-100 (&amp;quality=0-100)</h2>
    <p>The sizes of these images range from 855B to 12KB. The largest size jump is from 90 to 100 (5KB to 12KB). I think 90 is a good balance, and is therefore the default.</p>
     <img id="Img31" src="tulip-leaf.jpg?quality=0&maxwidth=100"  />
    <img id="Img21" src="tulip-leaf.jpg?quality=10&maxwidth=100"  />
    <img id="Img22" src="tulip-leaf.jpg?quality=20&maxwidth=100"  />
    <img id="Img23" src="tulip-leaf.jpg?quality=30&maxwidth=100"  />
    <img id="Img24" src="tulip-leaf.jpg?quality=40&maxwidth=100"  />
    <img id="Img25" src="tulip-leaf.jpg?quality=50&maxwidth=100"  />
    <img id="Img26" src="tulip-leaf.jpg?quality=60&maxwidth=100"  />
    <img id="Img27" src="tulip-leaf.jpg?quality=70&maxwidth=100"  />
    <img id="Img28" src="tulip-leaf.jpg?quality=80&maxwidth=100"  />
    <img id="Img29" src="tulip-leaf.jpg?quality=90&maxwidth=100"  />
    <img id="Img30" src="tulip-leaf.jpg?quality=100&maxwidth=100"  />
    <h2>Quantization (8-bit PNG and GIFs)</h2>
    <p>The default GDI quantization is terrible, and produces lousy GIFs. Using the Octree quantizer, you can 
    control the number of colors (and therefore the size and quality) of an image using <strong>&amp;colors=2-255</strong></p>
    <h3>GIFs, in 4,8,16,32,64,128, and 256 colors</h3>
    <img id="Img32" src="tractor.jpg?&maxwidth=100&format=gif&colors=4"  />
    <img id="Img33" src="tractor.jpg?&maxwidth=100&format=gif&colors=8"  />
    <img id="Img34" src="tractor.jpg?&maxwidth=100&format=gif&colors=16"  />
    <img id="Img35" src="tractor.jpg?&maxwidth=100&format=gif&colors=32"  />
    <img id="Img36" src="tractor.jpg?&maxwidth=100&format=gif&colors=64"  />
    <img id="Img37" src="tractor.jpg?&maxwidth=100&format=gif&colors=128"  />
    <img id="Img38" src="tractor.jpg?&maxwidth=100&format=gif&colors=256"  />
    <h3>PNGs, in 4,8,16,32,64,128, 256, and 16 million colors</h3>
        <img id="Img39" src="tractor.jpg?&maxwidth=100&format=png&colors=4"  />
    <img id="Img40" src="tractor.jpg?&maxwidth=100&format=png&colors=8"  />
    <img id="Img41" src="tractor.jpg?&maxwidth=100&format=png&colors=16"  />
    <img id="Img42" src="tractor.jpg?&maxwidth=100&format=png&colors=32"  />
    <img id="Img43" src="tractor.jpg?&maxwidth=100&format=png&colors=64"  />
    <img id="Img44" src="tractor.jpg?&maxwidth=100&format=png&colors=128"  />
    <img id="Img45" src="tractor.jpg?&maxwidth=100&format=png&colors=256"  />
    <img id="Img46" src="tractor.jpg?&maxwidth=100&format=png"  />
    <h2>Transparent GIFs and PNGs</h2>
    <h3>Transparency is maintained when resizing PNGs</h3>
    <img id="Img49" src="/wp-content/uploads/2009/10/sun_256.png"  />
    <img id="Img47" src="/wp-content/uploads/2009/10/sun_256.png?maxwidth=100"  />
    <img id="Img48" style="background-color:black" src="/wp-content/uploads/2009/10/sun_256.png?&maxwidth=200"  />
    <h3>Matte backgrounds can be applied with bgcolor. </h3>
    <img id="Img50" src="/wp-content/uploads/2009/10/moon_256.png?maxwidth=100&bgcolor=red"  />
    <img id="Img51" src="/wp-content/uploads/2009/10/moon_256.png?maxwidth=100&bgcolor=blue"  />
    <img id="Img52" src="/wp-content/uploads/2009/10/moon_256.png?maxwidth=100&bgcolor=green"  />
    <h3>Transparent PNGs can be converted to transparent GIFs</h3>
    <p>It's ugly, but GIFs only get 1 bit for transparency.</p>
    <img id="Img1" src="/wp-content/uploads/2009/10/saturn_256.png?format=gif"  />
   <h2>Single frames can be extracted from animated GIFs with &amp;frame=x</h2>
    <img id="Img2" src="/wp-content/uploads/2009/11/2_computers.gif"  />
    <img id="Img3" src="/wp-content/uploads/2009/11/2_computers.gif?frame=5"  />
    <img id="Img4" src="/wp-content/uploads/2009/11/2_computers.gif?frame=8"  />
    <img id="Img53" src="/wp-content/uploads/2009/11/2_computers.gif?frame=10"  />
     
     
     
    <br />
    
    
    <h2>/resize(width,height,format)/ syntax</h2>
    <p>For the URL-conscious, you can replace <strong>img/image.jpg?maxwidth=x&amp;maxheight=y</strong> with
     <strong>img/resize(x,y)/image.jpg</strong>. A third argument, format, is also allowed.</p>
    
      ]]></content:encoded>
		<excerpt:encoded><![CDATA[Here are some examples of what can be done with Version 2.0. ]]></excerpt:encoded>
		<wp:post_id>155</wp:post_id>
		<wp:post_date>2009-05-08 15:23:59</wp:post_date>
		<wp:post_date_gmt>2009-05-08 19:23:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>image-resizer-v2-examples</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="image-resizing"><![CDATA[Image Resizing]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>url</wp:meta_key>
			<wp:meta_value><![CDATA[11201_Image_Resizer_v2_Examples]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>380</wp:comment_id>
			<wp:comment_author><![CDATA[Josh]]></wp:comment_author>
			<wp:comment_author_email>josh@selarom.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.selarom.net</wp:comment_author_url>
			<wp:comment_author_IP>64.88.202.3</wp:comment_author_IP>
			<wp:comment_date>2009-11-19 13:50:31</wp:comment_date>
			<wp:comment_date_gmt>2009-11-19 18:50:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Would you be able to add the ability to display a watermark on the image using the querystring? or better yet display the watermark only when the request does not come from within the site itself (prevent hotlinking)?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>384</wp:comment_id>
			<wp:comment_author><![CDATA[Nathanael Jones]]></wp:comment_author>
			<wp:comment_author_email>nathanael.jones@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>76.252.41.223</wp:comment_author_IP>
			<wp:comment_date>2009-11-20 09:34:47</wp:comment_date>
			<wp:comment_date_gmt>2009-11-20 14:34:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[WatermarkSettings.cs allows you to write your own watermarking code based on any parameters you want.

However, what you would need to do for 'hotlinked' requests is to do an HTTP redirect to add something to the querystring. 

Caching is URL-based, so you have to change the URL to get a watermarked version. 

I'm assuming you got the CRC error fixed using a different tool?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>380</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Image Resizer 2.0 - Upgrade notes</title>
		<link>http://nathanaeljones.com/159/image-resizer-2-0-upgrade-notes/</link>
		<pubDate>Sun, 17 May 2009 04:12:57 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/?p=159</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>Behavior changes</h2>
<ul class="normallist">
	<li>When both <strong>?width=x&amp;height=y</strong> are specified, the default behavior has changed. Instead of stretching the image and losing aspect ratio, whitespace is added (controlled with <strong>&amp;bgcolor=color name|code</strong>). You can reinstate the original behavor by adding <strong>&amp;stretch=fill</strong>. Based on customer feedback.</li>
	<li>ICC profiles are now read on source images, but changes are merged into the image before output. Since most browsers (including Firefox) do not read ICC profiles, this should produce consistent cross-browser behavior. If you want to ignore the original ICC profile for an image, add <strong>&amp;ignoreicc=true</strong>.</li>
	<li>The CustomFolders.cs format has changed, and is now much, much more powerful. All querystring commands can be used, and URL rewriting can be performed. (AllowURLRewriting must be true).</li>
</ul>
<h2>New features</h2>
Check out the <a href="~/11201">samples page</a> to see these features in action.
<ul class="normallist">
	<li>Automatic cropping and centering can be performed with <strong>?crop=auto&amp;width=x&amp;height=y</strong>. You can also choose a crop rectangle from the source image manually with <strong>&amp;crop=(x1,y1,x2,y2)</strong>. Negative values indicate distances relative to the bottom-right corner. (10,10,-10,-10) would crop a 10-pixel border off the source image.</li>
	<li>Support for 8-bit PNG file output with <strong>&amp;colors=2-255</strong>. Sets the palette size for both PNG and GIF images.</li>
	<li>GIF and 8-bit PNG files are now much, much better. Instead of using the GDI default palette, octree quantization is used to calculate the optimal color palette for each image.</li>
	<li>Upscaling can be enabled using &amp;scale=both. The default is &amp;scale=downscaleonly. &amp;scale=upscaleonly is also available for certain zooming situations.</li>
	<li> Image rotation is supported in degrees. Ex. &amp;rotate=45. Image sizing is performed before rotation, so rotation will cause the final image size to be larger than the size specified in the querystring.</li>
	<li>Image flipping can be performed using <strong>&amp;flip=h|v|both.</strong> To flip the source image before other commands occur, use <strong>&amp;sourceFlip=h|v|both</strong>.</li>
	<li>BMP and TIFF source files are now supported.</li>
	<li>You can add padding around the image with <strong>&amp;paddingWidth=px&amp;paddingColor=color|hex</strong>. paddingColor defaults to bgcolor, which defaults to white.</li>
	<li> You can add a border around the image with <strong>&amp;borderWidth=px&amp;borderColor=color|hex</strong>.</li>
	<li>Transparency is maintained while resizng PNG files, and when converting from PNG to GIF.</li>
	<li>DisableCacheCleanup=true|false is now supported in Web.config. If you have plenty of disk space and wish to manually purge old files from the cache, this setting will allow it. Leave the default value to false unless you have a very good reason.</li>
	<li> DiskCacheAlwaysInvalid=true|false is a new Web.config setting for debugging. It forces every request to update the disk cache before responding. Very, very slow, so make *sure* this is false before you launch.</li>
	<li>Websites located on UNC paths are now supported. (Ex. \\server\share\website).</li>
</ul>
<h2>Installation</h2>
<ol class="normallist">
	<li>Replace the old files with the new files from the ImageResizer folder. If you are using the .DLL, replace the DLL in the bin folder.  Keep a copy of your old CustomFolders.cs if you have modified it.</li>
	<li>Delete the /imagecache directory.</li>
	<li>If you use both width and height to stretch any images, add <strong>&amp;stretch=fill</strong> to those URLs to maintain the same behavior.</li>
	<li>Migrate CustomFolders.cs if you have modified it. The new file includes source comments explaining the process.</li>
</ol>
If you haven't upgraded to 1.2, follow <a href="~/11171"> these instructions first</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[Version 2.0 includes dozens of new features and performance enhancements. Upgrading is simple, but there are a few things you should know.]]></excerpt:encoded>
		<wp:post_id>159</wp:post_id>
		<wp:post_date>2009-05-17 00:12:57</wp:post_date>
		<wp:post_date_gmt>2009-05-17 04:12:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>image-resizer-2-0-upgrade-notes</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="image-resizer"><![CDATA[image resizer]]></category>
		<category domain="post_tag" nicename="image-resizing"><![CDATA[Image Resizing]]></category>
		<category domain="category" nicename="image-resizing"><![CDATA[Image Resizing]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>url</wp:meta_key>
			<wp:meta_value><![CDATA[11181_Image_Resizer_2_0_Upgrade_notes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>271</wp:comment_id>
			<wp:comment_author><![CDATA[Version 2.1b released!&nbsp;|&nbsp;Nathanael Jones]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://nathanaeljones.com/438/version-2-1b-released/</wp:comment_author_url>
			<wp:comment_author_IP>66.29.219.39</wp:comment_author_IP>
			<wp:comment_date>2009-11-13 18:36:11</wp:comment_date>
			<wp:comment_date_gmt>2009-11-13 23:36:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] If you are upgrading from 1.2, follow the 1.2-&gt;2.0 upgrade instructions first. [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>4936</wp:comment_id>
			<wp:comment_author><![CDATA[Version 2.6 released!&nbsp;|&nbsp;Nathanael Jones]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://nathanaeljones.com/489/version-2-6-released/</wp:comment_author_url>
			<wp:comment_author_IP>66.29.219.39</wp:comment_author_IP>
			<wp:comment_date>2010-11-11 16:27:56</wp:comment_date>
			<wp:comment_date_gmt>2010-11-11 21:27:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...]  [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Server-side Image Resizing Module for ASP.NET, ASP, &amp; PHP/IIS</title>
		<link>http://nathanaeljones.com/162/server-side-image-resizing-module-for-asp-net-asp-phpiis-3/</link>
		<pubDate>Sun, 17 May 2009 04:20:03 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/?p=162</guid>
		<description></description>
		<content:encoded><![CDATA[	

<p style="position: absolute; height: 5px; width: 5px; top: -3000px">
Open-source image resizing module for ASP.NET. Great for thumbnails and slideshows. Features managed disk caching, jpeg/png/gif support, and bicubic resizing. 
</p>


<script type="text/javascript">
	$(function() {
		$("#tabs").tabs();
	});
	</script>
<style type="text/css">
div.articleBody {
line-height:2.1em;
padding:15px 15px 15px 15px;
}
.smallcomments blockquote{
line-height:1em; font-size:8pt;
}
</style>


<div id="tabs">
	<ul>
		<li><a href="#why">Why</a></li>
		<li><a href="#opensource">Open Source</a></li>
		<li><a href="#features">Features</a></li>
		<li><a href="#quality">Quality</a></li>
		<li><a href="#performance">Performance</a></li>


<li><a href="#requirements">Requirements</a></li>


<li><a href="#changelog">Changelog</a></li>

	</ul>

<div id="why">
<h3>You need this module if you work with images.</h3> 
<p>Once installed, you can size, crop, and change the format of images from anywhere... HTML, ASP.NET, ASP, PHP, Flex, or Flash ... Just add the desired behavior to the URL with "?width=100" or "?format=jpg". It supports scaling, cropping, rotating, flipping, stretching, padding, borders, transparency, jpeg, png, and gif formats. Aspect ratio is <em>always</em> maintained unless &stretch=fill is specified. 
</p>

<p class="rightbox">The difference between the actual size and wanted size  of an uploaded image is inversely proportional to the quantiy of time available and the sluggishness of Photoshop.</p>


<p>Server-side image resizing is one of those little features that can have incredible ROI. It can save webmasters several hours each day, and gives you the ability to change the resolution of an image without having to hunt up the original. <%--However, many of the approaches currently on the web don't take security or performance into account.--%></p>


<p>I developed this image resizing system around two years ago. I needed something very intuitive, simple, secure, and efficient. We've been using this system heavily on a live, high-traffic site (<a href="http://youngfoundations.org">youngfoundations.org</a>) for two years, and we have had zero stability problems, memory leaks, or reliability issues with it. It's very mature and stable. Version 2.0 is even faster and more scalable than the previous versions, and includes dozens of new features.</p>

<p>Check out the <a href="~/11201" runat="server">samples page</a> to see what it can do. The <a href="~/11151" runat="server">license</a> is much like the GPL, and allows you to redistribute the source code as part of a larger project. You'll find the source code very clean, organized, and well commented. </p>


<div class="rightbox">
<a class="download" href="https://www.e-junkie.com/ecom/gb.php?i=254264&c=single&cl=41912">Download Source ($69)</a>
<p style="margin-bottom:0;padding-top:0;font-size:7.5pt; color:#909090;">Includes v2.0b - May 16, 2009</p>

<a href="~/11151" runat="server">License</a>
<a href="~/11201" runat="server">Samples</a>
<a href="~/11141" runat="server">Installation</a>
<p>If you have any questions after reading the documentation, leave a comment or e-mail <strong>nathanael.jones@gmail.com</strong>. </p>
</div>
<p>Although I typically release my components for free, I decided to charge a 'download fee' for this one to help support my other open-source projects. Don't worry, this component is still open-source, and the license permits source redistribution as part of a larger system. However, I'm asking that people who want to integrate this component purchase the download instead of ripping it out of another open-source project. My free to non-free LOC (lines of code) ratio is still over 40 to 1, and I plan on keeping it that way.  I trust this will keep everybody happy.</p>

<p>Your donations are the reason Version 2 exists.</p>

<h2>A few user comments...</h2>
<div class="smallcomments">
<blockquote>
<p>To anyone thinking of using this module, it worked great and saved me lots of custom-coding time for a client project. On top of that, Nathanael reworked some of the code to my needs for a very reasonable rate, so I have the custom solution I needed. </p>
<p>
If you're working on an image display project in asp.net, just use this code and enjoy. It's bullet proof!</p>
Jason<br/>
<a href="http://webmanufactory.blogspot.com/">http://webmanufactory.blogspot.com/</a>
</blockquote>


<blockquote>
<p>Nathanael, I downloaded your code this weekend to use in our portal code base. I was tired of writing code to pick between icon/medium/large/original sizes of the images for different pickers / viewers etc. I was skeptical as to whether the component would be fast enough for the performance we are after in our software, but I am glad to report that your code is super fast and does exactly what you say it does. It was easy to install, and works perfectly. Thank you so much for building this tool, it is going to come in handy!</p>

<p>I do have one question though, which is why the tool will not resize an image to be larger than the original source image. I have a few images that are 800X600 jpegs, and when I tried ?width=1024 the code returned the original image size of 800X600? Is this by design? How hard would it be to make the code upsize and image? <em>[v2 allows this with &amp;scale=both]</em></p>

<p>
Again, thank you for the tool, and to other skeptic developers, Nathan's code rocks out of the box. 
</p>
Thanks, <br/> 
Steve
</blockquote>

<blockquote>
By Dave<br />
just like to say, since using the code (and getting working and donating in next to no time) we have moved three or four of our sites over to using this technique. Previously we had manually run batch resizes initially and then made clients create multiple sizes of the image... very time consuming and some clients weren't technically up to the task. Having been after such a solution for so long, i was really worried that the time to generate images on the fly and the resultant quality would be a problem, but WOW..... this code nails it entirely...i can only say if you are reading these comments, worry not and get this code straight away.... so much work seems to have gone into this solution, i can't rate it too highly... my find of the year....... thanks Nathanael....
</blockquote>
</div>

</div>

<div id="buy">



</div>


<div id="features">

<p>Querystring-based resizing is super-simple and can be used from any language (HTML, ASP.NET, PHP, Flash, Flex, etc). </p>

<p>Supports scaling, cropping, rotating, flipping, stretching, padding, borders, transparency, and the 4 main image formats. Aspect ratio is maintained unless <strong>&amp;stretch=fill</strong> is specified.</p>

<p>For example, to make an image 400px or less wide, just add <strong>?width=400</strong>. If you want to set both the maximum height and width, use <strong>?maxwidth=400&amp;maxheight=400</strong>.</p>

<p>Sometimes you need all your images to be exactly the same size, regardless of the original aspect ratio. There are several solutions to this. If you specify both <strong>width</strong> and <strong>height</strong>, whitespace will be automatically added to two sides to make up the difference. Set whitespace color with <strong>&amp;bgcolor</strong>. If you don't want whitespace, you can try <strong>&amp;crop=auto</strong>. This "smart cropping" will figure out the minimal amount of cropping needed to center the image in the box without changing the aspect ratio or leaving whitespace. And, of course, you could stretch your images with <strong>&amp;stretch=fill</strong>... if you really wanted to.</p>

<p>Convert between jpg, png, gif, tiff, and bmp images with <strong>&amp;format=jpg|png|gif</strong>. Adjust the quality/size tradeoff of Jpegs with <strong>&amp;quality=1-100</strong>, and the palette size of GIFs and PNGs with <strong>&amp;colors=2-255</strong></p>

<p>Not just for thumbnails - useful for resizing entire slideshows in real-time as the user changes the window size.</p>

<p>Check out the <a href="~/11201" runat="server">samples page</a> to see the features in action.</p>

<ul class="normallist">
<li>Supported input formats: BMP, GIF, JPG, PNG and TIFF</li>
<li>Supported output formats: <strong>JPG, PNG, and GIF</strong></li>
</li>
</ul>


</div>
<div id="quality">
<p>Bicubic resampling is used exclusively, resulting in very high-quality output. Jpeg compression is excellent, and uses the native windows JPEG encoder. Version 2.0 adds octree quantization for GIF and 8-bit PNG output, providing excellent palette generation for those also.</p>

<p>In my tests, the native windows JPEG encoder and Photoshop have the same visual quality and file size results. Expect photoshop-quality results for both JPEG and PNG output. </p>
<p>GIF and 8-bit PNG output is drastically improved in version 2.0 due to the addition of octree quantization. The primary difference you will notice between Photoshop and module output is the lack of dithering. In most scenarios this doesn't affect visual quality much and actually makes the image look 'cleaner'. Very gentle gradients do benefit from dithering, as do gradients against transparency. </p>

<p>File sizes are excellent - don't expect a measurable improvement when you use Photoshop or ImageReady to compress your images with the same quality settings.</p>

</div>
<div id="performance">

<p>The key to the excellent performance of this module is the disk caching system. This allows even a relatively low-end server to handle the same number of dynamic requests as static file requests.</p>

<ul class="normallist">
<li>Caching doesn't get in your way - if you modify the source file, the resized versions are also updated.</li>
<li>You can resize the same image to several different sizes, and the different versions are cached separately.</li>
<li><strong>Managed disk cache</strong>. If the number of cached files exceeds the configured threshold, a cleanup pass is made on the directory, and a block of the least recently used files are removed.</li>
<li>Client-side caching directives are sent, minimizing repetitive requests from the same client.</li>
<li>Thumbnail generation in <strong>under 20 milliseconds</strong> for most images.</li>
<li>Suitable for slideshows and lists of images. Even the initial resizing of 50 images concurrently isn't noticeably slow.</li>
<li>Good with large source files (1-5MB)</li>

</ul>



</div>



<div id="requirements">
<ul class="normallist">
<li>Runs on any of the following following: Windows 2000,  Server 2000, XP, Server 2003, Vista, Server 2008, or Windows 7*. *Not tested, but I don't know of any breaking changes to IIS occuring.</li>
<li>Requires .NET 2.0 or higher to be installed on the server and enabled on the website.</li>
<li>The customer must have the ability to copy and paste configuration settings, download files, copy files, and follow simple directions for configuring IIS 6 and below.</li>
<li>Users of version 1.0 should get the free upgrade to 1.2 if they wish to use IIS7 Integrated Mode.</li>
</ul>
</div>

<div id="opensource" style="padding-left:25px">

<p>While I do charge a download fee, the license allows you to redistribute the source as part of another open-source project. I'm trying to achieve several objectives: 1) Remove the need for users to track licenses, 2) Promote use in open-source projects, 3) Still provide financial support so the project can continue to evolve rapidly.</p>

<ul class="normallist">
<li>Complete source code and an example project is included</li>
<li>Clean, well documented, well designed code. </li>
<li>Great platform to build your own image processing systems on. You can use the disk caching system or image processing code independently from each other.</li>
<li>Very extensible, easy to add new features.</li>
</ul>

<p>CustomFolders.cs can be *easily* modified to do all kinds of work:</p>
<ul class="normallist">
<li>Build rules to automatically resize images based on folder name or other criteria. </li>
<li>Add a new syntax for abbreviating or simplifying common resizing operations. Like /resize(w,h)/.</li>
<li>Easily perform URL rewriting for your images with String.Replace calls. (Regexes work too, if you like them).</li>
</ul>


<p>By purchasing the download, you are permitted to </p>

<ol>
<li>Modify and use the component in all of your projects. </li>
<li>Redistribute the source code as part of another project, provided the component 
is less than 5% of the project (in lines of code), and you keep this information attached.</li>
<li>If you received the source code as part of another open source project, 
you cannot extract it (by itself) for use in another project without purchasing a download 
from http://nathanaeljones.com/. If nathanaeljones.com is no longer running, and a download
cannot be purchased, then you may extract the code.</li>
</ol>

<p>This is basically a developer license - if you aren't a developer (i.e., a hosting company wanting a site or server license), please e-mail me (nathanael.jones@gmail.com).</p>

</div>

<div id="changelog">

<h2>Releases</h2>
<ol class="normallist">
<li>1.0 - August 6, 2008 (Initial release to the public.) </li>
<li>1.2 - Nov 23, 2008 (<a href="~/11171" runat="server">Upgrade Notes from 1.0 to 1.2</a>) (<a href="~/11131" runat="server">Original product page</a>) </li>
<li>2.0a Jan 30, 2009 (E-mail distribution)</li>
<li>2.0a Mar 4, 2009 (E-mail distribution)</li>
<li>2.0b May 16, 2009  (<a href="~/11181" runat="server">Upgrade notes from 1.2 to 2.0</a>)

</li>




</div>
</div>






]]></content:encoded>
		<excerpt:encoded><![CDATA[Version 2.0 beta is now available!]]></excerpt:encoded>
		<wp:post_id>162</wp:post_id>
		<wp:post_date>2009-05-17 00:20:03</wp:post_date>
		<wp:post_date_gmt>2009-05-17 04:20:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>server-side-image-resizing-module-for-asp-net-asp-phpiis-3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="image-resizer"><![CDATA[image resizer]]></category>
		<category domain="post_tag" nicename="image-resizing"><![CDATA[Image Resizing]]></category>
		<category domain="category" nicename="image-resizing"><![CDATA[Image Resizing]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>url</wp:meta_key>
			<wp:meta_value><![CDATA[11211_Server_side_Image_Resizing_Module_for_ASP_NET_ASP_PHP_IIS]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>articlebanner</wp:meta_key>
			<wp:meta_value><![CDATA[<div class="resizerDemo">
<img class="product-top-image" src="product-top.png" runat="server" alt="" />
<div class="imageSelection">

<div id="imageList"></div>
 <p class="chooseImage">Choose an image to work with.</p>
</div>

<div class="imageBackground">

<div class="interface">
<ul class="sizes">
 

</ul>
<p class="command"><a target="_tab" id="demo_openInNewTab">Modify the query string directly</a>.</p>
<p class="command"><a id="demo_download">Download resized image</a></p>
<p class="command"><a href="http://www.payloadz.com/go/sip?id=497545">Download Source Code ($69)</a></p>
</div>
  </div>
</div>

<script type="text/javascript">
//<!--

$(document).ready(function(){
   var basePath = '<%= ResolveUrl(Page.AppRelativeTemplateSourceDirectory) %>';
   var images = ['IMG_1228.jpg', 'IMG_5375.jpg','IMG_5443.jpg','IMG_8152.jpg','IMG_5393.jpg'];
   var query = '?maxwidth=100&maxheight=100';
   

for (var i = 0; i < images.length;i++){
  var img = $("<img />").attr('src',basePath + images[i] + query).
     attr('alt','click to manipulate').appendTo($('#imageList'));

window.currentImage = ""; window.currentQuery = "";
//handle image change
 img.click(function(){
   var currentImage = $(this).attr('src');

   $("#imageList img").removeClass('selected');
   $(this).addClass('selected');

   //Remove querystring
   window.currentImage = currentImage.substr(0,currentImage.indexOf('?'));
   updateImage();
 });

}
//handle query change
var queries = 
  ["?width=400","Medium size",
   "?maxwidth=100&maxheight=100","Typical thumbnail",
   "?format=png&maxwidth=200&maxheight=200","PNG version",
   "?width=200&height=100&stretch=fill","Distorted",
   "?format=gif&maxwidth=100","GIF version (ugly)"];

window.currentQuery = queries[0];

var queryList = $('.interface ul.sizes');
for (var i = 1; i < queries.length; i+=2){
   var q = queries[i-1];
   var name = queries[i];
   
   var item = $("<li/>").append(name).append($("<p/>").append(q)).attr('title',q);

   if (i == 1) item.addClass("selected");
   
   item.click(function(){
      $('ul.sizes li').removeClass("selected");
      $(this).addClass("selected");
      window.currentQuery = $(this).attr('title');
      updateImage();
   });
   item.appendTo(queryList);
}

//handle checkbox change

function updateImage(){
    $('.product-top-image').hide("slow");
    $('.imageBackground').css('background-image','none');
    $('.imageBackground').css('background-image','url(' + getImageUrl() + ')');
    $('.imageBackground').slideDown("slow");
    $('#demo_download').attr('href',getImageUrl() + '&download=true');
    $('#demo_openInNewTab').attr('href',getImageUrl());

}

function getImageUrl(){
  return window.currentImage + window.currentQuery;
}


});



//-->
</script>
<style type="text/css">
.resizerDemo{
background-color:black;
}
#imageList{text-align:center;}
#imageList img{
    margin:25px;
margin-bottom:10px;
margin-top:15px;
    border:3px solid #b0b0b0;
cursor:pointer;
}
#imageList img:hover{
    border:3px solid #c0c0c0;
}
#imageList img.selected{
    border:3px solid #ffffff;
}
p.chooseImage{
text-align:center;
color:white;
font-size:8pt; 
padding-bottom:10px;
paddint-top:10px;
}

.imageBackground {
padding:50px;
padding-right:100px;
padding-top:40px;
background-repeat:no-repeat;
background-position: right center;
display:none;
height:300px;
}
.interface{

}
.interface p.command{
 margin-top:1.3em;
}
ul.sizes li{
margin:10px;
margin-left:0px;
cursor:pointer;
color:#c0c0c0;
}
ul.sizes li:hover{
color:white;
}
ul.sizes li p{
margin-top:6px;
color:#909090;
}
ul.sizes li.selected{
color:white;
}
h1.title span.date{display:none;}

.rightbox{
width:215px;
float:right;

padding:15px;
padding-right:0px;
/*padding-left:18px;*/
margin-left:25px;
margin-bottom:25px;
margin-top:20px;
background: url(<%= ResolveUrl(Page.AppRelativeTemplateSourceDirectory) %>gradient.png) repeat-x top left;
text-align:right;
}
.rightbox a{
display:block;
padding-right:15px;
}
.rightbox p{

padding-right:15px;
margin-bottom:0px;
}
.rightbox a.download{
display:block;
padding:7px;
padding-right:15px;
background: url(<%= ResolveUrl(Page.AppRelativeTemplateSourceDirectory) %>download.png) no-repeat top left;
}
</style>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>blogbanner</wp:meta_key>
			<wp:meta_value><![CDATA[	

<a href="~/products/asp-net-image-resizer/" runat="server"><img src="ad2.jpg" runat="server" alt="Easy image resizing" /></a>]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>133</wp:comment_id>
			<wp:comment_author><![CDATA[Robert Gilman]]></wp:comment_author>
			<wp:comment_author_email>bh_enterprises@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://notyetinreleased</wp:comment_author_url>
			<wp:comment_author_IP>68.112.137.71</wp:comment_author_IP>
			<wp:comment_date>2009-11-02 20:40:47</wp:comment_date>
			<wp:comment_date_gmt>2009-11-03 01:40:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Nathanael, nice job on this component!  I just started testing with the trial version to see if your product solves the issues we're experiencing.  We're developing an asp.net site (real estate related) that provides users the ability to upload listing photos.  Our site makes extensive use of the updatepanel, the challenge we're facing is that after using a upload image form and returning to the listing page the image doesn't reflect the updated image (when a user uploads a different image), we have a refresh button on the listing page but setting the same img src string doesn't work.  If we add querystring versioning or filename versioning we don't have the problem, but that defects some of the benefits of your component.  Do you have any recommendations / best practices / words of wisdom...  I have a sample solution that demonstrates the issue if you're interested.
Thanks,
-bob]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>135</wp:comment_id>
			<wp:comment_author><![CDATA[Nathanael Jones]]></wp:comment_author>
			<wp:comment_author_email>nathanael.jones@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>216.205.223.34</wp:comment_author_IP>
			<wp:comment_date>2009-11-03 08:35:41</wp:comment_date>
			<wp:comment_date_gmt>2009-11-03 13:35:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Are you resizing via the querystring, or using the class interface? You'll have to change the URL in some way to get the browser to reload it... If you add &amp;refresh=10 it won't confuse the resizer - extra querystring data is ignored.

You should also probably set ImageResizerClientCacheMinutes to 0, so that the next time the page is loaded, the image will be requested again.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>133</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>5444</wp:comment_id>
			<wp:comment_author><![CDATA[Bilet Autokarowy]]></wp:comment_author>
			<wp:comment_author_email>web@bridgeport.edu</wp:comment_author_email>
			<wp:comment_author_url>http://wycieczki.host.sk/</wp:comment_author_url>
			<wp:comment_author_IP>108.62.163.207</wp:comment_author_IP>
			<wp:comment_date>2011-04-10 13:28:43</wp:comment_date>
			<wp:comment_date_gmt>2011-04-10 17:28:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[That is really fascinating. It offered me numerous tips and I&rsquo;ll be posting them on my net website soon. I&rsquo;m bookmarking your website and I&rsquo;ll be back again. Give thanks to you once again! ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1302470923.2468";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:104:{s:15:"comment_post_ID";s:3:"162";s:14:"comment_author";s:16:"Bilet Autokarowy";s:20:"comment_author_email";s:18:"web@bridgeport.edu";s:18:"comment_author_url";s:25:"http://wycieczki.host.sk/";s:15:"comment_content";s:194:"That is really fascinating. It offered me numerous tips and I’ll be posting them on my net website soon. I’m bookmarking your website and I’ll be back again. Give thanks to you once again!";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:14:"108.62.163.207";s:10:"user_agent";s:113:"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.14) Gecko/2009082707 Firefox/3.0.14 (.NET CLR 3.5.30729)";s:8:"referrer";s:0:"";s:4:"blog";s:25:"http://nathanaeljones.com";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:89:"http://nathanaeljones.com/162/server-side-image-resizing-module-for-asp-net-asp-phpiis-3/";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:16:"Bilet Autokarowy";s:10:"POST_email";s:18:"web@bridgeport.edu";s:8:"POST_url";s:25:"http://wycieczki.host.sk/";s:12:"POST_comment";s:194:"That is really fascinating. It offered me numerous tips and I’ll be posting them on my net website soon. I’m bookmarking your website and I’ll be back again. Give thanks to you once again!";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:3:"162";s:26:"POST_akismet_comment_nonce";s:10:"61c011a173";s:19:"POST_comment_parent";s:1:"0";s:15:"SERVER_SOFTWARE";s:17:"Microsoft-IIS/7.0";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:21:"PHP_FCGI_MAX_REQUESTS";s:5:"10000";s:5:"PHPRC";s:18:"C:Program FilesPHP";s:15:"ALLUSERSPROFILE";s:13:"C:ProgramData";s:7:"APPDATA";s:50:"C:Windowssystem32configsystemprofileAppDataRoaming";s:11:"APP_POOL_ID";s:13:"ndj-wordpress";s:18:"CommonProgramFiles";s:27:"C:Program FilesCommon Files";s:12:"COMPUTERNAME";s:6:"DED793";s:7:"ComSpec";s:24:"C:Windowssystem32cmd.exe";s:16:"FP_NO_HOST_CHECK";s:2:"NO";s:12:"LOCALAPPDATA";s:48:"C:Windowssystem32configsystemprofileAppDataLocal";s:20:"NUMBER_OF_PROCESSORS";s:1:"2";s:2:"OS";s:10:"Windows_NT";s:4:"Path";s:306:"C:Program FilesPHP;C:Windowssystem32;C:Windows;C:WindowsSystem32Wbem;C:Program FilesMySQLMySQL Server 5.0bin;C:WindowsSystem32WindowsPowerShellv1.0;c:Program FilesMicrosoft SQL Server100ToolsBinn;c:Program FilesMicrosoft SQL Server100DTSBinn;c:Program FilesMicrosoft SQL Server100ToolsBinnVSShellCommon7IDE";s:7:"PATHEXT";s:53:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC";s:22:"PROCESSOR_ARCHITECTURE";s:3:"x86";s:20:"PROCESSOR_IDENTIFIER";s:46:"x86 Family 15 Model 4 Stepping 1, GenuineIntel";s:15:"PROCESSOR_LEVEL";s:2:"15";s:18:"PROCESSOR_REVISION";s:4:"0401";s:11:"ProgramData";s:13:"C:ProgramData";s:12:"ProgramFiles";s:15:"C:Program Files";s:12:"PSModulePath";s:45:"C:Windowssystem32WindowsPowerShellv1.0Modules";s:6:"PUBLIC";s:13:"C:UsersPublic";s:11:"SystemDrive";s:2:"C:";s:10:"SystemRoot";s:9:"C:Windows";s:4:"TEMP";s:13:"C:WindowsTEMP";s:3:"TMP";s:13:"C:WindowsTEMP";s:10:"USERDOMAIN";s:15:"MAXIMUMASPLOCAL";s:8:"USERNAME";s:7:"DED793$";s:11:"USERPROFILE";s:36:"C:Windowssystem32configsystemprofile";s:6:"windir";s:9:"C:Windows";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:19:"HTTP_CONTENT_LENGTH";s:3:"483";s:17:"HTTP_CONTENT_TYPE";s:48:"application/x-www-form-urlencoded; charset=utf-8";s:11:"HTTP_ACCEPT";s:56:"image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, */*";s:9:"HTTP_HOST";s:18:"nathanaeljones.com";s:15:"HTTP_USER_AGENT";s:113:"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.0.14) Gecko/2009082707 Firefox/3.0.14 (.NET CLR 3.5.30729)";s:13:"DOCUMENT_ROOT";s:23:"C:Websitesndj-wordpress";s:15:"SCRIPT_FILENAME";s:43:"C:Websitesndj-wordpresswp-comments-post.php";s:20:"IIS_UrlRewriteModule";s:1:"1";s:12:"APPL_MD_PATH";s:16:"/LM/W3SVC/2/ROOT";s:18:"APPL_PHYSICAL_PATH";s:23:"C:Websitesndj-wordpress";s:9:"AUTH_TYPE";s:0:"";s:13:"AUTH_PASSWORD";s:0:"";s:9:"AUTH_USER";s:0:"";s:11:"CERT_COOKIE";s:0:"";s:10:"CERT_FLAGS";s:0:"";s:11:"CERT_ISSUER";s:0:"";s:17:"CERT_SERIALNUMBER";s:0:"";s:12:"CERT_SUBJECT";s:0:"";s:14:"CONTENT_LENGTH";s:3:"483";s:12:"CONTENT_TYPE";s:48:"application/x-www-form-urlencoded; charset=utf-8";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:5:"HTTPS";s:3:"off";s:13:"HTTPS_KEYSIZE";s:0:"";s:19:"HTTPS_SECRETKEYSIZE";s:0:"";s:19:"HTTPS_SERVER_ISSUER";s:0:"";s:20:"HTTPS_SERVER_SUBJECT";s:0:"";s:11:"INSTANCE_ID";s:1:"2";s:18:"INSTANCE_META_PATH";s:11:"/LM/W3SVC/2";s:10:"LOCAL_ADDR";s:12:"66.29.219.39";s:10:"LOGON_USER";s:0:"";s:15:"PATH_TRANSLATED";s:43:"C:Websitesndj-wordpresswp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:11:"REMOTE_ADDR";s:14:"108.62.163.207";s:11:"REMOTE_HOST";s:14:"108.62.163.207";s:11:"REMOTE_PORT";s:5:"40306";s:11:"REMOTE_USER";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:11:"SERVER_NAME";s:18:"nathanaeljones.com";s:11:"SERVER_PORT";s:2:"80";s:18:"SERVER_PORT_SECURE";s:1:"0";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.0";s:3:"URL";s:21:"/wp-comments-post.php";s:14:"ORIG_PATH_INFO";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1302470922";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1304976767.4802";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>20 Image Resizing Pitfalls</title>
		<link>http://nathanaeljones.com/163/20-image-resizing-pitfalls/</link>
		<pubDate>Tue, 19 May 2009 15:18:49 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/?p=163</guid>
		<description></description>
		<content:encoded><![CDATA[ <p>
        Dozens of articles on server-side image resizing have been written. If we count other tongues, maybe hundreds. These contributions to the community have been invaluable to me, and I truly appreciate the time each author spent to share his or her knowledge.</p>
    <p>
        So why am I writing another?  </p>
    <p>
        Because each article I have read includes one of the errors below, leading readers to write either slow, insecure, or incorrectly functioning code. I have discovered        many of these pitfalls the hard way. I hope others won't have to.  </p>
    <p>
        Instead of giving step-by-step instructions, this article will simply list  pitfalls and the alternatives. If you want to read the full source code of my  image resizing module, <a href="http://imageresizing.net/download">just download  it.</a> It&#39;s constantly maintained an updated, and has a large, active user base  (as of 2011).</p>
    This article was reorganized and updated on May 28, 2011. 7 new pifalls were  added (29 now), and most existing ones were updated.  <h2>
        Security and Stability Pitfalls</h2>
    <ol class="normallist">
        <li>Not using using(){}. You *must* wrap your Graphics, Bitmap, and MemoryStream objects in a using(){} clause, or else they will not get cleaned out of memory for a while. Under load this can cause *serious* issues. Read <a href="http://blogs.msdn.com/tess/archive/2009/02/03/net-memory-leak-to-dispose-or-not-to-dispose-that-s-the-1-gb-question.aspx">
                <em>to dispose, or not to dispose, that's the 1GB question</em></a> if you have any doubts regarding the severity of this error.  <p>
                If you find yourself nesting a lot of using(){} statements or needed logic about disposing items, you can also try{} finally{} (which is how using(){} is implemented).</p>
            <pre name="code" class="brush:c-sharp">
//Using method. object must implement IDisposable for this to work
using (object a = new object())
using (object b = new object())
using (object c = new object()){ //Code here
}
</pre>
        </li>
        <li>Using on-the-fly image resizing <em>without</em> disk caching! The ASP.NET memory cache won't cut it here folks - it gets cleaned out every application reboot, and besides, you probably have more images than RAM. Resizing an image is fast, but it will still flood the CPU if a single user browses a single page with 20 or more resized images on it. This is a do-it-yourself <a href="http://en.wikipedia.org/wiki/Denial-of-service_attack">
                DOS</a> attack. On-the-fly resizing is fine if you have disk caching. </li>
        <li>Serving a file from disk by loading it into memory. Think about how much RAM your server has, how large a single image is, how long it has to stay in memory before users finish downloading it, and how many users you have requesting images. Don't load anything into memory after the initial resize.  <p>
                <a href="http://msdn.microsoft.com/en-us/library/dyfzssz9.aspx">WriteFile()</a>
                serves directly from disk, and is *much* safer and more efficient. However - you shouldn't be using WriteFile() either if you can avoid it. Letting StaticFileHandler do its job is a much better choice.  </p>
        </li>
        <li>Accepting the file path as a querystring parameter. This mistake makes me cringe - I find it amazing each time how much people trust their filtering code to prevent abuse of this feature. (If they have path filtering code at all!) Just... don't... do it... please. Do you know how many ways there are to encode filenames and circumvent pattern-matching techniques? Yes, there are ways to protect this kind of system, but why?  <p>
                Why choose /resizeimage.ashx?path=~%2fimg%2fproducts%2fbox.jpg&amp;maxwidth=100&amp;maxheight=100 over /img/products/box.jpg?maxwidth=100&amp;maxheight=100 ?</p>
            <p>
                If you're stuck in IIS6 and you aren't allowed to modify handler mappings, you should look for a better host.</p>
        </li>
        <li>NEW: When using new Bitmap(Stream), new Image(Stream), Image.FromStream() or Bitmap.FromStream(), BE CAREFUL. The stream absolutely, *must* stay open for the life of the bitmap or image. <em>The Image and Bitmap classes do not keep a reference to the stream!</em>
            You must ensure that garbage collection doesn't close it. I suggest setting Image/Bitmap.Tag to the Stream instance, so you can track and dispose of them together.</li>
        <li>NEW: Opening a Bitmap or Image by filename will cause the file to be locked for the duration of the Bitmap instance. You can avoid the lock by using a FileStream, cloning it to a MemoryStream, disposing the FileStream, then using the .Tag property to track and dispose the MemoryStream later.</li>
        <li>NEW: Don't use Math.Round! GDI rounds floating-point values differently from .NET. Use Math.Floor() on the coordinates before giving them to DrawImage or the Bitmap constructor. Can cause OverflowExceptions</li>
        <li>NEW: Limit the maximum size of the resulting image if clients can change the values! Otherwise they could attempt to use lots of RAM on the server by asking for a 10,000x10,000 pixel Bitmap. Check both the width and the height *before* allocating the new bitmap instance, and throw an HttpException if it's out-of-bounds.</li>
    </ol>
    <h2>
        Performance Pitfalls</h2>
    <ol class="normallist">
        <li><em>Not</em> using on-the-fly resizing. This one bites also, as a usability issue. If you decide to convert all your images up-front, please realize how difficult it will be to track down the originals and resizing them again next time you make a resolution jump. I've been through this enough, and it's painful - that's why I wrote a <a href="http://imageresizing.net/">dynamic image resizer</a>! </li>
        <li>Writing directly to the output stream. If you're caching to disk, but still serving the image contents in code, you're only supporting a little bit of the HTTP standard, and you're bypassing all of the work <a id="A1" href="~/11081" runat="server">Thomas Marquardt did to bring StaticFileHandler up to snuff</a> . Implement your resizer as and HttpModule, not an HttpHandler or you're stuck.</li>
        <li>Making an HttpHandler instead of an HttpModule. I actually did this in v1.0, and it was a *mess*, as well as being non-optimal from a performance standpoint. There are several problems with doing this as an HttpHandler.  <ol class="normallist">
                <li>It's very difficult to make an HttpHandler catch only *some* requests (i.e., those requesting resizing), for a certain extension. It's very hard, in fact, and involves subclassing DefaultHttpHandler and re-implementing a lot of code. While that's possible on IIS5/6/7 classic, it doesn't work on IIS7 Integrated. So IIS7 integrated is a complete deal-breaker if you want to let standard images alone. </li>
                <li>It's difficult to pass a request from one HttpHandler to another. When building an image resizer, we don't want to be responsible for serving the resized file, just making sure the resized version has been cached to disk, and then rewriting the request to point to that file. An HttpModule, on the other hand, is perfectly suited to checking for image resize requests, caching the results, and rewriting the request so StaticFileHandler or whatever is the default in IIS 8 , 9, or 10 can take of it. I do this in PostAuthorizeRequest, by calling context.RewritePath(virtualPath, false);</li>
            </ol>
        </li>
        <li>It&#39;s obvious, but you should have caching enabled for your images, regardless of whether they are being resized or not. Disk caching is great, but memory caching allows for even faster responses to frequently requested images, and shouldn't be omitted. In addition, HttpCacheability.Public enables client and proxy caching too, so browsers and some firewalls will cache the result from the server. You can adjust the amount of time the files are cached with SetExpires.  <p>
                This is the code I use during PreSendRequestHeaders  </p>
            <pre name="code" class="brush:c-sharp">
HttpApplication app = sender as HttpApplication;
HttpContext context = (app != null) ? app.Context : null; 
if (context != null &amp;&amp; context.Items != null &amp;&amp; context.Items[&quot;FinalContentType&quot;] != null &amp;&amp; context.Items[&quot;LastModifiedDate&quot;] != null)
{ 
  //Clear previous output 
  //context.Response.Clear(); 
  context.Response.ContentType = context.Items[&quot;FinalContentType&quot;].ToString(); 
  //FinalContentType is set to image/jpeg or whatever the image mime-type is earlier in code. 
  //Add caching headers 
  int mins = c.get("clientcache.minutes", -1); //Or Configuration.AppSettings['whatever'] 
  //Set the expires value if present 
  if (mins > 0) e.ResponseHeaders.Expires = DateTime.UtcNow.AddMinutes(mins); 

  //Send the last-modified date if present 
  DateTime lastModified = (DateTime)context.Items[&quot;LastModifiedDate&quot;]; //Set earlier in code. 
  if (lastModified != DateTime.MinValue) e.ResponseHeaders.LastModified = lastModified; 

  //Authenticated requests only allow caching on the client.  
  //Anonymous requests get caching on the server, proxy and client 
  if (context.Request.IsAuthenticated) 
    e.ResponseHeaders.CacheControl = System.Web.HttpCacheability.Private; 
  else   
    e.ResponseHeaders.CacheControl = System.Web.HttpCacheability.Public;
}
</pre>
        </li>
    </ol>
    <h2>
        Pitfalls in Image Resizing</h2>
    <ol class="normallist">
        <li>Using GetThumbnailImage(). <a href="http://msdn.microsoft.com/en-us/library/system.drawing.image.getthumbnailimage.aspx">
            GetThumbnailImage</a>() seems the obvious choice, and many articles recommend its use.<br />
            Unfortunately, it always grabs the embedded jpeg thumbnail if present. Some photos have these, some don't - it usually depends on your camera. You'll wonder why GetThumbnailImage works good on some photo, but on others is horribly blurred. GetThumbnailImage() isn't reliable for photos larger than 10px by 10px for that reason.</li>
        <li>GDI often makes the outer pixel of the resized image a slightly different color. You can minimize this by using TileFilpModeXY in the ImageAttributes class when calling .DrawImage</li>
        <li>Forgetting to set InterpolationMode, SmoothingMode, CompositingQuality, and PixelOffsetMode. With all these set properly, you should be able to get resized images indistinguishable from Photoshop results. If you don't, you'll end up with trash. GDI has dumb defaults. (BTW, the low-quality settings aren't always much faster) <a href="http://www.glennjones.net/Post/799/Highqualitydynamicallyresizedimageswithnet.htm">
                This article</a> explains why those are needed to make DrawImage compose the image well.  <pre name="code" class="brush:c-sharp">
graphics.InterpolationMode = InterpolationMode.HighQualityBicubic;
graphics.SmoothingMode  = SmoothingMode.HighQuality;
graphics.CompositingQuality = CompositingQuality.HighQuality;
graphics.PixelOffsetMode = PixelOffsetMode.HighQuality;  </pre>
        </li>
        <li>Not maintaining aspect ratio. I see this often, and I'm not sure why - the math isn't too hard. Well, for those who are wondering how, I hope this code is rather transparent (no pun intended).  <pre name="code" class="brush:c-sharp">
double aspectRatio = imageWidth/imageHeight;
double boxRatio = maxWidth/maxHeight;
double scaleFactor = 0;

if (boxRatio &gt; aspectRatio) //Use height, since that is the most restrictive dimension of box. 
  scaleFactor = maxHeight / imageHeight;
else 
  scaleFactor = maxWidth / imageWidth; 

double newWidth = imageWidth * scaleFactor;
double newHeight = imageHeight * scaleFactor;
</pre>
        </li>
    </ol>
    <h2>
        Pitfalls in Image Encoding</h2>
    <ol class="normallist">
        <li>Not setting the Jpeg quality to 90. You'll get huge Jpegs from Image.Save unless you pass in the proper parameters. 90 seems to be the magic value - great quality and much lower file size than 100.  <pre name="code" class="brush:c-sharp">
int quality = 90; //90 is the magic setting - really. It has excellent quality and file size.
System.Drawing.Imaging.EncoderParameters encoderParameters = new System.Drawing.Imaging.EncoderParameters(1);
encoderParameters.Param[0] = new System.Drawing.Imaging.EncoderParameter(System.Drawing.Imaging.Encoder.Quality, (long)quality);
thumb.Save(stream, GetImageCodeInfo(&quot;image/jpeg&quot;), encoderParameters); 

/// &lt;summary&gt;
/// Returns the first ImageCodeInfo instance with the specified mime type. Some people try to get the ImageCodeInfo instance by index - sounds rather fragile to me.
/// &lt;/summary&gt;
/// &lt;param name=&quot;mimeType&quot;&gt;&lt;/param&gt;
/// &lt;returns&gt;&lt;/returns&gt;
public static ImageCodecInfo GetImageCodeInfo(string mimeType)
{ 
  ImageCodecInfo[] info = ImageCodecInfo.GetImageEncoders(); 
  foreach (ImageCodecInfo ici in info) 
     if (ici.MimeType.Equals(mimeType, StringComparison.OrdinalIgnoreCase)) 
        return ici; 
  return null;
}
</pre>
        </li>
        <li>Using the built-in quantization (palette creation) for GIFs, 8-bit PNGs and BMPs. The default palette is truly terrible, and while you can specify your own set of 255 colors - which ones should they be? The process of determining which colors to choose for the palette and to produce the best quality images is call quantization. I recommend the very efficient and decent-quality <a href="http://codebetter.com/blogs/brendan.tompkins/archive/2004/01/26/use-gdi-to-save-crystal-clear-gif-images-with-net.aspx">
                octree quantization algorithm</a>. It does have a number of bugs you will have to patch. Follow the transparency patch instructions found in the comments. Use the safe version of the library. Patch the Marshal.ReadInt32() bug (original is ReadByte()). Change any casts from IntPtr->int to IntPtr->long to make the code 64-bit safe.  <p>
              I  added adjustable Floyd-Steinberg dithering to  <a href="http://imageresizing.net/">the octree-quantization algorithm in my  open-source image resizing library</a>, and the results have been very promising so far.</p>
        </li>
        <li>Inheriting the palette from the original image. While at first this seems like an  <a href="http://getlara.com/north-america/canada/alberta/edmonton/post/2008/10/13/png-jpg-gif-image-resize-with-net-with-transparency">
                easy way to solve the palette problem</a> for GIFs, realize that the bicubic resizing will have combined colors, and the new thumbnail may not have any of colors of the original image. Also, any operations performed on the bitmap in 8-bit mode will be poor quality, and this won't allow conversion between image formats. There are other ways to keep transparency. This is probably better than leaving the default palette, but YMMV.</li>
        <li>Resizing images that don't request it. Your code should only activate when an image has a querystring with one of the supported commands. Pushing all images through your code is unnecessary. </li>
        <li>UPDATED: Not setting context.Response.ContentType properly. You'll get all kinds of interesting, varied, and peculiar results from browsers if you omit this step. Things can be really interesting if the format is changed during the resize, since the extension will match the original format. Send Content-type: "image/png" for png files, "image/jpeg" for jpegs, and "image/tiff" for tiff files. Pretty easy to remember. Avoid anything that cotains "x-", it's probably wrong.</li>
        <li>And one last piece of advice.<strong> Have Good Defaults. Always.</strong><br />
            <p>
                The output image type should default to the source image type, unless it's a BMP or TIFF. Default behavior should always preserve aspect ratio.  </p>
            <p>
                Many developers stop after making their code configurable. They don't take that extra 10 minutes to give everything smart defaults. Smart defaults distinguish good software from <em>great</em> software.</p>
        </li>
    </ol>
    <h2 id="diskcaching">
        Disk Caching pitfalls</h2>
    <ol class="normallist">
        <li>Disk-caching without checking for updated (or reverted!) source files. Debugging a resized image that won't update can eat up lots of time. Make sure you set the LastWriteTimeUTC on your cached images to match the source image file (and check they match) - don't simply check to see if the source file is newer than the cached file, since that will break if you copy an older file over a source image. Always use something like RoughCompare() to compare filesystem dates - *never* inequalities. Remember that filesystem dates are less precise than DateTime, and get rounded. Alternatively, you can hash the original modified date as part of the cached filename - this will create extra cached files each time a source file changes, but you'll save on I/O requests and have less trouble trying to update the source files on a live site.  <pre name="code" class="brush:c-sharp">
/// &lt;summary&gt;
/// Returns true if both dates are equal (to the nearest 200th of a second)
/// &lt;/summary&gt;
/// &lt;param name=&quot;modifiedOn&quot;&gt;&lt;/param&gt;
/// &lt;param name=&quot;dateTime&quot;&gt;&lt;/param&gt;
/// &lt;returns&gt;&lt;/returns&gt;
private static bool RoughCompare(DateTime d1, DateTime d2)
{ 
  return (new TimeSpan((long)Math.Abs(d1.Ticks - d2.Ticks)).TotalMilliseconds &lt;= 5);
}
</pre>
        </li>
        <li>Disk-caching without cleanup! Another do-it-yourself <a href="http://en.wikipedia.org/wiki/Denial-of-service_attack">
            DOS</a> attack, although not quite as bad as the first. Left unchecked, your cache directory could grow very large over a few years as orphaned image versions accumulate. If a malicious visitor realizes that you have automatic resizing, he could try to fill up your hard drive by requesting an endless variety of resolutions for a given image. Of course, security-conscious developers will have cache-limiting systems in place. I suggest cleaning out the least recently used 10-20% of the cache directory whenever the file limit is reached. Handle locked files gracefully.</li>
        <li>Checking the cache size for cleanup every image request. This will swamp your I/O. Instead of running that directory listing each time, keep a static counter that tracks how many <em>new</em> images have been resized since the application started. Run the cache cleanup on the first image request and each time the counter passes the cleanup threshold.</li>
        <li>Disk caching without protecting the cache directory. Unless you want anonymous users to potentially view the same images as authorized users, you need your cache directory locked down. A Web.config file in the directory can do this - just verify your URL rewriting rules don't leave another way to access the directory.  <p>
              The cache directory needs to stay inside the application to permit request rewriting to the cached files.  </p>
        </li>
        <li>Disk caching without proper locking code. This is a problem, and will cause  image requests to fail occasionally.&nbsp; 2 image requests for the same image size *will* happen at the same time, and (if they aren't cached), they may conflict when trying to write to the same file at the same time. You'll probably get a "The process cannot access the file because it is being used by another process." message if this happens. You can prevent this by creating a locking system so that only one thread can save a give resized image at a time. Optimally, you want multiple resizes for different images to occur at the same time. If you're not as concerned about concurrency performance as I was, you could cheat at make the whole resizing method locked. (For new image requests only!) </li>
        <li>NTFS doesn&#39;t work with over 8,000 files in a directory. Trust me. You can deal  with this by using some binary math and splitting the cache directory into 32  subfolders, based on the first 5 bits of the hash. Feel free to look a the  source code of the <a href="http://imageresizing.net/plugins">DiskCache</a>  plugin for an example.</li>
    </ol>
    <p>
        <a href="http://nathanaeljones.com/196/design-of-an-image-resizing-module/">Part  2 explains</a> the 2009 architecture of the ImageResizer version 2. It&#39;s a bit  outdated, but probably still helpful. </p>
    <p>
        You can download the <a href="http://imageresizing.net/">source code to Version  3 at http://imageresizing.net/</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[Dozens of articles on server-side image resizing have been written. If we count other tongues, maybe hundreds. These contributions to the community have been invaluable to me, and I truly appreciate the time each author spent to share his or her knowledge.]]></excerpt:encoded>
		<wp:post_id>163</wp:post_id>
		<wp:post_date>2009-05-19 11:18:49</wp:post_date>
		<wp:post_date_gmt>2009-05-19 15:18:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>20-image-resizing-pitfalls</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="image-resizer"><![CDATA[image resizer]]></category>
		<category domain="post_tag" nicename="image-resizing"><![CDATA[Image Resizing]]></category>
		<category domain="category" nicename="image-resizing"><![CDATA[Image Resizing]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>url</wp:meta_key>
			<wp:meta_value><![CDATA[11191_20_Image_Resizing_Pitfalls]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>216</wp:comment_id>
			<wp:comment_author><![CDATA[Aris]]></wp:comment_author>
			<wp:comment_author_email>arisvd@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>77.160.184.31</wp:comment_author_IP>
			<wp:comment_date>2009-11-11 07:25:54</wp:comment_date>
			<wp:comment_date_gmt>2009-11-11 12:25:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Excellent post! It combines all of the useful knowledge I had gathered so far.

About ImageCodecInfo: You can use this instead (from http://msdn.microsoft.com/en-us/library/bb882583.aspx):

private ImageCodecInfo GetEncoder(ImageFormat format)
{
    ImageCodecInfo[] codecs = ImageCodecInfo.GetImageEncoders();

    foreach (ImageCodecInfo codec in codecs)
    {
        if (codec.FormatID == format.Guid)
        {
            return codec;
        }
    }
    return null;
}]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>444</wp:comment_id>
			<wp:comment_author><![CDATA[Jon Sagara]]></wp:comment_author>
			<wp:comment_author_email>jonsagara@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.sagara.net</wp:comment_author_url>
			<wp:comment_author_IP>64.55.108.10</wp:comment_author_IP>
			<wp:comment_date>2010-01-15 00:13:58</wp:comment_date>
			<wp:comment_date_gmt>2010-01-15 00:13:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great article.  Wish this had been around 5 years ago.  Thanks for the great work! ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>457</wp:comment_id>
			<wp:comment_author><![CDATA[Brian]]></wp:comment_author>
			<wp:comment_author_email>nathanaeljones@brianlow.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.brianlow.com</wp:comment_author_url>
			<wp:comment_author_IP>209.47.83.60</wp:comment_author_IP>
			<wp:comment_date>2010-03-29 23:51:16</wp:comment_date>
			<wp:comment_date_gmt>2010-03-29 23:51:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Syntactic sugar for nested using statments: 
 
using (var stream = new MemoryStream(mybytes)) 
using (var bitmap = new Bitmap(stream)) 
using (var graphics = Graphics.FromImage(bitmap)) 
{ 
  // do your work here 
} 
 
Great article. Thanks! ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1192</wp:comment_id>
			<wp:comment_author><![CDATA[Oskar Austegard]]></wp:comment_author>
			<wp:comment_author_email>austegard@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://mo.notono.us</wp:comment_author_url>
			<wp:comment_author_IP>65.196.108.93</wp:comment_author_IP>
			<wp:comment_date>2010-07-13 12:27:05</wp:comment_date>
			<wp:comment_date_gmt>2010-07-13 16:27:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yeah, wish I had come across this a few projects ago... 
 
One question: I don&#039;t see anything in your jpg about subsampling (see <a href="http://www.ampsoft.net/webdesign-l/jpeg-compression.html)" rel="nofollow">http://www.ampsoft.net/webdesign-l/jpeg-compressi...</a>.  For our app, we are resizing scanned images containing both photographs and text.  Resizing jpegs using the standard jpeg codec seems to do a 4:1:1 subsampling; and we&#039;re really after 4:4:4... 
 
Thoughts? ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>3619</wp:comment_id>
			<wp:comment_author><![CDATA[Evgen]]></wp:comment_author>
			<wp:comment_author_email>rcevgen@mail.ru</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>83.234.171.2</wp:comment_author_IP>
			<wp:comment_date>2010-09-12 21:26:10</wp:comment_date>
			<wp:comment_date_gmt>2010-09-13 01:26:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great article. Very usefully! Thanks! ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>4926</wp:comment_id>
			<wp:comment_author><![CDATA[Nathanael Jones]]></wp:comment_author>
			<wp:comment_author_email>nathanael.jones@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>74.132.4.252</wp:comment_author_IP>
			<wp:comment_date>2010-10-04 12:25:11</wp:comment_date>
			<wp:comment_date_gmt>2010-10-04 16:25:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I think it is adjusted based on the quality setting. I suggest you try out the demo and see if you like the results you get with setting quality=100. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1192</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>5445</wp:comment_id>
			<wp:comment_author><![CDATA[High quality dynamically resized images with .net &mdash; Glenn Jones]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://glennjones.net/2005/10/high-quality-dynamically-resized-images-with-dot-net/</wp:comment_author_url>
			<wp:comment_author_IP>95.215.225.60</wp:comment_author_IP>
			<wp:comment_date>2011-04-28 04:13:27</wp:comment_date>
			<wp:comment_date_gmt>2011-04-28 08:13:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] that people posted on the subject. It may be also worth you checking out Nathanael Jones post on different pitfalls to avoid in image resizing and his [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1303978407.9279";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:93:{s:15:"comment_post_ID";s:3:"163";s:14:"comment_author";s:69:"High quality dynamically resized images with .net &mdash; Glenn Jones";s:18:"comment_author_url";s:83:"http://glennjones.net/2005/10/high-quality-dynamically-resized-images-with-dot-net/";s:20:"comment_author_email";s:0:"";s:15:"comment_content";s:162:"[...] that people posted on the subject. It may be also worth you checking out Nathanael Jones post on different pitfalls to avoid in image resizing and his [...]";s:12:"comment_type";s:8:"pingback";s:7:"user_ip";s:13:"95.215.225.60";s:10:"user_agent";s:50:"The Incutio XML-RPC PHP Library -- WordPress/3.0.5";s:8:"referrer";s:0:"";s:4:"blog";s:25:"http://nathanaeljones.com";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:57:"http://nathanaeljones.com/163/20-image-resizing-pitfalls/";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"failed";s:15:"SERVER_SOFTWARE";s:17:"Microsoft-IIS/7.0";s:11:"REQUEST_URI";s:11:"/xmlrpc.php";s:21:"PHP_FCGI_MAX_REQUESTS";s:5:"10000";s:5:"PHPRC";s:18:"C:Program FilesPHP";s:15:"ALLUSERSPROFILE";s:13:"C:ProgramData";s:7:"APPDATA";s:50:"C:Windowssystem32configsystemprofileAppDataRoaming";s:11:"APP_POOL_ID";s:13:"ndj-wordpress";s:18:"CommonProgramFiles";s:27:"C:Program FilesCommon Files";s:12:"COMPUTERNAME";s:6:"DED793";s:7:"ComSpec";s:24:"C:Windowssystem32cmd.exe";s:16:"FP_NO_HOST_CHECK";s:2:"NO";s:12:"LOCALAPPDATA";s:48:"C:Windowssystem32configsystemprofileAppDataLocal";s:20:"NUMBER_OF_PROCESSORS";s:1:"2";s:2:"OS";s:10:"Windows_NT";s:4:"Path";s:306:"C:Program FilesPHP;C:Windowssystem32;C:Windows;C:WindowsSystem32Wbem;C:Program FilesMySQLMySQL Server 5.0bin;C:WindowsSystem32WindowsPowerShellv1.0;c:Program FilesMicrosoft SQL Server100ToolsBinn;c:Program FilesMicrosoft SQL Server100DTSBinn;c:Program FilesMicrosoft SQL Server100ToolsBinnVSShellCommon7IDE";s:7:"PATHEXT";s:53:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC";s:22:"PROCESSOR_ARCHITECTURE";s:3:"x86";s:20:"PROCESSOR_IDENTIFIER";s:46:"x86 Family 15 Model 4 Stepping 1, GenuineIntel";s:15:"PROCESSOR_LEVEL";s:2:"15";s:18:"PROCESSOR_REVISION";s:4:"0401";s:11:"ProgramData";s:13:"C:ProgramData";s:12:"ProgramFiles";s:15:"C:Program Files";s:12:"PSModulePath";s:45:"C:Windowssystem32WindowsPowerShellv1.0Modules";s:6:"PUBLIC";s:13:"C:UsersPublic";s:11:"SystemDrive";s:2:"C:";s:10:"SystemRoot";s:9:"C:Windows";s:4:"TEMP";s:13:"C:WindowsTEMP";s:3:"TMP";s:13:"C:WindowsTEMP";s:10:"USERDOMAIN";s:15:"MAXIMUMASPLOCAL";s:8:"USERNAME";s:7:"DED793$";s:11:"USERPROFILE";s:36:"C:Windowssystem32configsystemprofile";s:6:"windir";s:9:"C:Windows";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:19:"HTTP_CONTENT_LENGTH";s:3:"341";s:17:"HTTP_CONTENT_TYPE";s:8:"text/xml";s:9:"HTTP_HOST";s:18:"nathanaeljones.com";s:15:"HTTP_USER_AGENT";s:50:"The Incutio XML-RPC PHP Library -- WordPress/3.0.5";s:13:"DOCUMENT_ROOT";s:23:"C:Websitesndj-wordpress";s:15:"SCRIPT_FILENAME";s:33:"C:Websitesndj-wordpressxmlrpc.php";s:20:"IIS_UrlRewriteModule";s:1:"1";s:12:"APPL_MD_PATH";s:16:"/LM/W3SVC/2/ROOT";s:18:"APPL_PHYSICAL_PATH";s:23:"C:Websitesndj-wordpress";s:9:"AUTH_TYPE";s:0:"";s:13:"AUTH_PASSWORD";s:0:"";s:9:"AUTH_USER";s:0:"";s:11:"CERT_COOKIE";s:0:"";s:10:"CERT_FLAGS";s:0:"";s:11:"CERT_ISSUER";s:0:"";s:17:"CERT_SERIALNUMBER";s:0:"";s:12:"CERT_SUBJECT";s:0:"";s:14:"CONTENT_LENGTH";s:3:"341";s:12:"CONTENT_TYPE";s:8:"text/xml";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:5:"HTTPS";s:3:"off";s:13:"HTTPS_KEYSIZE";s:0:"";s:19:"HTTPS_SECRETKEYSIZE";s:0:"";s:19:"HTTPS_SERVER_ISSUER";s:0:"";s:20:"HTTPS_SERVER_SUBJECT";s:0:"";s:11:"INSTANCE_ID";s:1:"2";s:18:"INSTANCE_META_PATH";s:11:"/LM/W3SVC/2";s:10:"LOCAL_ADDR";s:12:"66.29.219.39";s:10:"LOGON_USER";s:0:"";s:15:"PATH_TRANSLATED";s:33:"C:Websitesndj-wordpressxmlrpc.php";s:12:"QUERY_STRING";s:0:"";s:11:"REMOTE_ADDR";s:13:"95.215.225.60";s:11:"REMOTE_HOST";s:13:"95.215.225.60";s:11:"REMOTE_PORT";s:5:"50081";s:11:"REMOTE_USER";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:11:"SCRIPT_NAME";s:11:"/xmlrpc.php";s:11:"SERVER_NAME";s:18:"nathanaeljones.com";s:11:"SERVER_PORT";s:2:"80";s:18:"SERVER_PORT_SECURE";s:1:"0";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.0";s:3:"URL";s:11:"/xmlrpc.php";s:14:"ORIG_PATH_INFO";s:11:"/xmlrpc.php";s:8:"PHP_SELF";s:11:"/xmlrpc.php";s:12:"REQUEST_TIME";s:10:"1303978403";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1304976749.1877";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>5447</wp:comment_id>
			<wp:comment_author><![CDATA[blacksheep]]></wp:comment_author>
			<wp:comment_author_email>chaker.nakhli@javageneration.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.javageneration.com/</wp:comment_author_url>
			<wp:comment_author_IP>80.14.101.148</wp:comment_author_IP>
			<wp:comment_date>2011-05-16 03:49:41</wp:comment_date>
			<wp:comment_date_gmt>2011-05-16 07:49:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nice article. Thank you for sharing your work. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1305546581.9283";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:112:{s:15:"comment_post_ID";s:3:"163";s:14:"comment_author";s:10:"blacksheep";s:20:"comment_author_email";s:32:"chaker.nakhli@javageneration.com";s:18:"comment_author_url";s:30:"http://www.javageneration.com/";s:15:"comment_content";s:46:"Nice article. Thank you for sharing your work.";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:13:"80.14.101.148";s:10:"user_agent";s:100:"Mozilla/5.0 (Windows NT 6.0) AppleWebKit/534.24 (KHTML, like Gecko) Chrome/11.0.696.68 Safari/534.24";s:8:"referrer";s:57:"http://nathanaeljones.com/163/20-image-resizing-pitfalls/";s:4:"blog";s:25:"http://nathanaeljones.com";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:57:"http://nathanaeljones.com/163/20-image-resizing-pitfalls/";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:10:"blacksheep";s:10:"POST_email";s:32:"chaker.nakhli@javageneration.com";s:8:"POST_url";s:30:"http://www.javageneration.com/";s:12:"POST_comment";s:46:"Nice article. Thank you for sharing your work.";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:3:"163";s:19:"POST_comment_parent";s:1:"0";s:26:"POST_akismet_comment_nonce";s:10:"fe32c8da47";s:15:"SERVER_SOFTWARE";s:17:"Microsoft-IIS/7.0";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:21:"PHP_FCGI_MAX_REQUESTS";s:5:"10000";s:5:"PHPRC";s:18:"C:Program FilesPHP";s:15:"ALLUSERSPROFILE";s:13:"C:ProgramData";s:7:"APPDATA";s:50:"C:Windowssystem32configsystemprofileAppDataRoaming";s:11:"APP_POOL_ID";s:13:"ndj-wordpress";s:18:"CommonProgramFiles";s:27:"C:Program FilesCommon Files";s:12:"COMPUTERNAME";s:6:"DED793";s:7:"ComSpec";s:24:"C:Windowssystem32cmd.exe";s:16:"FP_NO_HOST_CHECK";s:2:"NO";s:12:"LOCALAPPDATA";s:48:"C:Windowssystem32configsystemprofileAppDataLocal";s:20:"NUMBER_OF_PROCESSORS";s:1:"2";s:2:"OS";s:10:"Windows_NT";s:4:"Path";s:306:"C:Program FilesPHP;C:Windowssystem32;C:Windows;C:WindowsSystem32Wbem;C:Program FilesMySQLMySQL Server 5.0bin;C:WindowsSystem32WindowsPowerShellv1.0;c:Program FilesMicrosoft SQL Server100ToolsBinn;c:Program FilesMicrosoft SQL Server100DTSBinn;c:Program FilesMicrosoft SQL Server100ToolsBinnVSShellCommon7IDE";s:7:"PATHEXT";s:53:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC";s:22:"PROCESSOR_ARCHITECTURE";s:3:"x86";s:20:"PROCESSOR_IDENTIFIER";s:46:"x86 Family 15 Model 4 Stepping 1, GenuineIntel";s:15:"PROCESSOR_LEVEL";s:2:"15";s:18:"PROCESSOR_REVISION";s:4:"0401";s:11:"ProgramData";s:13:"C:ProgramData";s:12:"ProgramFiles";s:15:"C:Program Files";s:12:"PSModulePath";s:45:"C:Windowssystem32WindowsPowerShellv1.0Modules";s:6:"PUBLIC";s:13:"C:UsersPublic";s:11:"SystemDrive";s:2:"C:";s:10:"SystemRoot";s:9:"C:Windows";s:4:"TEMP";s:13:"C:WindowsTEMP";s:3:"TMP";s:13:"C:WindowsTEMP";s:10:"USERDOMAIN";s:15:"MAXIMUMASPLOCAL";s:8:"USERNAME";s:7:"DED793$";s:11:"USERPROFILE";s:36:"C:Windowssystem32configsystemprofile";s:6:"windir";s:9:"C:Windows";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:18:"HTTP_CACHE_CONTROL";s:9:"max-age=0";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:19:"HTTP_CONTENT_LENGTH";s:3:"268";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:90:"application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5";s:19:"HTTP_ACCEPT_CHARSET";s:30:"ISO-8859-1,utf-8;q=0.7,*;q=0.3";s:20:"HTTP_ACCEPT_ENCODING";s:17:"gzip,deflate,sdch";s:20:"HTTP_ACCEPT_LANGUAGE";s:26:"en-US,fr-FR;q=0.8,en;q=0.6";s:11:"HTTP_COOKIE";s:0:"";s:9:"HTTP_HOST";s:18:"nathanaeljones.com";s:12:"HTTP_REFERER";s:57:"http://nathanaeljones.com/163/20-image-resizing-pitfalls/";s:15:"HTTP_USER_AGENT";s:100:"Mozilla/5.0 (Windows NT 6.0) AppleWebKit/534.24 (KHTML, like Gecko) Chrome/11.0.696.68 Safari/534.24";s:11:"HTTP_ORIGIN";s:25:"http://nathanaeljones.com";s:13:"DOCUMENT_ROOT";s:23:"C:Websitesndj-wordpress";s:15:"SCRIPT_FILENAME";s:43:"C:Websitesndj-wordpresswp-comments-post.php";s:20:"IIS_UrlRewriteModule";s:1:"1";s:12:"APPL_MD_PATH";s:16:"/LM/W3SVC/2/ROOT";s:18:"APPL_PHYSICAL_PATH";s:23:"C:Websitesndj-wordpress";s:9:"AUTH_TYPE";s:0:"";s:13:"AUTH_PASSWORD";s:0:"";s:9:"AUTH_USER";s:0:"";s:11:"CERT_COOKIE";s:0:"";s:10:"CERT_FLAGS";s:0:"";s:11:"CERT_ISSUER";s:0:"";s:17:"CERT_SERIALNUMBER";s:0:"";s:12:"CERT_SUBJECT";s:0:"";s:14:"CONTENT_LENGTH";s:3:"268";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:5:"HTTPS";s:3:"off";s:13:"HTTPS_KEYSIZE";s:0:"";s:19:"HTTPS_SECRETKEYSIZE";s:0:"";s:19:"HTTPS_SERVER_ISSUER";s:0:"";s:20:"HTTPS_SERVER_SUBJECT";s:0:"";s:11:"INSTANCE_ID";s:1:"2";s:18:"INSTANCE_META_PATH";s:11:"/LM/W3SVC/2";s:10:"LOCAL_ADDR";s:12:"66.29.219.39";s:10:"LOGON_USER";s:0:"";s:15:"PATH_TRANSLATED";s:43:"C:Websitesndj-wordpresswp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:11:"REMOTE_ADDR";s:13:"80.14.101.148";s:11:"REMOTE_HOST";s:13:"80.14.101.148";s:11:"REMOTE_PORT";s:5:"50812";s:11:"REMOTE_USER";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:11:"SERVER_NAME";s:18:"nathanaeljones.com";s:11:"SERVER_PORT";s:2:"80";s:18:"SERVER_PORT_SECURE";s:1:"0";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:3:"URL";s:21:"/wp-comments-post.php";s:14:"ORIG_PATH_INFO";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1305546580";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1305732701.2385";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6288</wp:comment_id>
			<wp:comment_author><![CDATA[Gaga]]></wp:comment_author>
			<wp:comment_author_email>ns.gaga@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>77.46.172.35</wp:comment_author_IP>
			<wp:comment_date>2011-06-16 22:31:48</wp:comment_date>
			<wp:comment_date_gmt>2011-06-17 02:31:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[great article yet again - I&#039;ve been around for a while, but one can still learn something, thumbs up! ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1308292308.5155";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:112:{s:15:"comment_post_ID";s:3:"163";s:14:"comment_author";s:4:"Gaga";s:20:"comment_author_email";s:17:"ns.gaga@gmail.com";s:18:"comment_author_url";s:0:"";s:15:"comment_content";s:101:"great article yet again - I've been around for a while, but one can still learn something, thumbs up!";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:12:"77.46.172.35";s:10:"user_agent";s:105:"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.24 Safari/535.1";s:8:"referrer";s:57:"http://nathanaeljones.com/163/20-image-resizing-pitfalls/";s:4:"blog";s:25:"http://nathanaeljones.com";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:57:"http://nathanaeljones.com/163/20-image-resizing-pitfalls/";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:4:"Gaga";s:10:"POST_email";s:17:"ns.gaga@gmail.com";s:8:"POST_url";s:0:"";s:12:"POST_comment";s:101:"great article yet again - I've been around for a while, but one can still learn something, thumbs up!";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:3:"163";s:19:"POST_comment_parent";s:1:"0";s:26:"POST_akismet_comment_nonce";s:10:"e4ea9ffd59";s:15:"SERVER_SOFTWARE";s:17:"Microsoft-IIS/7.0";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:21:"PHP_FCGI_MAX_REQUESTS";s:5:"10000";s:5:"PHPRC";s:18:"C:Program FilesPHP";s:15:"ALLUSERSPROFILE";s:13:"C:ProgramData";s:7:"APPDATA";s:50:"C:Windowssystem32configsystemprofileAppDataRoaming";s:11:"APP_POOL_ID";s:13:"ndj-wordpress";s:18:"CommonProgramFiles";s:27:"C:Program FilesCommon Files";s:12:"COMPUTERNAME";s:6:"DED793";s:7:"ComSpec";s:24:"C:Windowssystem32cmd.exe";s:16:"FP_NO_HOST_CHECK";s:2:"NO";s:12:"LOCALAPPDATA";s:48:"C:Windowssystem32configsystemprofileAppDataLocal";s:20:"NUMBER_OF_PROCESSORS";s:1:"2";s:2:"OS";s:10:"Windows_NT";s:4:"Path";s:306:"C:Program FilesPHP;C:Windowssystem32;C:Windows;C:WindowsSystem32Wbem;C:Program FilesMySQLMySQL Server 5.0bin;C:WindowsSystem32WindowsPowerShellv1.0;c:Program FilesMicrosoft SQL Server100ToolsBinn;c:Program FilesMicrosoft SQL Server100DTSBinn;c:Program FilesMicrosoft SQL Server100ToolsBinnVSShellCommon7IDE";s:7:"PATHEXT";s:53:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC";s:22:"PROCESSOR_ARCHITECTURE";s:3:"x86";s:20:"PROCESSOR_IDENTIFIER";s:46:"x86 Family 15 Model 4 Stepping 1, GenuineIntel";s:15:"PROCESSOR_LEVEL";s:2:"15";s:18:"PROCESSOR_REVISION";s:4:"0401";s:11:"ProgramData";s:13:"C:ProgramData";s:12:"ProgramFiles";s:15:"C:Program Files";s:12:"PSModulePath";s:45:"C:Windowssystem32WindowsPowerShellv1.0Modules";s:6:"PUBLIC";s:13:"C:UsersPublic";s:11:"SystemDrive";s:2:"C:";s:10:"SystemRoot";s:9:"C:Windows";s:4:"TEMP";s:13:"C:WindowsTEMP";s:3:"TMP";s:13:"C:WindowsTEMP";s:10:"USERDOMAIN";s:15:"MAXIMUMASPLOCAL";s:8:"USERNAME";s:7:"DED793$";s:11:"USERPROFILE";s:36:"C:Windowssystem32configsystemprofile";s:6:"windir";s:9:"C:Windows";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:18:"HTTP_CACHE_CONTROL";s:9:"max-age=0";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:19:"HTTP_CONTENT_LENGTH";s:3:"272";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:19:"HTTP_ACCEPT_CHARSET";s:30:"ISO-8859-1,utf-8;q=0.7,*;q=0.3";s:20:"HTTP_ACCEPT_ENCODING";s:17:"gzip,deflate,sdch";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"en-US,en;q=0.8";s:11:"HTTP_COOKIE";s:0:"";s:9:"HTTP_HOST";s:18:"nathanaeljones.com";s:12:"HTTP_REFERER";s:57:"http://nathanaeljones.com/163/20-image-resizing-pitfalls/";s:15:"HTTP_USER_AGENT";s:105:"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.24 Safari/535.1";s:11:"HTTP_ORIGIN";s:25:"http://nathanaeljones.com";s:13:"DOCUMENT_ROOT";s:23:"C:Websitesndj-wordpress";s:15:"SCRIPT_FILENAME";s:43:"C:Websitesndj-wordpresswp-comments-post.php";s:20:"IIS_UrlRewriteModule";s:1:"1";s:12:"APPL_MD_PATH";s:16:"/LM/W3SVC/2/ROOT";s:18:"APPL_PHYSICAL_PATH";s:23:"C:Websitesndj-wordpress";s:9:"AUTH_TYPE";s:0:"";s:13:"AUTH_PASSWORD";s:0:"";s:9:"AUTH_USER";s:0:"";s:11:"CERT_COOKIE";s:0:"";s:10:"CERT_FLAGS";s:0:"";s:11:"CERT_ISSUER";s:0:"";s:17:"CERT_SERIALNUMBER";s:0:"";s:12:"CERT_SUBJECT";s:0:"";s:14:"CONTENT_LENGTH";s:3:"272";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:5:"HTTPS";s:3:"off";s:13:"HTTPS_KEYSIZE";s:0:"";s:19:"HTTPS_SECRETKEYSIZE";s:0:"";s:19:"HTTPS_SERVER_ISSUER";s:0:"";s:20:"HTTPS_SERVER_SUBJECT";s:0:"";s:11:"INSTANCE_ID";s:1:"2";s:18:"INSTANCE_META_PATH";s:11:"/LM/W3SVC/2";s:10:"LOCAL_ADDR";s:12:"66.29.219.39";s:10:"LOGON_USER";s:0:"";s:15:"PATH_TRANSLATED";s:43:"C:Websitesndj-wordpresswp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:11:"REMOTE_ADDR";s:12:"77.46.172.35";s:11:"REMOTE_HOST";s:12:"77.46.172.35";s:11:"REMOTE_PORT";s:5:"49868";s:11:"REMOTE_USER";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:11:"SERVER_NAME";s:18:"nathanaeljones.com";s:11:"SERVER_PORT";s:2:"80";s:18:"SERVER_PORT_SECURE";s:1:"0";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:3:"URL";s:21:"/wp-comments-post.php";s:14:"ORIG_PATH_INFO";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1308292307";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1308938752.9177";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7126</wp:comment_id>
			<wp:comment_author><![CDATA[Rotating Images using GDI+ | trouble86.com]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.trouble86.com/rotating-images-using-gdi/</wp:comment_author_url>
			<wp:comment_author_IP>208.43.129.5</wp:comment_author_IP>
			<wp:comment_date>2011-10-24 09:45:31</wp:comment_date>
			<wp:comment_date_gmt>2011-10-24 13:45:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] an FYI, if you are doing image resizing in ASP.NET, you should read this article on how to do it safely, or use the ImageResizing.Net library [...] ]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1319463931.4047";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:95:{s:15:"comment_post_ID";s:3:"163";s:14:"comment_author";s:42:"Rotating Images using GDI+ | trouble86.com";s:18:"comment_author_url";s:51:"http://www.trouble86.com/rotating-images-using-gdi/";s:20:"comment_author_email";s:0:"";s:15:"comment_content";s:153:"[...] an FYI, if you are doing image resizing in ASP.NET, you should read this article on how to do it safely, or use the ImageResizing.Net library [...]";s:12:"comment_type";s:8:"pingback";s:7:"user_ip";s:12:"208.43.129.5";s:10:"user_agent";s:50:"The Incutio XML-RPC PHP Library -- WordPress/3.2.1";s:8:"referrer";s:0:"";s:4:"blog";s:25:"http://nathanaeljones.com";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:57:"http://nathanaeljones.com/163/20-image-resizing-pitfalls/";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"failed";s:15:"SERVER_SOFTWARE";s:17:"Microsoft-IIS/7.0";s:11:"REQUEST_URI";s:11:"/xmlrpc.php";s:21:"PHP_FCGI_MAX_REQUESTS";s:5:"10000";s:5:"PHPRC";s:18:"C:Program FilesPHP";s:15:"ALLUSERSPROFILE";s:13:"C:ProgramData";s:7:"APPDATA";s:50:"C:Windowssystem32configsystemprofileAppDataRoaming";s:11:"APP_POOL_ID";s:13:"ndj-wordpress";s:18:"CommonProgramFiles";s:27:"C:Program FilesCommon Files";s:12:"COMPUTERNAME";s:6:"DED793";s:7:"ComSpec";s:24:"C:Windowssystem32cmd.exe";s:16:"FP_NO_HOST_CHECK";s:2:"NO";s:12:"LOCALAPPDATA";s:48:"C:Windowssystem32configsystemprofileAppDataLocal";s:20:"NUMBER_OF_PROCESSORS";s:1:"2";s:2:"OS";s:10:"Windows_NT";s:4:"Path";s:306:"C:Program FilesPHP;C:Windowssystem32;C:Windows;C:WindowsSystem32Wbem;C:Program FilesMySQLMySQL Server 5.0bin;C:WindowsSystem32WindowsPowerShellv1.0;c:Program FilesMicrosoft SQL Server100ToolsBinn;c:Program FilesMicrosoft SQL Server100DTSBinn;c:Program FilesMicrosoft SQL Server100ToolsBinnVSShellCommon7IDE";s:7:"PATHEXT";s:53:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC";s:22:"PROCESSOR_ARCHITECTURE";s:3:"x86";s:20:"PROCESSOR_IDENTIFIER";s:46:"x86 Family 15 Model 4 Stepping 1, GenuineIntel";s:15:"PROCESSOR_LEVEL";s:2:"15";s:18:"PROCESSOR_REVISION";s:4:"0401";s:11:"ProgramData";s:13:"C:ProgramData";s:12:"ProgramFiles";s:15:"C:Program Files";s:12:"PSModulePath";s:45:"C:Windowssystem32WindowsPowerShellv1.0Modules";s:6:"PUBLIC";s:13:"C:UsersPublic";s:11:"SystemDrive";s:2:"C:";s:10:"SystemRoot";s:9:"C:Windows";s:4:"TEMP";s:13:"C:WindowsTEMP";s:3:"TMP";s:13:"C:WindowsTEMP";s:10:"USERDOMAIN";s:15:"MAXIMUMASPLOCAL";s:8:"USERNAME";s:7:"DED793$";s:11:"USERPROFILE";s:36:"C:Windowssystem32configsystemprofile";s:6:"windir";s:9:"C:Windows";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:19:"HTTP_CONTENT_LENGTH";s:3:"309";s:17:"HTTP_CONTENT_TYPE";s:8:"text/xml";s:11:"HTTP_ACCEPT";s:3:"*/*";s:20:"HTTP_ACCEPT_ENCODING";s:29:"deflate;q=1.0, compress;q=0.5";s:9:"HTTP_HOST";s:18:"nathanaeljones.com";s:15:"HTTP_USER_AGENT";s:50:"The Incutio XML-RPC PHP Library -- WordPress/3.2.1";s:13:"DOCUMENT_ROOT";s:23:"C:Websitesndj-wordpress";s:15:"SCRIPT_FILENAME";s:33:"C:Websitesndj-wordpressxmlrpc.php";s:20:"IIS_UrlRewriteModule";s:1:"1";s:12:"APPL_MD_PATH";s:16:"/LM/W3SVC/2/ROOT";s:18:"APPL_PHYSICAL_PATH";s:23:"C:Websitesndj-wordpress";s:9:"AUTH_TYPE";s:0:"";s:13:"AUTH_PASSWORD";s:0:"";s:9:"AUTH_USER";s:0:"";s:11:"CERT_COOKIE";s:0:"";s:10:"CERT_FLAGS";s:0:"";s:11:"CERT_ISSUER";s:0:"";s:17:"CERT_SERIALNUMBER";s:0:"";s:12:"CERT_SUBJECT";s:0:"";s:14:"CONTENT_LENGTH";s:3:"309";s:12:"CONTENT_TYPE";s:8:"text/xml";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:5:"HTTPS";s:3:"off";s:13:"HTTPS_KEYSIZE";s:0:"";s:19:"HTTPS_SECRETKEYSIZE";s:0:"";s:19:"HTTPS_SERVER_ISSUER";s:0:"";s:20:"HTTPS_SERVER_SUBJECT";s:0:"";s:11:"INSTANCE_ID";s:1:"2";s:18:"INSTANCE_META_PATH";s:11:"/LM/W3SVC/2";s:10:"LOCAL_ADDR";s:12:"66.29.219.39";s:10:"LOGON_USER";s:0:"";s:15:"PATH_TRANSLATED";s:33:"C:Websitesndj-wordpressxmlrpc.php";s:12:"QUERY_STRING";s:0:"";s:11:"REMOTE_ADDR";s:12:"208.43.129.5";s:11:"REMOTE_HOST";s:12:"208.43.129.5";s:11:"REMOTE_PORT";s:5:"46481";s:11:"REMOTE_USER";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:11:"SCRIPT_NAME";s:11:"/xmlrpc.php";s:11:"SERVER_NAME";s:18:"nathanaeljones.com";s:11:"SERVER_PORT";s:2:"80";s:18:"SERVER_PORT_SECURE";s:1:"0";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.0";s:3:"URL";s:11:"/xmlrpc.php";s:14:"ORIG_PATH_INFO";s:11:"/xmlrpc.php";s:8:"PHP_SELF";s:11:"/xmlrpc.php";s:12:"REQUEST_TIME";s:10:"1319463928";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7136</wp:comment_id>
			<wp:comment_author><![CDATA[NuGet Package of Week #11 - ImageResizer enables clean ,clear image resizing in ASP.NET - Scott Hanselman]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.hanselman.com/blog/NuGetPackageOfWeek11ImageResizerEnablesCleanClearImageResizingInASPNET.aspx</wp:comment_author_url>
			<wp:comment_author_IP>206.72.120.92</wp:comment_author_IP>
			<wp:comment_date>2011-10-31 19:58:11</wp:comment_date>
			<wp:comment_date_gmt>2011-10-31 23:58:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] 20 Image Resizing Pitfalls      Comments [0] Tweet     Permalink     &laquo;&nbsp;Embrace Authorship - The importance of r... | Home | [...] ]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1320105491.7644";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:93:{s:15:"comment_post_ID";s:3:"163";s:14:"comment_author";s:105:"NuGet Package of Week #11 - ImageResizer enables clean ,clear image resizing in ASP.NET - Scott Hanselman";s:18:"comment_author_url";s:105:"http://www.hanselman.com/blog/NuGetPackageOfWeek11ImageResizerEnablesCleanClearImageResizingInASPNET.aspx";s:20:"comment_author_email";s:0:"";s:15:"comment_content";s:146:"[...] 20 Image Resizing Pitfalls      Comments [0] Tweet     Permalink     &laquo;&nbsp;Embrace Authorship - The importance of r... | Home | [...]";s:12:"comment_type";s:8:"pingback";s:7:"user_ip";s:13:"206.72.120.92";s:10:"user_agent";s:34:"newtelligence dasBlog/2.4.279.6007";s:8:"referrer";s:0:"";s:4:"blog";s:25:"http://nathanaeljones.com";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:57:"http://nathanaeljones.com/163/20-image-resizing-pitfalls/";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"failed";s:15:"SERVER_SOFTWARE";s:17:"Microsoft-IIS/7.0";s:11:"REQUEST_URI";s:11:"/xmlrpc.php";s:21:"PHP_FCGI_MAX_REQUESTS";s:5:"10000";s:5:"PHPRC";s:18:"C:Program FilesPHP";s:15:"ALLUSERSPROFILE";s:13:"C:ProgramData";s:7:"APPDATA";s:50:"C:Windowssystem32configsystemprofileAppDataRoaming";s:11:"APP_POOL_ID";s:13:"ndj-wordpress";s:18:"CommonProgramFiles";s:27:"C:Program FilesCommon Files";s:12:"COMPUTERNAME";s:6:"DED793";s:7:"ComSpec";s:24:"C:Windowssystem32cmd.exe";s:16:"FP_NO_HOST_CHECK";s:2:"NO";s:12:"LOCALAPPDATA";s:48:"C:Windowssystem32configsystemprofileAppDataLocal";s:20:"NUMBER_OF_PROCESSORS";s:1:"2";s:2:"OS";s:10:"Windows_NT";s:4:"Path";s:306:"C:Program FilesPHP;C:Windowssystem32;C:Windows;C:WindowsSystem32Wbem;C:Program FilesMySQLMySQL Server 5.0bin;C:WindowsSystem32WindowsPowerShellv1.0;c:Program FilesMicrosoft SQL Server100ToolsBinn;c:Program FilesMicrosoft SQL Server100DTSBinn;c:Program FilesMicrosoft SQL Server100ToolsBinnVSShellCommon7IDE";s:7:"PATHEXT";s:53:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC";s:22:"PROCESSOR_ARCHITECTURE";s:3:"x86";s:20:"PROCESSOR_IDENTIFIER";s:46:"x86 Family 15 Model 4 Stepping 1, GenuineIntel";s:15:"PROCESSOR_LEVEL";s:2:"15";s:18:"PROCESSOR_REVISION";s:4:"0401";s:11:"ProgramData";s:13:"C:ProgramData";s:12:"ProgramFiles";s:15:"C:Program Files";s:12:"PSModulePath";s:45:"C:Windowssystem32WindowsPowerShellv1.0Modules";s:6:"PUBLIC";s:13:"C:UsersPublic";s:11:"SystemDrive";s:2:"C:";s:10:"SystemRoot";s:9:"C:Windows";s:4:"TEMP";s:13:"C:WindowsTEMP";s:3:"TMP";s:13:"C:WindowsTEMP";s:10:"USERDOMAIN";s:15:"MAXIMUMASPLOCAL";s:8:"USERNAME";s:7:"DED793$";s:11:"USERPROFILE";s:36:"C:Windowssystem32configsystemprofile";s:6:"windir";s:9:"C:Windows";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:19:"HTTP_CONTENT_LENGTH";s:3:"449";s:17:"HTTP_CONTENT_TYPE";s:8:"text/xml";s:9:"HTTP_HOST";s:18:"nathanaeljones.com";s:15:"HTTP_USER_AGENT";s:34:"newtelligence dasBlog/2.4.279.6007";s:13:"DOCUMENT_ROOT";s:23:"C:Websitesndj-wordpress";s:15:"SCRIPT_FILENAME";s:33:"C:Websitesndj-wordpressxmlrpc.php";s:20:"IIS_UrlRewriteModule";s:1:"1";s:12:"APPL_MD_PATH";s:16:"/LM/W3SVC/2/ROOT";s:18:"APPL_PHYSICAL_PATH";s:23:"C:Websitesndj-wordpress";s:9:"AUTH_TYPE";s:0:"";s:13:"AUTH_PASSWORD";s:0:"";s:9:"AUTH_USER";s:0:"";s:11:"CERT_COOKIE";s:0:"";s:10:"CERT_FLAGS";s:0:"";s:11:"CERT_ISSUER";s:0:"";s:17:"CERT_SERIALNUMBER";s:0:"";s:12:"CERT_SUBJECT";s:0:"";s:14:"CONTENT_LENGTH";s:3:"449";s:12:"CONTENT_TYPE";s:8:"text/xml";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:5:"HTTPS";s:3:"off";s:13:"HTTPS_KEYSIZE";s:0:"";s:19:"HTTPS_SECRETKEYSIZE";s:0:"";s:19:"HTTPS_SERVER_ISSUER";s:0:"";s:20:"HTTPS_SERVER_SUBJECT";s:0:"";s:11:"INSTANCE_ID";s:1:"2";s:18:"INSTANCE_META_PATH";s:11:"/LM/W3SVC/2";s:10:"LOCAL_ADDR";s:12:"66.29.219.39";s:10:"LOGON_USER";s:0:"";s:15:"PATH_TRANSLATED";s:33:"C:Websitesndj-wordpressxmlrpc.php";s:12:"QUERY_STRING";s:0:"";s:11:"REMOTE_ADDR";s:13:"206.72.120.92";s:11:"REMOTE_HOST";s:13:"206.72.120.92";s:11:"REMOTE_PORT";s:5:"49242";s:11:"REMOTE_USER";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:11:"SCRIPT_NAME";s:11:"/xmlrpc.php";s:11:"SERVER_NAME";s:18:"nathanaeljones.com";s:11:"SERVER_PORT";s:2:"80";s:18:"SERVER_PORT_SECURE";s:1:"0";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:3:"URL";s:11:"/xmlrpc.php";s:14:"ORIG_PATH_INFO";s:11:"/xmlrpc.php";s:8:"PHP_SELF";s:11:"/xmlrpc.php";s:12:"REQUEST_TIME";s:10:"1320105489";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7137</wp:comment_id>
			<wp:comment_author><![CDATA[NuGet Package of Week #11 &#8211; ImageResizer enables clean, clear image resizing in ASP.NET &laquo; Fast Ninja Blog by Freelanceful &#8211; Web Design | Coding | Freelancing]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://fastninja.freelanceful.com/nuget-package-of-week-11-imageresizer-enables-clean-clear-image-resizing-in-asp-net</wp:comment_author_url>
			<wp:comment_author_IP>173.192.220.106</wp:comment_author_IP>
			<wp:comment_date>2011-11-01 00:07:44</wp:comment_date>
			<wp:comment_date_gmt>2011-11-01 04:07:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] 20 Image Resizing Pitfalls [...] ]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1320120464.5859";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:95:{s:15:"comment_post_ID";s:3:"163";s:14:"comment_author";s:175:"NuGet Package of Week #11 &#8211; ImageResizer enables clean, clear image resizing in ASP.NET &laquo; Fast Ninja Blog by Freelanceful &#8211; Web Design | Coding | Freelancing";s:18:"comment_author_url";s:117:"http://fastninja.freelanceful.com/nuget-package-of-week-11-imageresizer-enables-clean-clear-image-resizing-in-asp-net";s:20:"comment_author_email";s:0:"";s:15:"comment_content";s:38:"[...] 20 Image Resizing Pitfalls [...]";s:12:"comment_type";s:8:"pingback";s:7:"user_ip";s:15:"173.192.220.106";s:10:"user_agent";s:50:"The Incutio XML-RPC PHP Library -- WordPress/3.2.1";s:8:"referrer";s:0:"";s:4:"blog";s:25:"http://nathanaeljones.com";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:57:"http://nathanaeljones.com/163/20-image-resizing-pitfalls/";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"failed";s:15:"SERVER_SOFTWARE";s:17:"Microsoft-IIS/7.0";s:11:"REQUEST_URI";s:11:"/xmlrpc.php";s:21:"PHP_FCGI_MAX_REQUESTS";s:5:"10000";s:5:"PHPRC";s:18:"C:Program FilesPHP";s:15:"ALLUSERSPROFILE";s:13:"C:ProgramData";s:7:"APPDATA";s:50:"C:Windowssystem32configsystemprofileAppDataRoaming";s:11:"APP_POOL_ID";s:13:"ndj-wordpress";s:18:"CommonProgramFiles";s:27:"C:Program FilesCommon Files";s:12:"COMPUTERNAME";s:6:"DED793";s:7:"ComSpec";s:24:"C:Windowssystem32cmd.exe";s:16:"FP_NO_HOST_CHECK";s:2:"NO";s:12:"LOCALAPPDATA";s:48:"C:Windowssystem32configsystemprofileAppDataLocal";s:20:"NUMBER_OF_PROCESSORS";s:1:"2";s:2:"OS";s:10:"Windows_NT";s:4:"Path";s:306:"C:Program FilesPHP;C:Windowssystem32;C:Windows;C:WindowsSystem32Wbem;C:Program FilesMySQLMySQL Server 5.0bin;C:WindowsSystem32WindowsPowerShellv1.0;c:Program FilesMicrosoft SQL Server100ToolsBinn;c:Program FilesMicrosoft SQL Server100DTSBinn;c:Program FilesMicrosoft SQL Server100ToolsBinnVSShellCommon7IDE";s:7:"PATHEXT";s:53:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC";s:22:"PROCESSOR_ARCHITECTURE";s:3:"x86";s:20:"PROCESSOR_IDENTIFIER";s:46:"x86 Family 15 Model 4 Stepping 1, GenuineIntel";s:15:"PROCESSOR_LEVEL";s:2:"15";s:18:"PROCESSOR_REVISION";s:4:"0401";s:11:"ProgramData";s:13:"C:ProgramData";s:12:"ProgramFiles";s:15:"C:Program Files";s:12:"PSModulePath";s:45:"C:Windowssystem32WindowsPowerShellv1.0Modules";s:6:"PUBLIC";s:13:"C:UsersPublic";s:11:"SystemDrive";s:2:"C:";s:10:"SystemRoot";s:9:"C:Windows";s:4:"TEMP";s:13:"C:WindowsTEMP";s:3:"TMP";s:13:"C:WindowsTEMP";s:10:"USERDOMAIN";s:15:"MAXIMUMASPLOCAL";s:8:"USERNAME";s:7:"DED793$";s:11:"USERPROFILE";s:36:"C:Windowssystem32configsystemprofile";s:6:"windir";s:9:"C:Windows";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:19:"HTTP_CONTENT_LENGTH";s:3:"375";s:17:"HTTP_CONTENT_TYPE";s:8:"text/xml";s:11:"HTTP_ACCEPT";s:3:"*/*";s:20:"HTTP_ACCEPT_ENCODING";s:29:"deflate;q=1.0, compress;q=0.5";s:9:"HTTP_HOST";s:18:"nathanaeljones.com";s:15:"HTTP_USER_AGENT";s:50:"The Incutio XML-RPC PHP Library -- WordPress/3.2.1";s:13:"DOCUMENT_ROOT";s:23:"C:Websitesndj-wordpress";s:15:"SCRIPT_FILENAME";s:33:"C:Websitesndj-wordpressxmlrpc.php";s:20:"IIS_UrlRewriteModule";s:1:"1";s:12:"APPL_MD_PATH";s:16:"/LM/W3SVC/2/ROOT";s:18:"APPL_PHYSICAL_PATH";s:23:"C:Websitesndj-wordpress";s:9:"AUTH_TYPE";s:0:"";s:13:"AUTH_PASSWORD";s:0:"";s:9:"AUTH_USER";s:0:"";s:11:"CERT_COOKIE";s:0:"";s:10:"CERT_FLAGS";s:0:"";s:11:"CERT_ISSUER";s:0:"";s:17:"CERT_SERIALNUMBER";s:0:"";s:12:"CERT_SUBJECT";s:0:"";s:14:"CONTENT_LENGTH";s:3:"375";s:12:"CONTENT_TYPE";s:8:"text/xml";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:5:"HTTPS";s:3:"off";s:13:"HTTPS_KEYSIZE";s:0:"";s:19:"HTTPS_SECRETKEYSIZE";s:0:"";s:19:"HTTPS_SERVER_ISSUER";s:0:"";s:20:"HTTPS_SERVER_SUBJECT";s:0:"";s:11:"INSTANCE_ID";s:1:"2";s:18:"INSTANCE_META_PATH";s:11:"/LM/W3SVC/2";s:10:"LOCAL_ADDR";s:12:"66.29.219.39";s:10:"LOGON_USER";s:0:"";s:15:"PATH_TRANSLATED";s:33:"C:Websitesndj-wordpressxmlrpc.php";s:12:"QUERY_STRING";s:0:"";s:11:"REMOTE_ADDR";s:15:"173.192.220.106";s:11:"REMOTE_HOST";s:15:"173.192.220.106";s:11:"REMOTE_PORT";s:5:"47894";s:11:"REMOTE_USER";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:11:"SCRIPT_NAME";s:11:"/xmlrpc.php";s:11:"SERVER_NAME";s:18:"nathanaeljones.com";s:11:"SERVER_PORT";s:2:"80";s:18:"SERVER_PORT_SECURE";s:1:"0";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.0";s:3:"URL";s:11:"/xmlrpc.php";s:14:"ORIG_PATH_INFO";s:11:"/xmlrpc.php";s:8:"PHP_SELF";s:11:"/xmlrpc.php";s:12:"REQUEST_TIME";s:10:"1320120461";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7138</wp:comment_id>
			<wp:comment_author><![CDATA[&#124; Blog &#124; NuGet Package of Week #11 - ImageResizer enables clean, clear image resizing in ASP.NET]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.webdeveloperconnections.com/2011/11/01/nuget-package-of-week-11-imageresizer-enables-clean-clear-image-resizing-in-asp-net/</wp:comment_author_url>
			<wp:comment_author_IP>74.52.171.18</wp:comment_author_IP>
			<wp:comment_date>2011-11-01 03:57:06</wp:comment_date>
			<wp:comment_date_gmt>2011-11-01 07:57:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] 20 Image Resizing Pitfalls [...] ]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7139</wp:comment_id>
			<wp:comment_author><![CDATA[NuGet Package of Week #11 &#8211; ImageResizer enables clean, clear image resizing in ASP.NET - Technology | Zeytin.Net]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://site.zeytin.net/technology/nuget-package-of-week-11-imageresizer-enables-clean-clear-image-resizing-in-asp-net.html</wp:comment_author_url>
			<wp:comment_author_IP>93.89.23.24</wp:comment_author_IP>
			<wp:comment_date>2011-11-01 05:51:42</wp:comment_date>
			<wp:comment_date_gmt>2011-11-01 09:51:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] 20 Image Resizing Pitfalls [...] ]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1320141102.4552";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:95:{s:15:"comment_post_ID";s:3:"163";s:14:"comment_author";s:119:"NuGet Package of Week #11 &#8211; ImageResizer enables clean, clear image resizing in ASP.NET - Technology | Zeytin.Net";s:18:"comment_author_url";s:122:"http://site.zeytin.net/technology/nuget-package-of-week-11-imageresizer-enables-clean-clear-image-resizing-in-asp-net.html";s:20:"comment_author_email";s:0:"";s:15:"comment_content";s:38:"[...] 20 Image Resizing Pitfalls [...]";s:12:"comment_type";s:8:"pingback";s:7:"user_ip";s:11:"93.89.23.24";s:10:"user_agent";s:50:"The Incutio XML-RPC PHP Library -- WordPress/3.2.1";s:8:"referrer";s:0:"";s:4:"blog";s:25:"http://nathanaeljones.com";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:57:"http://nathanaeljones.com/163/20-image-resizing-pitfalls/";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"failed";s:15:"SERVER_SOFTWARE";s:17:"Microsoft-IIS/7.0";s:11:"REQUEST_URI";s:11:"/xmlrpc.php";s:21:"PHP_FCGI_MAX_REQUESTS";s:5:"10000";s:5:"PHPRC";s:18:"C:Program FilesPHP";s:15:"ALLUSERSPROFILE";s:13:"C:ProgramData";s:7:"APPDATA";s:50:"C:Windowssystem32configsystemprofileAppDataRoaming";s:11:"APP_POOL_ID";s:13:"ndj-wordpress";s:18:"CommonProgramFiles";s:27:"C:Program FilesCommon Files";s:12:"COMPUTERNAME";s:6:"DED793";s:7:"ComSpec";s:24:"C:Windowssystem32cmd.exe";s:16:"FP_NO_HOST_CHECK";s:2:"NO";s:12:"LOCALAPPDATA";s:48:"C:Windowssystem32configsystemprofileAppDataLocal";s:20:"NUMBER_OF_PROCESSORS";s:1:"2";s:2:"OS";s:10:"Windows_NT";s:4:"Path";s:306:"C:Program FilesPHP;C:Windowssystem32;C:Windows;C:WindowsSystem32Wbem;C:Program FilesMySQLMySQL Server 5.0bin;C:WindowsSystem32WindowsPowerShellv1.0;c:Program FilesMicrosoft SQL Server100ToolsBinn;c:Program FilesMicrosoft SQL Server100DTSBinn;c:Program FilesMicrosoft SQL Server100ToolsBinnVSShellCommon7IDE";s:7:"PATHEXT";s:53:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC";s:22:"PROCESSOR_ARCHITECTURE";s:3:"x86";s:20:"PROCESSOR_IDENTIFIER";s:46:"x86 Family 15 Model 4 Stepping 1, GenuineIntel";s:15:"PROCESSOR_LEVEL";s:2:"15";s:18:"PROCESSOR_REVISION";s:4:"0401";s:11:"ProgramData";s:13:"C:ProgramData";s:12:"ProgramFiles";s:15:"C:Program Files";s:12:"PSModulePath";s:45:"C:Windowssystem32WindowsPowerShellv1.0Modules";s:6:"PUBLIC";s:13:"C:UsersPublic";s:11:"SystemDrive";s:2:"C:";s:10:"SystemRoot";s:9:"C:Windows";s:4:"TEMP";s:13:"C:WindowsTEMP";s:3:"TMP";s:13:"C:WindowsTEMP";s:10:"USERDOMAIN";s:15:"MAXIMUMASPLOCAL";s:8:"USERNAME";s:7:"DED793$";s:11:"USERPROFILE";s:36:"C:Windowssystem32configsystemprofile";s:6:"windir";s:9:"C:Windows";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:19:"HTTP_CONTENT_LENGTH";s:3:"380";s:17:"HTTP_CONTENT_TYPE";s:8:"text/xml";s:11:"HTTP_ACCEPT";s:3:"*/*";s:20:"HTTP_ACCEPT_ENCODING";s:29:"deflate;q=1.0, compress;q=0.5";s:9:"HTTP_HOST";s:18:"nathanaeljones.com";s:15:"HTTP_USER_AGENT";s:50:"The Incutio XML-RPC PHP Library -- WordPress/3.2.1";s:13:"DOCUMENT_ROOT";s:23:"C:Websitesndj-wordpress";s:15:"SCRIPT_FILENAME";s:33:"C:Websitesndj-wordpressxmlrpc.php";s:20:"IIS_UrlRewriteModule";s:1:"1";s:12:"APPL_MD_PATH";s:16:"/LM/W3SVC/2/ROOT";s:18:"APPL_PHYSICAL_PATH";s:23:"C:Websitesndj-wordpress";s:9:"AUTH_TYPE";s:0:"";s:13:"AUTH_PASSWORD";s:0:"";s:9:"AUTH_USER";s:0:"";s:11:"CERT_COOKIE";s:0:"";s:10:"CERT_FLAGS";s:0:"";s:11:"CERT_ISSUER";s:0:"";s:17:"CERT_SERIALNUMBER";s:0:"";s:12:"CERT_SUBJECT";s:0:"";s:14:"CONTENT_LENGTH";s:3:"380";s:12:"CONTENT_TYPE";s:8:"text/xml";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:5:"HTTPS";s:3:"off";s:13:"HTTPS_KEYSIZE";s:0:"";s:19:"HTTPS_SECRETKEYSIZE";s:0:"";s:19:"HTTPS_SERVER_ISSUER";s:0:"";s:20:"HTTPS_SERVER_SUBJECT";s:0:"";s:11:"INSTANCE_ID";s:1:"2";s:18:"INSTANCE_META_PATH";s:11:"/LM/W3SVC/2";s:10:"LOCAL_ADDR";s:12:"66.29.219.39";s:10:"LOGON_USER";s:0:"";s:15:"PATH_TRANSLATED";s:33:"C:Websitesndj-wordpressxmlrpc.php";s:12:"QUERY_STRING";s:0:"";s:11:"REMOTE_ADDR";s:11:"93.89.23.24";s:11:"REMOTE_HOST";s:11:"93.89.23.24";s:11:"REMOTE_PORT";s:5:"34835";s:11:"REMOTE_USER";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:11:"SCRIPT_NAME";s:11:"/xmlrpc.php";s:11:"SERVER_NAME";s:18:"nathanaeljones.com";s:11:"SERVER_PORT";s:2:"80";s:18:"SERVER_PORT_SECURE";s:1:"0";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.0";s:3:"URL";s:11:"/xmlrpc.php";s:14:"ORIG_PATH_INFO";s:11:"/xmlrpc.php";s:8:"PHP_SELF";s:11:"/xmlrpc.php";s:12:"REQUEST_TIME";s:10:"1320141094";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7141</wp:comment_id>
			<wp:comment_author><![CDATA[Martin Lercher]]></wp:comment_author>
			<wp:comment_author_email>lercher@singhammer.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.singhammer.de</wp:comment_author_url>
			<wp:comment_author_IP>93.104.199.50</wp:comment_author_IP>
			<wp:comment_date>2011-11-02 07:57:57</wp:comment_date>
			<wp:comment_date_gmt>2011-11-02 11:57:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[RoughCompare - There are at least two additional issues with file time stamps which might be of interest here: 
 
(1) FAT/NTFS - FAT has only 2s accuracy, so the same file&#039;s timestamp on NTFS and on FAT file systems can differ by 2 seconds. 
 
(2) Daylight saving time (my favorite) and timezone - some copy/file transfer programs dont&#039;s do this well, so even if you consider UTC timestamps, there can be extra differences by mutiples of 1 hour (or 30min). 
 
We had both issues in our production code. Things happen. 
 
Martin ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7142</wp:comment_id>
			<wp:comment_author><![CDATA[Nathanael Jones]]></wp:comment_author>
			<wp:comment_author_email>nathanael.jones@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>0.0.0.1</wp:comment_author_IP>
			<wp:comment_date>2011-11-02 08:18:03</wp:comment_date>
			<wp:comment_date_gmt>2011-11-02 12:18:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[True - RoughCompare assumes both the source file and destination file are on the same filesystem type. If you have part of the website on NTFS and part on FAT, you&#039;d definitely need to change the code. However, changing it to 2s acuracy may cause false matches, so I wouldn&#039;t suggest it unless you are actually using FAT.Regarding the time stamps, time zone issues are always important. I&#039;ve had an issue where the file came from a SAN with the time set in the future and ASP.NET threw an exception when I tried to use the value in theLast-modified: HTTP header.For the ImageResizer DiskCahce however, file times don&#039;t need to be accurate or use the right time zone for the disk cache to work properly - it really doesn&#039;t care - it only cares if the source file timestamp changes. If you use a broken file copy tool to move from one SAN to antoher, well, images may get regenerated. But there&#039;s really no way to fix that without introducing false matches, which happen. A few years back I used to (due to a typo) only compare the millisecond count, not minutes/hours, and I had multiple reports of cached files not updating. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>7141</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7143</wp:comment_id>
			<wp:comment_author><![CDATA[Protect Your Privacy! Use our free proxy to safeguard your online identity!]]></wp:comment_author>
			<wp:comment_author_email>LoewHeuer86@aol.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.decentproxy.com/browse.php?u=Oi8vd3d3LmZhY2Vib29rLmNvbS9hL2xhbmd1YWdlLnBocD9sPXB0X0JSJmdmaWQ9QVFEQ1p4WFJ6TU1SY3I5NSZyZWZpZD04&amp;b=13</wp:comment_author_url>
			<wp:comment_author_IP>68.81.197.51</wp:comment_author_IP>
			<wp:comment_date>2011-11-04 02:52:44</wp:comment_date>
			<wp:comment_date_gmt>2011-11-04 06:52:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello, Neat post. There is an issue along with your website in internet explorer, could check this? IE still is the market chief and a good part of other people will omit your wonderful writing because of this problem.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1320389564.6857";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:105:{s:15:"comment_post_ID";s:3:"163";s:14:"comment_author";s:75:"Protect Your Privacy! Use our free proxy to safeguard your online identity!";s:20:"comment_author_email";s:19:"LoewHeuer86@aol.com";s:18:"comment_author_url";s:141:"http://www.decentproxy.com/browse.php?u=Oi8vd3d3LmZhY2Vib29rLmNvbS9hL2xhbmd1YWdlLnBocD9sPXB0X0JSJmdmaWQ9QVFEQ1p4WFJ6TU1SY3I5NSZyZWZpZD04&b=13";s:15:"comment_content";s:218:"Hello, Neat post. There is an issue along with your website in internet explorer, could check this? IE still is the market chief and a good part of other people will omit your wonderful writing because of this problem.";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:12:"68.81.197.51";s:10:"user_agent";s:89:"Mozilla/5.0 (Windows; U; Windows NT 5.1; nl; rv:1.8.1.16) Gecko/20080702 Firefox/2.0.0.16";s:8:"referrer";s:57:"http://nathanaeljones.com/163/20-image-resizing-pitfalls/";s:4:"blog";s:25:"http://nathanaeljones.com";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:57:"http://nathanaeljones.com/163/20-image-resizing-pitfalls/";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:75:"Protect Your Privacy! Use our free proxy to safeguard your online identity!";s:10:"POST_email";s:19:"LoewHeuer86@aol.com";s:8:"POST_url";s:141:"http://www.decentproxy.com/browse.php?u=Oi8vd3d3LmZhY2Vib29rLmNvbS9hL2xhbmd1YWdlLnBocD9sPXB0X0JSJmdmaWQ9QVFEQ1p4WFJ6TU1SY3I5NSZyZWZpZD04&b=13";s:12:"POST_comment";s:218:"Hello, Neat post. There is an issue along with your website in internet explorer, could check this? IE still is the market chief and a good part of other people will omit your wonderful writing because of this problem.";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:3:"163";s:19:"POST_comment_parent";s:1:"0";s:26:"POST_akismet_comment_nonce";s:10:"b78bd4d41d";s:15:"SERVER_SOFTWARE";s:17:"Microsoft-IIS/7.0";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:21:"PHP_FCGI_MAX_REQUESTS";s:5:"10000";s:5:"PHPRC";s:18:"C:Program FilesPHP";s:15:"ALLUSERSPROFILE";s:13:"C:ProgramData";s:7:"APPDATA";s:50:"C:Windowssystem32configsystemprofileAppDataRoaming";s:11:"APP_POOL_ID";s:13:"ndj-wordpress";s:18:"CommonProgramFiles";s:27:"C:Program FilesCommon Files";s:12:"COMPUTERNAME";s:6:"DED793";s:7:"ComSpec";s:24:"C:Windowssystem32cmd.exe";s:16:"FP_NO_HOST_CHECK";s:2:"NO";s:12:"LOCALAPPDATA";s:48:"C:Windowssystem32configsystemprofileAppDataLocal";s:20:"NUMBER_OF_PROCESSORS";s:1:"2";s:2:"OS";s:10:"Windows_NT";s:4:"Path";s:306:"C:Program FilesPHP;C:Windowssystem32;C:Windows;C:WindowsSystem32Wbem;C:Program FilesMySQLMySQL Server 5.0bin;C:WindowsSystem32WindowsPowerShellv1.0;c:Program FilesMicrosoft SQL Server100ToolsBinn;c:Program FilesMicrosoft SQL Server100DTSBinn;c:Program FilesMicrosoft SQL Server100ToolsBinnVSShellCommon7IDE";s:7:"PATHEXT";s:53:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC";s:22:"PROCESSOR_ARCHITECTURE";s:3:"x86";s:20:"PROCESSOR_IDENTIFIER";s:46:"x86 Family 15 Model 4 Stepping 1, GenuineIntel";s:15:"PROCESSOR_LEVEL";s:2:"15";s:18:"PROCESSOR_REVISION";s:4:"0401";s:11:"ProgramData";s:13:"C:ProgramData";s:12:"ProgramFiles";s:15:"C:Program Files";s:12:"PSModulePath";s:45:"C:Windowssystem32WindowsPowerShellv1.0Modules";s:6:"PUBLIC";s:13:"C:UsersPublic";s:11:"SystemDrive";s:2:"C:";s:10:"SystemRoot";s:9:"C:Windows";s:4:"TEMP";s:13:"C:WindowsTEMP";s:3:"TMP";s:13:"C:WindowsTEMP";s:10:"USERDOMAIN";s:15:"MAXIMUMASPLOCAL";s:8:"USERNAME";s:7:"DED793$";s:11:"USERPROFILE";s:36:"C:Windowssystem32configsystemprofile";s:6:"windir";s:9:"C:Windows";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:19:"HTTP_CONTENT_LENGTH";s:3:"597";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:9:"HTTP_HOST";s:18:"nathanaeljones.com";s:12:"HTTP_REFERER";s:57:"http://nathanaeljones.com/163/20-image-resizing-pitfalls/";s:15:"HTTP_USER_AGENT";s:89:"Mozilla/5.0 (Windows; U; Windows NT 5.1; nl; rv:1.8.1.16) Gecko/20080702 Firefox/2.0.0.16";s:13:"DOCUMENT_ROOT";s:23:"C:Websitesndj-wordpress";s:15:"SCRIPT_FILENAME";s:43:"C:Websitesndj-wordpresswp-comments-post.php";s:20:"IIS_UrlRewriteModule";s:1:"1";s:12:"APPL_MD_PATH";s:16:"/LM/W3SVC/2/ROOT";s:18:"APPL_PHYSICAL_PATH";s:23:"C:Websitesndj-wordpress";s:9:"AUTH_TYPE";s:0:"";s:13:"AUTH_PASSWORD";s:0:"";s:9:"AUTH_USER";s:0:"";s:11:"CERT_COOKIE";s:0:"";s:10:"CERT_FLAGS";s:0:"";s:11:"CERT_ISSUER";s:0:"";s:17:"CERT_SERIALNUMBER";s:0:"";s:12:"CERT_SUBJECT";s:0:"";s:14:"CONTENT_LENGTH";s:3:"597";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:5:"HTTPS";s:3:"off";s:13:"HTTPS_KEYSIZE";s:0:"";s:19:"HTTPS_SECRETKEYSIZE";s:0:"";s:19:"HTTPS_SERVER_ISSUER";s:0:"";s:20:"HTTPS_SERVER_SUBJECT";s:0:"";s:11:"INSTANCE_ID";s:1:"2";s:18:"INSTANCE_META_PATH";s:11:"/LM/W3SVC/2";s:10:"LOCAL_ADDR";s:12:"66.29.219.39";s:10:"LOGON_USER";s:0:"";s:15:"PATH_TRANSLATED";s:43:"C:Websitesndj-wordpresswp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:11:"REMOTE_ADDR";s:12:"68.81.197.51";s:11:"REMOTE_HOST";s:12:"68.81.197.51";s:11:"REMOTE_PORT";s:4:"3999";s:11:"REMOTE_USER";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:11:"SERVER_NAME";s:18:"nathanaeljones.com";s:11:"SERVER_PORT";s:2:"80";s:18:"SERVER_PORT_SECURE";s:1:"0";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:3:"URL";s:21:"/wp-comments-post.php";s:14:"ORIG_PATH_INFO";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1320389563";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7144</wp:comment_id>
			<wp:comment_author><![CDATA[NuGet Package of Week #11 &#8211; ImageResizer enables clean, clear image resizing in ASP.NET | Computer Support Kansas City]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.supportkansascity.info/wp/computer-support/nuget-package-of-week-11-imageresizer-enables-clean-clear-image-resizing-in-asp-net/</wp:comment_author_url>
			<wp:comment_author_IP>184.173.226.75</wp:comment_author_IP>
			<wp:comment_date>2011-11-12 21:03:44</wp:comment_date>
			<wp:comment_date_gmt>2011-11-13 02:03:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] 20 Image Resizing Pitfalls [...] ]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7158</wp:comment_id>
			<wp:comment_author><![CDATA[20 Bild vergrößerungs- und verkleinerungs Gedanken | www.tamisch.com]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.tamisch.com/allgemein/gedanke/</wp:comment_author_url>
			<wp:comment_author_IP>95.110.229.34</wp:comment_author_IP>
			<wp:comment_date>2012-01-08 18:15:39</wp:comment_date>
			<wp:comment_date_gmt>2012-01-08 23:15:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] http://nathanaeljones.com/163/20-image-resizing-pitfalls/ [...] ]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1326064539.2452";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:95:{s:15:"comment_post_ID";s:3:"163";s:14:"comment_author";s:70:"20 Bild vergrößerungs- und verkleinerungs Gedanken | www.tamisch.com";s:18:"comment_author_url";s:41:"http://www.tamisch.com/allgemein/gedanke/";s:20:"comment_author_email";s:0:"";s:15:"comment_content";s:69:"[...] http://nathanaeljones.com/163/20-image-resizing-pitfalls/ [...]";s:12:"comment_type";s:8:"pingback";s:7:"user_ip";s:13:"95.110.229.34";s:10:"user_agent";s:50:"The Incutio XML-RPC PHP Library -- WordPress/3.3.1";s:8:"referrer";s:0:"";s:4:"blog";s:25:"http://nathanaeljones.com";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:57:"http://nathanaeljones.com/163/20-image-resizing-pitfalls/";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"failed";s:15:"SERVER_SOFTWARE";s:17:"Microsoft-IIS/7.0";s:11:"REQUEST_URI";s:11:"/xmlrpc.php";s:21:"PHP_FCGI_MAX_REQUESTS";s:5:"10000";s:5:"PHPRC";s:18:"C:Program FilesPHP";s:15:"ALLUSERSPROFILE";s:13:"C:ProgramData";s:7:"APPDATA";s:50:"C:Windowssystem32configsystemprofileAppDataRoaming";s:11:"APP_POOL_ID";s:13:"ndj-wordpress";s:18:"CommonProgramFiles";s:27:"C:Program FilesCommon Files";s:12:"COMPUTERNAME";s:6:"DED793";s:7:"ComSpec";s:24:"C:Windowssystem32cmd.exe";s:16:"FP_NO_HOST_CHECK";s:2:"NO";s:12:"LOCALAPPDATA";s:48:"C:Windowssystem32configsystemprofileAppDataLocal";s:20:"NUMBER_OF_PROCESSORS";s:1:"2";s:2:"OS";s:10:"Windows_NT";s:4:"Path";s:306:"C:Program FilesPHP;C:Windowssystem32;C:Windows;C:WindowsSystem32Wbem;C:Program FilesMySQLMySQL Server 5.0bin;C:WindowsSystem32WindowsPowerShellv1.0;c:Program FilesMicrosoft SQL Server100ToolsBinn;c:Program FilesMicrosoft SQL Server100DTSBinn;c:Program FilesMicrosoft SQL Server100ToolsBinnVSShellCommon7IDE";s:7:"PATHEXT";s:53:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC";s:22:"PROCESSOR_ARCHITECTURE";s:3:"x86";s:20:"PROCESSOR_IDENTIFIER";s:46:"x86 Family 15 Model 4 Stepping 1, GenuineIntel";s:15:"PROCESSOR_LEVEL";s:2:"15";s:18:"PROCESSOR_REVISION";s:4:"0401";s:11:"ProgramData";s:13:"C:ProgramData";s:12:"ProgramFiles";s:15:"C:Program Files";s:12:"PSModulePath";s:45:"C:Windowssystem32WindowsPowerShellv1.0Modules";s:6:"PUBLIC";s:13:"C:UsersPublic";s:11:"SystemDrive";s:2:"C:";s:10:"SystemRoot";s:9:"C:Windows";s:4:"TEMP";s:13:"C:WindowsTEMP";s:3:"TMP";s:13:"C:WindowsTEMP";s:10:"USERDOMAIN";s:15:"MAXIMUMASPLOCAL";s:8:"USERNAME";s:7:"DED793$";s:11:"USERPROFILE";s:36:"C:Windowssystem32configsystemprofile";s:6:"windir";s:9:"C:Windows";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:19:"HTTP_CONTENT_LENGTH";s:3:"300";s:17:"HTTP_CONTENT_TYPE";s:8:"text/xml";s:11:"HTTP_ACCEPT";s:3:"*/*";s:20:"HTTP_ACCEPT_ENCODING";s:29:"deflate;q=1.0, compress;q=0.5";s:9:"HTTP_HOST";s:18:"nathanaeljones.com";s:15:"HTTP_USER_AGENT";s:50:"The Incutio XML-RPC PHP Library -- WordPress/3.3.1";s:13:"DOCUMENT_ROOT";s:23:"C:Websitesndj-wordpress";s:15:"SCRIPT_FILENAME";s:33:"C:Websitesndj-wordpressxmlrpc.php";s:20:"IIS_UrlRewriteModule";s:1:"1";s:12:"APPL_MD_PATH";s:16:"/LM/W3SVC/2/ROOT";s:18:"APPL_PHYSICAL_PATH";s:23:"C:Websitesndj-wordpress";s:9:"AUTH_TYPE";s:0:"";s:13:"AUTH_PASSWORD";s:0:"";s:9:"AUTH_USER";s:0:"";s:11:"CERT_COOKIE";s:0:"";s:10:"CERT_FLAGS";s:0:"";s:11:"CERT_ISSUER";s:0:"";s:17:"CERT_SERIALNUMBER";s:0:"";s:12:"CERT_SUBJECT";s:0:"";s:14:"CONTENT_LENGTH";s:3:"300";s:12:"CONTENT_TYPE";s:8:"text/xml";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:5:"HTTPS";s:3:"off";s:13:"HTTPS_KEYSIZE";s:0:"";s:19:"HTTPS_SECRETKEYSIZE";s:0:"";s:19:"HTTPS_SERVER_ISSUER";s:0:"";s:20:"HTTPS_SERVER_SUBJECT";s:0:"";s:11:"INSTANCE_ID";s:1:"2";s:18:"INSTANCE_META_PATH";s:11:"/LM/W3SVC/2";s:10:"LOCAL_ADDR";s:12:"66.29.219.39";s:10:"LOGON_USER";s:0:"";s:15:"PATH_TRANSLATED";s:33:"C:Websitesndj-wordpressxmlrpc.php";s:12:"QUERY_STRING";s:0:"";s:11:"REMOTE_ADDR";s:13:"95.110.229.34";s:11:"REMOTE_HOST";s:13:"95.110.229.34";s:11:"REMOTE_PORT";s:5:"64556";s:11:"REMOTE_USER";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:11:"SCRIPT_NAME";s:11:"/xmlrpc.php";s:11:"SERVER_NAME";s:18:"nathanaeljones.com";s:11:"SERVER_PORT";s:2:"80";s:18:"SERVER_PORT_SECURE";s:1:"0";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.0";s:3:"URL";s:11:"/xmlrpc.php";s:14:"ORIG_PATH_INFO";s:11:"/xmlrpc.php";s:8:"PHP_SELF";s:11:"/xmlrpc.php";s:12:"REQUEST_TIME";s:10:"1326064535";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7166</wp:comment_id>
			<wp:comment_author><![CDATA[Jason Weber]]></wp:comment_author>
			<wp:comment_author_email>jasonpaulweber@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.ussvision.com</wp:comment_author_url>
			<wp:comment_author_IP>99.34.170.136</wp:comment_author_IP>
			<wp:comment_date>2012-01-22 01:11:34</wp:comment_date>
			<wp:comment_date_gmt>2012-01-22 06:11:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I&#039;m not a programmer, so I realize that this is probably a really dumb question, but you don&#039;t have any information on it, so I&#039;ll ask.  What is the objective and purpose of this?  In other words, on my company&#039;s website, which is asp.net 4.0, I have an image that&#039;s 400 x 200, for instance, and I want it to remain that size.   How would your invention help?  Would it help only if you don&#039;t want to resize the image?   Or are you talking about compressing and optimizing so it&#039;s less megabytes?  Do you recommend this only for people who make websites or are starting a new website, or could someone who already has an established website benefit to?   ]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Design of an Image Resizing Module</title>
		<link>http://nathanaeljones.com/196/design-of-an-image-resizing-module/</link>
		<pubDate>Tue, 26 May 2009 16:00:28 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/?p=196</guid>
		<description></description>
		<content:encoded><![CDATA[<p>In this sequel to  <a href="/11191_20_Image_Resizing_Pitfalls">20 Image Resizing Pitfalls</a>, I'm outlining the version 2 architecture of my image resizing module, and including the source code for the HttpModule. You can download the <a href="http://imagereisizing.net">source code for version 3 at imageresizing.net</a>.

</p>
<p>Read <a href="/11191_20_Image_Resizing_Pitfalls">20 Image Resizing Pitfalls</a> first (part 1).  It explains why you need an HttpModule instead of an HttpHandler, why disk caching is a requirement, and why you always want to let IIS serve static files.</p>

<p>This article gives an architectural overview of my image resizer (version 2). The design has evolved several times as my needs grew, but I think the design has now matured to be very simple, modular, and extensible.</p>

<h3>Request flow</h3>
<ol class="normallist">
<li>Only intercept image requests that include certain querystring commands. Leave other requests intact. </li>
<li>Check to see if the resized image for the request URL is already cached. If cached and still up-to-date with the source file, goto step 4.</li>
<li>If not already cached, process the image and cache it. </li>
<li>Rewrite the request (not redirect) to the cached file. This will allow IIS to serve the file with full HTTP support (range requests, caching, not-modified support, etc).</li>
</ol>

<h3>A few other goals</h3>
<ol class="normallist">
<li>Allow custom syntaxes like /resize(50,50)/image.jpg or ?theme=smallthumb to be easily added without bloating the core module. </li>
<li>Permit or disable filename rewriting from Web.config. /resize(50,50)/ would be path rewriting, wheras ?theme=smallthumb would be just rewriting the querystring. This configurability is important, since path rewriting could make subfolder-based web.config authorization settings on image files have no effect.</li>
<li>Allow client caching time to be configurable. This will keep requests down, since clients won't check for updates until the specified amount of time expires.</li>
<li>Make both server-side memory and disk  caching invalidate when the source file changes.</li>
<li>Allow a easily extensible and large set of commands, affecting the cropping/sizing, visual effects, color choices/border/padding, and image output format/compression.</li>
<li>Prevent DOS attacks by limiting the disk cache to a configurable number of images.</li>
<li>Allow easy watermarking or post-processing of resized images</li>

</ol>
<p> <span style="font-weight:bold;color:red">This code is outdated by 2+ years. Please reference the <a href="http://imageresizing.net/">source code for version 3 instead.</a></p>

<h2>Overview of classes</h2>
<p>With these goals in mind, I found it optimal to segment the logic into the following classes. While you may question my decision to split querystring parsing into 4 classes, it resulted in much cleaner code, and a much more usable interface for image manipulation from other classes. </p>

<ul class="normallist">

<li><strong>InterceptModule</strong><br />
IHttpModule that checks for relevant requests during PostAuthorizeRequest, caches the ImageManger-proccessed images using DiskCache, and rewrites the request to the cached file. It also sets HTTP caching headers later in PreSendRequestHeaders. The disk-cached filename is an SHA256, base16 encoded hash of the request URL. Although the image is coming from a different file, the user never sees the URL of the cached file - the original filename is maintained.</li>

<li><strong>DiskCache</strong><br />

Completely abstracts away disk caching, cleanup, and the associated threading issues. InterceptModule calls method <em>UpdateCachedVersionIfNeeded(sourceFile,cachedFile, delegate updateMethod, int fileLockTimeout)</em> with   <em>ImageManager.getBestInstance().BuildImage(sourcePath, cachedPath, queryString);</em> as the contents of the delegate. DiskCache performs the modified date checks, cache cleanup, and thread locking to prevent the same image from being resizied by two different threads at the same time (it happens frequently!). The delegate is only executed if the cached file needs to be created or updated.</li>


<li><strong>CustomFolders</strong><br />
Exposes a single method,  static string processPath(string filePath, NameValueCollection q). This allows both URL rewriting and modifications to the querystring, such as /resize(w,h)/ syntax. InterceptModule simply calls this once prior to checking the querystring for valid commands.</li>

<li><strong>ImageManager</strong><br />

 exposes several overloads of a method called BuildImage() which allow both querystring and settings class configuration, and both bitmap and filename source and output. While BuildImage performs all the actual GDI calls, the querystring parsing, mathematics, and image writing are handled by other classes below.</li>

<li><strong>ResizeSettings</strong>(querystring)<br />
 Accepts a single NameValueCollection (Querystring) as the constructor argument. Stretch, crop, scale, flip, sourceFlip, width, height, maxwidth, and maxheight are parsed into member variables. Exposes a  <em>ImageSizingData CalculateSizingData(SizeF originalImageSize, SizeF maxBounds)</em> method that handles all mathematics. ImageSizingData includes the source rectangle on the image to copy from, the destination polygon for the image data, and a polygon that includes any whitespace.</li>

<li><strong>ImageOutputSettings</strong>(querystring) <br />

Parses the format, colors, and quality commands. It also exposes a SaveImage(Stream s, Image i) method that handles the writing of the various image types based on the querystring arguments. Static methods for saving images are also available.</li>

<li><strong>ImageSettings</strong>(querystring) <br />
Parses the bgcolor, paddingWidth, paddingColor, borderWidth, and borderColor commands. BuildImage() uses this data when drawing the image.</li>

<li><strong>WatermarkSettings</strong>(querystring)<br /> allows for custom drawing on images. It exposes a  <em>ModifySettings(ResizeSettings rs, ImageSettings opts, ImageFilter adjustments, ImageOutputSettings ios)</em> method for adjusting settings prior to resizing, and a <em>Process(Bitmap b, Graphics g)</em> method for post-processing of resized images.</li>

</ul>
<p> </p>

<h2>InterceptModule code</h2>
<p>I hope this overview is clear enough - if not, please leave a question below. Understanding the design, the source code for InterceptModule should now make sense. Thankfully, this is one of the shortest classes, but it should help you write your own HttpModule. I've removed the class declaration, imports, and profiling code for clarity. The original source code comments explain everything pretty clearly.</p>

<pre name="code" class="brush:c-sharp">
/// &lt;summary&gt;
/// This is where we filter requests and intercet those that want resizing performed.
/// We first check for image extensions... 
/// If it is one, then we run it through the CustomFolders method to see if if there is custom resizing for it..
/// If there still aren't any querystring params after that, then we ignore the request.
/// If the file doesn't exist, we also ignore the request. They're going to cause a 404 anyway.
/// 
/// &lt;/summary&gt;

/// &lt;param name=&quot;sender&quot;&gt;&lt;/param&gt;
/// &lt;param name=&quot;e&quot;&gt;&lt;/param&gt;
protected virtual void CheckRequest_PostAuthorizeRequest(object sender, EventArgs e)
{
	//Get the http context, and only intercept requests where the Request object is actually populated
	HttpApplication app = sender as HttpApplication;
	if (app != null &amp;&amp; app.Context != null &amp;&amp; app.Context.Request != null)
	{
		
		//Is this an image request? Checks the file extension for .jpg, .png, .tiff, etc.
		if (ImageOutputSettings.IsAcceptedImageType(app.Context.Request.FilePath))
		{
			//Init the caching settings. These only take effect if the image is actually resized
			//CustomFolders.cs can override these during processPath
			app.Context.Items[&quot;ContentExpires&quot;] = DateTime.Now.AddHours(24); //Default to 24 hours
			string cacheSetting = ConfigurationManager.AppSettings[&quot;ImageResizerClientCacheMinutes&quot;];
			if (!string.IsNullOrEmpty(cacheSetting)){
				double f;
				if (double.TryParse(cacheSetting,out f)){
					if (f &gt;= 0)
						app.Context.Items[&quot;ContentExpires&quot;] = DateTime.Now.AddMinutes(f);
					else
						app.Context.Items[&quot;ContentExpires&quot;] = null;
				}
			}
			
			//Copy the querystring
			NameValueCollection q = new NameValueCollection(app.Context.Request.QueryString);

			//Call CustomFolders.cs to do resize(w,h,f)/ parsing and any other custom syntax.
			//The real virtual path should be returned (with the resize() stuff removed)
			//And q should be populated with the querystring values
			string basePath = CustomFolders.processPath(app.Context.Request.Path, q);

			
			//If the path has changed, this will circumvent the URL auth system.
			//Make sure the user has explicity allowed it through web.config
			if (!basePath.Equals(app.Context.Request.Path))
			{
				//Make sure the resize() notation is allowed.
				string allow = ConfigurationManager.AppSettings[&quot;AllowURLRewriting&quot;];
				if (string.IsNullOrEmpty(allow)) allow =ConfigurationManager.AppSettings[&quot;AllowFolderResizeNotation&quot;];
				if (string.IsNullOrEmpty(allow) || allow.Equals(&quot;false&quot;, StringComparison.OrdinalIgnoreCase)){
					return; //Skip the request
				}
				//Prevent access to the /imagecache/ directory (URL auth won't be protecting it now)
				if (new yrl(basePath).Local.StartsWith(DiskCache.GetCacheDir(), StringComparison.OrdinalIgnoreCase))
				{
					throw new HttpException(403, &quot;Access denied to image cache folder.&quot;);
				}
			}
			//See if resizing is wanted (i.e. one of the querystring commands is present).
			//Called after processPath so processPath can add them if needed.
			//Checks for thumnail, format, width, height, maxwidth, maxheight and a lot more
			if (ImageManager.getBestInstance().HasResizingDirective(q))
			{
				//Build a URL using the new basePath and the new Querystring q
				yrl current = new yrl(basePath);
				current.QueryString = q;

				//If the file exists, resize it
				if (current.FileExists)  
					ResizeRequest(app.Context,current);
				
			}
		}
	}
}



/// &lt;summary&gt;

/// Builds the physical path for the cached version, using the hashcode of the normalized URL.
/// &lt;/summary&gt;
/// &lt;param name=&quot;request&quot;&gt;&lt;/param&gt;
/// &lt;returns&gt;&lt;/returns&gt;
protected string getCachedVersionFilename(yrl request)
{
	string dir = DiskCache.GetCacheDir();
	if (dir == null) return null;
	//Build the physical path of the cached version, using the hashcode of the normalized URL.
        //We don't use String.GetHashCode(), since it returns a 32-bit integer. Chances of a hash collision are low, but possible.
        // So, we use a 256-bit hash instead.
	SHA256 h = System.Security.Cryptography.SHA256.Create();
	byte[] hash = h.ComputeHash(new System.Text.UTF8Encoding().GetBytes(request.ToString().ToLower()));
	//Can't use base64 hash... filesystem has case-insensitive lookup.
	//Would use base32, but too much code to bloat the resizer. Simple base16 encoding is fine
	return dir.TrimEnd('/', '\\') + &quot;\\&quot; + Base16Encode(hash) + &quot;.&quot; + new ImageOutputSettings(request).GetFinalExtension();
}
/// &lt;summary&gt;

/// Returns a lowercase hexadecimal encoding of the specified binary data
/// &lt;/summary&gt;
protected string Base16Encode(byte[] bytes)
{
	StringBuilder sb = new StringBuilder(bytes.Length * 2);
	foreach (byte b in bytes)
		sb.Append(b.ToString(&quot;x&quot;).PadLeft(2, '0'));
	return sb.ToString();
}


/// &lt;summary&gt;
/// Generates the resized image to disk (if needed), then rewrites the request to that location.
/// Perform 404 checking before calling this method. Assumes file exists.
/// Called during PostAuthorizeRequest
/// &lt;/summary&gt;
/// &lt;param name=&quot;r&quot;&gt;&lt;/param&gt;
/// &lt;param name=&quot;extension&quot;&gt;&lt;/param&gt;

protected virtual void ResizeRequest(HttpContext context, yrl current)
{
	//This is where the cached version goes
	string cachedFile = getCachedVersionFilename(current);

	//Disk caching is good for images because they change much less often than the application restarts.

	//Make sure the resized image is in the disk cache.
	bool succeeded = DiskCache.UpdateCachedVersionIfNeeded(current.Local, cachedFile,
		delegate(){

			//This runs if the update is needed. This delegate is preventing from running in more
			//than one thread at a time for the specified source file (current.Local)
			ImageManager.getBestInstance().BuildImage(current.Local, cachedFile, current.QueryString);
		},30000);

	//If a co-occurring resize has the file locked for more than 30 seconds, quit with an error.
	if (!succeeded)
		throw new ApplicationException(&quot;Failed to acquire a lock on file \&quot;&quot; + current.Virtual + 
                                              &quot;\&quot; within 30 seconds. Image resizing failed.&quot;);
	

	//Get domain-relative path of cached file.
	string virtualPath = yrl.GetAppFolderName().TrimEnd(new char[] { '/' }) + &quot;/&quot; + yrl.FromPhysicalString(cachedFile).ToString();

	//Add content-type headers (they're not added correctly when the source URL extension is wrong)
	//Determine content-type string;
	string contentType = new ImageOutputSettings(current).GetContentType();
	
	context.Items[&quot;FinalContentType&quot;] = contentType;
	context.Items[&quot;FinalCachedFile&quot;] = cachedFile;

	//Rewrite to cached, resized image.
	context.RewritePath(virtualPath, false);
}
/// &lt;summary&gt;

/// We don't actually send the data - but we still want to control the headers on the data.
/// PreSendRequestHeaders allows us to change the content-type and cache headers at excatly the last
/// second. We populate the headers from context.Items[&quot;FinalContentType&quot;],
/// context.Items[&quot;ContentExpires&quot;], and context.Items[&quot;FinalCachedFile&quot;].
/// This also indirectly enables server-side mem caching. (HttpCacheability.Public does it)
/// We set the file dependency to FinalCachedFile so changes are update quickly server-side
/// - however, clients will not check for updates until ContentExpires occurs.
///  
/// &lt;/summary&gt;
/// &lt;param name=&quot;sender&quot;&gt;&lt;/param&gt;
/// &lt;param name=&quot;e&quot;&gt;&lt;/param&gt;

protected void context_PreSendRequestHeaders(object sender, EventArgs e)
{
	HttpApplication app = sender as HttpApplication;
	HttpContext context = (app != null) ? app.Context : null;
	//Check to ensure the context and Response is in good shape (it's needed)
	if (context != null &amp;&amp; context.Items != null &amp;&amp; context.Items[&quot;FinalContentType&quot;] != null 
                          &amp;&amp; context.Items[&quot;FinalCachedFile&quot;] != null)
	{
		//Clear previous output
		//context.Response.Clear();
		context.Response.ContentType = context.Items[&quot;FinalContentType&quot;].ToString();
		//Add caching headers
		context.Response.AddFileDependency(context.Items[&quot;FinalCachedFile&quot;].ToString());

		//It's not UTC - server time zone.
		if (context.Items[&quot;ContentExpires&quot;] != null)
			context.Response.Cache.SetExpires((DateTime)context.Items[&quot;ContentExpires&quot;]);

		//Enables in-memory caching
		context.Response.Cache.SetCacheability(HttpCacheability.Public);
		context.Response.Cache.SetLastModifiedFromFileDependencies();
		context.Response.Cache.SetValidUntilExpires(false);
	}

}

</pre>

<p>I'm sure a lot of people will think I'm nuts for posting the source code to the main class of my image resizer, 
but I know that this will help a lot of people.  </p> 
<p>Update (May 27, 2011): You can now download the <a href="http://imageresizing.net/">source code for Version 3</a>, and the <a href="http://imageresizing.net/releases/2-8">latest source code for Version 2</a>. 
<p>Based on the response I get to this article, I may continue with additional parts. I would like to cover the math behind scaling and cropping, the GDI bugs, and maybe even image output/compression. </p>

<p>Hope this helps!<br />Nathanael</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[In this sequel to 20 Image Resizing Pitfalls, I'm outlining the architecture of my image resizing module, and including the source code for the HttpModule (but not the supporting classes).]]></excerpt:encoded>
		<wp:post_id>196</wp:post_id>
		<wp:post_date>2009-05-26 12:00:28</wp:post_date>
		<wp:post_date_gmt>2009-05-26 16:00:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>design-of-an-image-resizing-module</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="image-resizing"><![CDATA[Image Resizing]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>url</wp:meta_key>
			<wp:meta_value><![CDATA[11241_Design_of_an_Image_Resizing_Module]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>143</wp:comment_id>
			<wp:comment_author><![CDATA[Jonesy]]></wp:comment_author>
			<wp:comment_author_email>mrneiljones@googlemail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.scarletpartnership.co.uk</wp:comment_author_url>
			<wp:comment_author_IP>94.192.116.217</wp:comment_author_IP>
			<wp:comment_date>2009-11-06 06:17:51</wp:comment_date>
			<wp:comment_date_gmt>2009-11-06 11:17:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nathanael,

What do you think of this in-memory Database solution (VB)? It's damn fast:
(Core is just a helper module that returns a blob from an SQL server table)


                Dim arrImage As Byte() = Core.data_select_image("select blobImage from tblMyTable where intMyTablePK = " &amp; context.Request.QueryString("imageID"), "blobImage", context.Server.MapPath("."))
                
                If Not arrImage Is Nothing Then
                    Dim bmp As Bitmap = CType(Bitmap.FromStream(New MemoryStream(arrImage)), Bitmap)
                    Dim output As Bitmap = New Bitmap(bmp, New Size(100, 100))
                    context.Response.Clear()
                    context.Response.ContentType = "image/jpeg"
                    output.Save(context.Response.OutputStream, ImageFormat.Jpeg)
                    context.Response.End()
                End If

Obviously we can pass in the thumbnail dimensions, but it's fine for most users needs (20 - 100 images on a page for example). The code lives in a handler page for speed - getimage.ashx or whatever.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>170</wp:comment_id>
			<wp:comment_author><![CDATA[Nathanael Jones]]></wp:comment_author>
			<wp:comment_author_email>nathanael.jones@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>216.205.223.41</wp:comment_author_IP>
			<wp:comment_date>2009-11-09 09:09:15</wp:comment_date>
			<wp:comment_date_gmt>2009-11-09 14:09:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm sure it is very fast when you only are requesting one image at a time. I suggest trying it with a large photo (say a 5MB jpeg) and placing 100 images on a page to help simulate concurrent users.
Make sure to watch your w3p.exe memory use during that time.

Have you read the article on image resizing pitfalls? I don't want to repeat anything that you've already read.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>143</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>456</wp:comment_id>
			<wp:comment_author><![CDATA[luc]]></wp:comment_author>
			<wp:comment_author_email>l.perussault.diallo@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>78.243.213.82</wp:comment_author_IP>
			<wp:comment_date>2010-03-06 19:16:54</wp:comment_date>
			<wp:comment_date_gmt>2010-03-06 19:16:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[great post! ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>5426</wp:comment_id>
			<wp:comment_author><![CDATA[Random]]></wp:comment_author>
			<wp:comment_author_email>cipherlad@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>140.194.192.100</wp:comment_author_IP>
			<wp:comment_date>2010-12-15 12:46:13</wp:comment_date>
			<wp:comment_date_gmt>2010-12-15 17:46:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Loved the 20 tips, and the module outline here.  Ineresting use of the delegate to lock the source file, I wouldn&#039;t have thought of that. 
 
What is your yrl object?   You don&#039;t mention it in the article. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>5428</wp:comment_id>
			<wp:comment_author><![CDATA[Nathanael Jones]]></wp:comment_author>
			<wp:comment_author_email>nathanael.jones@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>166.205.13.173</wp:comment_author_IP>
			<wp:comment_date>2010-12-23 05:04:11</wp:comment_date>
			<wp:comment_date_gmt>2010-12-23 10:04:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[yrl is a mutable instance of a app-relative URL. It abstracts a ton of the work that usually goes into handling virtual paths correctly. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>5426</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>5471</wp:comment_id>
			<wp:comment_author><![CDATA[20 Image Resizing Pitfalls&nbsp;|&nbsp;Nathanael Jones]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://nathanaeljones.com/163/20-image-resizing-pitfalls/</wp:comment_author_url>
			<wp:comment_author_IP>66.29.219.39</wp:comment_author_IP>
			<wp:comment_date>2011-05-28 08:08:08</wp:comment_date>
			<wp:comment_date_gmt>2011-05-28 12:08:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Part 2 explains the 2009 architecture of the ImageResizer version 2. It&#039;s a bit outdated, but probably still helpful. [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1306792279.8985";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Demo Version of Image Resizing Module</title>
		<link>http://nathanaeljones.com/199/demo-version-of-image-resizing-module/</link>
		<pubDate>Thu, 21 May 2009 16:00:35 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://66.29.219.39/?p=199</guid>
		<description></description>
		<content:encoded><![CDATA[<div style="padding:10px; color:red; font-size:11pt; border:1px solid red; margin-bottom:1.5em;">This is regarding a depreciated version. <a href="http://imageresizing.net/">V3 can be downloaded free of charge</a>. <a href="http://imageresizing.net/docs/2to3/">Click here for the migration guide</a></div>

I've received many requests for a 'trial' of the <a href="/products/asp-net-image-resizer/">image resizer</a>. This demo version is fully-functional, but watermarks 50% of the generated images with "Unlicensed". Another note: the trial version includes supports resizing animated GIFs. That plug-in isn't included in the default version; contact me for details.

Installation is the <a href="/11141_Image_Resizer_Installation">same as for the full version</a>.

<a onclick="javascript:pageTracker._trackPageview('/download/resizertrial');" href="/wp-content/uploads/2010/11/ImageResizerTrial2.6-nov-11-20101.zip">Download Trial version and sample project (2.5MB)</a>



When you upgrade to the full version, remember to delete the <em>imagecache</em> directory, or you will continue to see the word "Unlicensed" on old pictures.]]></content:encoded>
		<excerpt:encoded><![CDATA[I've received many requests for a 'trial' version of the image resizer. This demo version is fully-functional, but watermarks 50% of the generated images with "Unlicensed".]]></excerpt:encoded>
		<wp:post_id>199</wp:post_id>
		<wp:post_date>2009-05-21 12:00:35</wp:post_date>
		<wp:post_date_gmt>2009-05-21 16:00:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>demo-version-of-image-resizing-module</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="image-resizer"><![CDATA[image resizer]]></category>
		<category domain="post_tag" nicename="image-resizing"><![CDATA[Image Resizing]]></category>
		<category domain="category" nicename="image-resizing"><![CDATA[Image Resizing]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>url</wp:meta_key>
			<wp:meta_value><![CDATA[11231_demo_version_of_image_resizing_module]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>328</wp:comment_id>
			<wp:comment_author><![CDATA[Praveen]]></wp:comment_author>
			<wp:comment_author_email>impraveen26@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.projecthelpline.com</wp:comment_author_url>
			<wp:comment_author_IP>122.173.205.41</wp:comment_author_IP>
			<wp:comment_date>2009-11-17 02:58:27</wp:comment_date>
			<wp:comment_date_gmt>2009-11-17 07:58:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Plz send me source code for croping image in asp.net]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>336</wp:comment_id>
			<wp:comment_author><![CDATA[Nathanael Jones]]></wp:comment_author>
			<wp:comment_author_email>nathanael.jones@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>216.205.223.34</wp:comment_author_IP>
			<wp:comment_date>2009-11-17 10:26:26</wp:comment_date>
			<wp:comment_date_gmt>2009-11-17 15:26:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You can download it here: <a href="http://nathanaeljones.com/products/asp-net-image-resizer/" rel="nofollow">http://nathanaeljones.com/products/asp-net-image-resizer/</a>. 
Let me know if you have any questions about it.

Best Regards,
Nathanael]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>328</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>464</wp:comment_id>
			<wp:comment_author><![CDATA[KubbaLight]]></wp:comment_author>
			<wp:comment_author_email>createyourlife@live.com</wp:comment_author_email>
			<wp:comment_author_url>http://createyourlife.community.officelive.com</wp:comment_author_url>
			<wp:comment_author_IP>71.188.230.123</wp:comment_author_IP>
			<wp:comment_date>2010-05-27 09:03:24</wp:comment_date>
			<wp:comment_date_gmt>2010-05-27 13:03:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Sounds like what I have been for.  Thanks for the trial. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>5179</wp:comment_id>
			<wp:comment_author><![CDATA[jon eastwood]]></wp:comment_author>
			<wp:comment_author_email>jon@spiralsites.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>78.105.127.50</wp:comment_author_IP>
			<wp:comment_date>2010-11-28 11:29:34</wp:comment_date>
			<wp:comment_date_gmt>2010-11-28 16:29:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I want to use this on not only asp.net sites but I have some legacy ASP sites I would like to use it on. Is it possible, do I simply register the .dll. 
 
Also will it run a a 64 bit os such as windows 2003 server web edition as well as windows server 2008 R2? 
 
Thanks ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>5427</wp:comment_id>
			<wp:comment_author><![CDATA[Nathanael Jones]]></wp:comment_author>
			<wp:comment_author_email>nathanael.jones@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>166.205.13.173</wp:comment_author_IP>
			<wp:comment_date>2010-12-23 05:01:10</wp:comment_date>
			<wp:comment_date_gmt>2010-12-23 10:01:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yes, you can use it on both. You only need to register the DLL to call the methods directly - it isn&#039;t needed for the URL resizing to work. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>5179</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>5436</wp:comment_id>
			<wp:comment_author><![CDATA[jerry]]></wp:comment_author>
			<wp:comment_author_email>jerry2@gawab.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>90.157.194.75</wp:comment_author_IP>
			<wp:comment_date>2011-02-22 01:14:34</wp:comment_date>
			<wp:comment_date_gmt>2011-02-22 06:14:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I&#039;d like to use the module for modifying the images from ASP, is this possible? Can I use it as object? Where are the command references for using it in ASP classic? Thanx. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>5438</wp:comment_id>
			<wp:comment_author><![CDATA[Nathanael Jones]]></wp:comment_author>
			<wp:comment_author_email>nathanael.jones@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>74.132.4.12</wp:comment_author_IP>
			<wp:comment_date>2011-03-05 06:26:16</wp:comment_date>
			<wp:comment_date_gmt>2011-03-05 11:26:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[For images located on the filesystem, you can do everything via the querystring. 
Thus, you can use exactly the same documentation as when using ASP.NET. 
You will need to enable ASP.NET on your ASP site for the HttpModule to function, however. 
 
You can also use it as a COM+ object, but you&#039;ll have to reference the XML documentation included with the source code. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>5436</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Version 2.1b released!</title>
		<link>http://nathanaeljones.com/438/version-2-1b-released/</link>
		<pubDate>Fri, 13 Nov 2009 23:36:06 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://nathanaeljones.com/?p=438</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>Better performance, better installation, better samples, more features!</strong>
<h2 style="font-size: 1.8em; margin-top: 0px; margin-right: 0px; margin-bottom: 0.8em; margin-left: 0px; color: #262625; letter-spacing: -1px; padding: 0px;">Fixed</h2>
<ul>
	<li>I finally tracked down a simple, yet elusive performance bug  that was particularly problematic for users with many thousands of images. Performance should be much better for everyone now, so upgrading is highly suggested.  This bug was introduced with version 2.0., and caused a filesystem listing hit for each request.</li>
	<li>All requests are now forced to pass through the UrlAuthorizationModule now. Previously, any URL rewriting (like customfolders.cs) caused URL auth rules to be circumvented. This was documented behavior, but a secure solution has now been found.</li>
</ul>
<h2 style="font-size: 1.8em; margin-top: 0px; margin-right: 0px; margin-bottom: 0.8em; margin-left: 0px; color: #262625; letter-spacing: -1px; padding: 0px;">Added</h2>
<ul>
	<li>New users will find it much easier to get things working - <strong>Messing with IIS is now completely optional! :D :D</strong>
Instead of writing  <em>"image.jpg?width=500"</em> as you normally would, type <em>"image.jpg</em><strong><em>.axd</em></strong><em>?width=500"</em>. If you use the new syntax, you won't be forced to configure wildcard mapping on IIS6/IIS7 classic.
<strong>Both syntaxes will be supported in the future.
<span style="font-weight: normal;">The suggested extension is .axd, but that can be changed or disabled using the ResizeExtension application setting.</span>
</strong></li>
	<li>Dithering support added! You can dither an 8-bit image using the <strong>?dither=</strong> command. You can specify a dither percent, "true", or "4pass".</li>
	<li>UploadSample  project (in VB). Resizing images as they are uploaded is now trivally easy. ImageManager.BuildImage now accepts an HttpPostedFile instance for resizing.</li>
	<li>DisableCustomQuantization setting to allow GIFs to be generated on servers where the Marshal class is prohibited.</li>
	<li>PerfTests project to run benchmarks on the image resizing and encoding code.</li>
</ul>
<h2 style="margin-top: 0px; margin-right: 0px; margin-bottom: 0.8em; margin-left: 0px; color: #262625; font-size: 1.8em; letter-spacing: -1px; padding: 0px; border: 0px initial initial;">Upgrade proccess</h2>
<ol style="padding-top: 0px; padding-right: 0px; padding-bottom: 1.2em; padding-left: 2em; margin: 0px; border: 0px initial initial;">
	<li style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: decimal; list-style-position: initial; list-style-image: initial; padding: 0px; border: 0px initial initial;">Replace the old files with the new files from the ImageResizer folder. If you are using the .DLL, replace the DLL in the bin folder. Keep your old CustomFolders.cs and WatermarkSettings.cs files if you have modified them.</li>
	<li style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: decimal; list-style-position: initial; list-style-image: initial; padding: 0px; border: 0px initial initial;">Delete the /imagecache directory.</li>
	<li style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 20px; list-style-type: decimal; list-style-position: initial; list-style-image: initial; padding: 0px; border: 0px initial initial;">Insert/change the following application settings in web.config if you want to use the new syntax.</li>
</ol>
<blockquote>
<pre>&lt;add key="ResizeExtension" value=".axd"/&gt;</pre>
<pre>&lt;add key="AllowURLRewriting" value="true"/&gt;</pre>
</blockquote>
If you are upgrading from 1.2, <a href="http://nathanaeljones.com/159/image-resizer-2-0-upgrade-notes/">follow the 1.2-&gt;2.0 upgrade instructions first.</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[Better performance, better installation, better samples, more features! Installation has been simplified to copying and pasting. ]]></excerpt:encoded>
		<wp:post_id>438</wp:post_id>
		<wp:post_date>2009-11-13 18:36:06</wp:post_date>
		<wp:post_date_gmt>2009-11-13 23:36:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>version-2-1b-released</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="asp-net"><![CDATA[ASP.NET]]></category>
		<category domain="category" nicename="image-resizing"><![CDATA[Image Resizing]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>310</wp:comment_id>
			<wp:comment_author><![CDATA[Bubba]]></wp:comment_author>
			<wp:comment_author_email>bubba@aol.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>72.179.49.72</wp:comment_author_IP>
			<wp:comment_date>2009-11-15 10:40:47</wp:comment_date>
			<wp:comment_date_gmt>2009-11-15 15:40:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I have the paid version.   I have a virtual directory of photos that are used for three diffrent websites.   There use to be directions on how to make that work in the comment section.   Do you have an area to support that still?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>313</wp:comment_id>
			<wp:comment_author><![CDATA[Nathanael Jones]]></wp:comment_author>
			<wp:comment_author_email>nathanael.jones@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>216.205.223.41</wp:comment_author_IP>
			<wp:comment_date>2009-11-16 07:16:24</wp:comment_date>
			<wp:comment_date_gmt>2009-11-16 12:16:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm in the proccess of getting comments moved over to the new site - it's non-trivial. 

Virtual directories should work fine if you have NTFS permissions set properly on them. If you have trouble, you can always turn a virtual folder into a virtual application, add the sample web.config to it, and put the .dll inside the /bin folder.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>310</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>347</wp:comment_id>
			<wp:comment_author><![CDATA[Josh]]></wp:comment_author>
			<wp:comment_author_email>josh@selarom.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.selarom.com</wp:comment_author_url>
			<wp:comment_author_IP>64.88.202.3</wp:comment_author_IP>
			<wp:comment_date>2009-11-18 11:06:51</wp:comment_date>
			<wp:comment_date_gmt>2009-11-18 16:06:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm getting a CRC error when trying to unzip the file using altools. I haven't tried it on another machine, will do that tonight and report back.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>433</wp:comment_id>
			<wp:comment_author><![CDATA[Bubba]]></wp:comment_author>
			<wp:comment_author_email>bubba@aol.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>72.177.60.90</wp:comment_author_IP>
			<wp:comment_date>2009-11-26 12:05:07</wp:comment_date>
			<wp:comment_date_gmt>2009-11-26 17:05:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Is the upgrade from 2.0 to 2.1 free?   If so how does one download it without going to paypal?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>436</wp:comment_id>
			<wp:comment_author><![CDATA[emilioz]]></wp:comment_author>
			<wp:comment_author_email>emilioz@o2.pl</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>82.210.189.77</wp:comment_author_IP>
			<wp:comment_date>2009-12-01 16:44:37</wp:comment_date>
			<wp:comment_date_gmt>2009-12-01 21:44:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Is the upgrade from 2.0 to 2.1 free???]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>442</wp:comment_id>
			<wp:comment_author><![CDATA[Nathanael Jones]]></wp:comment_author>
			<wp:comment_author_email>nathanael.jones@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>99.10.111.200</wp:comment_author_IP>
			<wp:comment_date>2009-12-04 10:15:48</wp:comment_date>
			<wp:comment_date_gmt>2009-12-04 15:15:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yes, it is - you should have received an e-mail with the download link a few weeks back. (The e-mail address it was purchased under).]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>436</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>4937</wp:comment_id>
			<wp:comment_author><![CDATA[Version 2.6 released!&nbsp;|&nbsp;Nathanael Jones]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://nathanaeljones.com/489/version-2-6-released/</wp:comment_author_url>
			<wp:comment_author_IP>66.29.219.39</wp:comment_author_IP>
			<wp:comment_date>2010-11-11 16:31:18</wp:comment_date>
			<wp:comment_date_gmt>2010-11-11 21:31:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] If you are upgrading from 2.0, follow the 2.0-&gt;2.1b upgrade instructions first. [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Merging ComputerLinguist.com</title>
		<link>http://nathanaeljones.com/462/merging-computerlinguist-com/</link>
		<pubDate>Tue, 17 Nov 2009 20:39:33 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://nathanaeljones.com/?p=462</guid>
		<description></description>
		<content:encoded><![CDATA[In August 2008 I started a separate blog, <a href="http://computerlinguist.com/">ComputerLinguist.com</a>. At the time, I felt that it was best to keep my ASP.NET writings separate from the rest.

Dynamic languages were still heresy among many programming circles, and my articles on general programming were definitely targeted towards a different audience.  However, since Microsoft has released the DLR and publicly embraced dynamic languages, much of the FUD they originally (maybe unintentionally) encouraged has been displaced from people's minds. I don't see any reason to keep the blogs separate anymore.

I plan on merging the content soon, shortly after I get the comment situation worked out. My previous CMS used IntenseDebate for commenting, but I'm having trouble getting the IntenseDebate plugin to run on wordpress, so it make take a while.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>462</wp:post_id>
		<wp:post_date>2009-11-17 15:39:33</wp:post_date>
		<wp:post_date_gmt>2009-11-17 20:39:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>merging-computerlinguist-com</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Version 2.6 released!</title>
		<link>http://nathanaeljones.com/489/version-2-6-released/</link>
		<pubDate>Thu, 11 Nov 2010 21:27:51 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://nathanaeljones.com/?p=489</guid>
		<description></description>
		<content:encoded><![CDATA[<div>

It's been almost a year since the last version was released.

In a way, it's good - the last version was very stable and secure. In the last year, hundreds of customers have bought and installed the product, and <em>less than a dozen</em> have encountered any bugs.

Still, it's time to roll out new features and patch a few bugs. 12 new features and six bug fixes!

The most common bug was a compatibility issue with  a small percentage of IIS configurations. The error message was "Value cannot be null. Parameter name: user".

Other bugs included a rare rounding bug where certain images would get cropped by 1 pixel, a bug with border widths,  a low-trust compatibility issue with reflection, and one locking issue that could happen if the /imagecache directory kept getting manually deleted during high traffic.

The only security or reliability-related bug affected URL authorization, but did NOT EXIST IN ANY PUBLISHED VERSION.

Only customers that got a custom build via e-mail are affected, and are being sent a notice.
<h2><strong>Fixed</strong></h2>
<div id="_mcePaste">
<ul>
	<li>Fixed bug where a NullReference exception would occur if the Authentication module didn't process the request. All requests appear anonymous now in that situation.</li>
	<li>Fixed rounding bug and added regression test. New behavior is to round ALL values before performing drawing, but AFTER math is done. Was previously trimming a line of pixels off certain images.</li>
	<li>Fixed border bug where border was drawn over top of padding.</li>
	<li>Fixed threading bug with creating the web.config file. Two concurrent requests immediately after installation would cause 1 and only 1 exception.</li>
	<li>Fixed bug where no URL Authorization was occuring UNLESS DisableImageURLAuthorization=TRUE in web.config (This bug did not exist in v2.1b, only in custom versions sent to customers between Mar. 19 and Nov. 11)</li>
	<li>Fixed SecurityException errors occuring on GoDaddy and in other low-trust environments: changed the Animation plugin to use static methods insead of reflection. Users of the animation plugin, contact me for an updated version.</li>
</ul>
</div>
<ul></ul>
<h2>Added</h2>
<ul>
	<li>Added support for splitting the image cache into subfolders, allowing scalability to millions of images:
Just set "ImageCacheSubfolders" to the required number of folders.</li>
	<li>Added static event hooks for URL rewriting on images (replaces CustomFolders.cs, although CustomFolders.cs still works).
CustomFolders.cs will be removed in the next major revision.</li>
	<li>Added &amp;scale=UpscaleCanvas mode. Instead of upscaling the image, the canvas expands to the specified Width and Height.</li>
	<li>Added DisableImageURLAuthorization setting. Set to TRUE to disable additional URL authorization checking within the resizer (imagecache is still protected).</li>
	<li>Added support for resizing images served by VirtualPathProviders.</li>
	<li>Set either <em>ImageResizerUseVirtualPathProvider </em>or <em>ImageResizerUseVirtualPathProviderAsFallback </em>to true to enable the functionality. In Fallback mode, the virtual path provider is only called if no physical file exists.</li>
	<li>Added support for implementing cache-friendly database-driven image resizing using a VirtualPathProvider.</li>
	<li>Added IVirtualFileWithModified and IVirtualBitmapFile. Allows custom virtual path providers to be cache-friendly and even send bitmaps directly to the image resizer. Great for implementing new image formats.</li>
	<li>Added BuildImage overloads with VirtualFile support</li>
	<li>Added the ability to specify custom extension/ImageFormat mappings, in case your jpegs are named .cow or .pig for some strange reason.</li>
	<li>Added TranslatePoint methods to allow simulation of a resize (useful for image map generation).</li>
	<li>Added Size GetFinalSize() methods to ImageManager.cs for determining the resulting size of an image.</li>
	<li>Performance boost: modified DiskUtil.UpdateCachedVersionIfNeeded to use 'cachedFile' instead of 'sourceFile' as lock/sync key.</li>
</ul>
<h2>Upgrade proccess</h2>
<ol>
	<li>Replace the old files with the new files from the ImageResizer folder. If you are using the .DLL, replace the DLL in the bin folder. Keep your old CustomFolders.cs and WatermarkSettings.cs files if you have modified them.</li>
	<li>Delete the /imagecache directory.</li>
</ol>
If you are upgrading from 1.2, <a href="http://nathanaeljones.com/159/image-resizer-2-0-upgrade-notes/">follow the 1.2-&gt;2.0 upgrade instructions first.</a>

If you are upgrading from 2.0, <a href="http://nathanaeljones.com/438/version-2-1b-released/">follow the 2.0-&gt;2.1b upgrade instructions first.</a>

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>489</wp:post_id>
		<wp:post_date>2010-11-11 16:27:51</wp:post_date>
		<wp:post_date_gmt>2010-11-11 21:27:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>version-2-6-released</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>5192</wp:comment_id>
			<wp:comment_author><![CDATA[NotAdmin]]></wp:comment_author>
			<wp:comment_author_email>dmaderi@liftech.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>74.106.6.5</wp:comment_author_IP>
			<wp:comment_date>2010-11-29 12:04:43</wp:comment_date>
			<wp:comment_date_gmt>2010-11-29 17:04:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[When I upgrade from 2.1b to 2.6 I get the following IIS error after refreshing my page: 
 
Description: An error occurred during the compilation of a resource required to service this request. Please review the following specific error details and modify your source code appropriately.  
 
Compiler Error Message: CS0101: The namespace &#039;fbs.ImageResizer&#039; already contains a definition for &#039;ImageOutputSettings&#039; 
 
Source Error: 
 
Line 46:     /// Doesn&#039;t handle animated image files - only single frames. (Neither does GDI) 
Line 47:     ///  
Line 48:     public class ImageOutputSettings 
Line 49:     { 
Line 50: ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>5193</wp:comment_id>
			<wp:comment_author><![CDATA[NotAdmin]]></wp:comment_author>
			<wp:comment_author_email>dmaderi@liftech.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>74.106.6.5</wp:comment_author_IP>
			<wp:comment_date>2010-11-29 12:14:45</wp:comment_date>
			<wp:comment_date_gmt>2010-11-29 17:14:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Please disregard my previous comment, what was causing the issue was I renamed the /ImageResizer directory to /ImageResizer_21b and then copied the new 2.6 to a recreated /ImageResizer directory. As soon as I removed the /ImageResizer_21b directory everything worked fine, I didn&#039;t realize having misc directories in there would cause this type of issue. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>5192</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Image Resizer in Action!</title>
		<link>http://nathanaeljones.com/510/image-resizer-in-action/</link>
		<pubDate>Fri, 12 Nov 2010 18:29:36 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://nathanaeljones.com/?p=510</guid>
		<description></description>
		<content:encoded><![CDATA[I've seen some neat things done with the resizer, but I want to hear more!

Put a link to your website and a description of how you are using it in the Comments section.

Here's some stuff I've seen:
<ul>
	<li>Weather imagery manipulation</li>
	<li>Real estate photograph and mapping</li>
	<li>Photography sites</li>
	<li>Product catalogs</li>
	<li>Social networking sites</li>
	<li>Integration into a variety of CMSes (DotNetNuke and a few others I can't remember)</li>
</ul>
However you are using it, whatever you are doing - show us!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>510</wp:post_id>
		<wp:post_date>2010-11-12 13:29:36</wp:post_date>
		<wp:post_date_gmt>2010-11-12 18:29:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>image-resizer-in-action</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="asp-net"><![CDATA[ASP.NET]]></category>
		<category domain="category" nicename="image-resizing"><![CDATA[Image Resizing]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>4952</wp:comment_id>
			<wp:comment_author><![CDATA[Dorian Collier]]></wp:comment_author>
			<wp:comment_author_email>dorian@deesea.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.deesea.com</wp:comment_author_url>
			<wp:comment_author_IP>72.37.129.124</wp:comment_author_IP>
			<wp:comment_date>2010-11-12 10:52:28</wp:comment_date>
			<wp:comment_date_gmt>2010-11-12 15:52:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[We&#039;ve used Nathanael&#039;s Image Resizer on a variety of projects, both small and large. It&#039;s fast, reliable, robust, easy to use, and a HUGE time saver. I can easily say that we&#039;ve gotten more bang-for-the-buck from it than anything else we&#039;ve purchased in the past 5 years. 
 
Here&#039;s some of our work that uses it:  <a href="http://homgroup.com" rel="nofollow">http://homgroup.com</a>   <a href="http://turbo140.com" rel="nofollow">http://turbo140.com</a>  
and of course our own website <a href="http://deesea.com" rel="nofollow">http://deesea.com</a>  
 
Thanks Nathanael for creating such a wonderful product. 
 
- Dorian ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>5191</wp:comment_id>
			<wp:comment_author><![CDATA[Neil McQuillan]]></wp:comment_author>
			<wp:comment_author_email>neil@citruslime.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.edgeandwax.co.uk/</wp:comment_author_url>
			<wp:comment_author_IP>80.229.103.92</wp:comment_author_IP>
			<wp:comment_date>2010-11-29 10:29:23</wp:comment_date>
			<wp:comment_date_gmt>2010-11-29 15:29:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Used to resize product images, and also the main Ski&#039;s in the flash animation. This can be expanded to fill two big monitors and still runs pretty smooth. Awesome piece of kit this. 
  <a href="http://www.edgeandwax.co.uk/" rel="nofollow">http://www.edgeandwax.co.uk/</a>  
 
Also used to resize product images @ <a href="http://www.fawkes-cycles.co.uk/" rel="nofollow">http://www.fawkes-cycles.co.uk/</a> 
 
and indeed on our own site <a href="http://www.citrus-retail.com/" rel="nofollow">http://www.citrus-retail.com/</a> 
 
Overall one of the best component products we&#039;ve bought. Keep up the good work Nathan! ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>5434</wp:comment_id>
			<wp:comment_author><![CDATA[Jonathan]]></wp:comment_author>
			<wp:comment_author_email>zeeside@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.groupeelove.com</wp:comment_author_url>
			<wp:comment_author_IP>208.125.5.34</wp:comment_author_IP>
			<wp:comment_date>2011-02-14 08:37:20</wp:comment_date>
			<wp:comment_date_gmt>2011-02-14 13:37:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nathanael Jones&#039; image resizer is used to handle cropping and other manipulation for all user uploaded images related to profiles and dating groups, on our dating website: 
  <a href="http://www.groupeelove.com" rel="nofollow">http://www.groupeelove.com</a>  
 
A major modification made on our behalf was the ability to handle files located on Amazon&#039;s S3 cloud server. Overall Nathan is one of the most professional people I&#039;ve worked with, beating his own delivery estimates at a time when he had a lot of other stuff going on, not to mention his component is flawlessly executed.  
 
-Jonathan. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>ImageResizer v3 is released</title>
		<link>http://nathanaeljones.com/524/imageresizer-v3-is-released/</link>
		<pubDate>Wed, 18 May 2011 16:26:15 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://nathanaeljones.com/?p=524</guid>
		<description></description>
		<content:encoded><![CDATA[Image Resizer 3 launched on April 24th. New version, new <a href="http://imageresizing.net/docs/2to3/diff">architecture</a>, new <a href="http://imageresizing.net/">website</a>.

Now that the initial sprint is over,  things have settled down, and I have a nice set of <a href="http://imageresizing.net/docs/">documentation articles</a>, I'm finally blogging about it.

I've been more focused on writing documentation than publicizing, but I still managed to get <strong>5,713 pageviews in 24 days</strong>, and someone <a href="http://channel9.msdn.com/coding4fun/blog/Funny-you-look-bigger-in-real-life-Server-side-image-resizing-with-the-free-and-open-source-ImageRes">wrote a channel 9 article written about the project</a>, which was very cool!

As it happened, NameCheap.com support staff helpfully <del>fixed</del> broke my DNS records at the same time the article went live, so the article got 5000+ hits and I only managed a couple hundred. Thanks NameCheap Support! Due to the time difference, I caught their error the next day. Suprisingly, I still suggest NameCheap as the best registrar. Just avoid (a) e-mail forwarding and (b) support. Everything else works great. I moved to NameCheap after using GoDaddy and Network Solutions, and I've never looked back. After 4 years and 25 domains, this was the first time I ever contacted support. I think that says something about their software. If they would just move e-mail forwarding to EC2 and train support staff to verify their changes didn't break the customer's website, they'd be perfect.

Perhaps more interesting - <a href="http://imageresizing.net">imageresizing.net</a> runs Ruby.  Not rails, Ruby. <a href="http://nestacms.com/">NestaCms</a>, actually. Deploying a new version from my laptop to Heroku takes between 2 and 4 seconds. And everything is versioned in Git, so I can roll back in seconds, group changes into commits, and deploy only the changes I think are ready. I edit the site in TextMate, push changes with SmartGit, and I've never been happier. Oh, and hosting is free since I don't need or use a DB.

I'm editing plain text files, using textmate's nice markdown bundle, getting syntax highlighting, and I can mix in pure HTML whenever I want. Page templates can be a combination of HAML, erubis, and markdown, and can accepted variables from the header section of the markdown pages.

<a href="http://nestacms.com/">NestaCMS</a> is minimal abstraction is its finest. Maximum flexibility, minimum overhead, simplest debugging.  And the source is so readable I could use it as-is for documentation in the download. Now there's an idea!

Back to the topic - If you haven't already, you should <a href="http://imageresizing.net/">download Image Resizer v3 and give it a spin.</a>

Installation is very simple, and there are <a href="http://imageresizing.net/plugins">20 new plugins available</a>.

Oh, and it's free. Like MIT-free. It's supported by the add-on plugin bundles, which also have MIT-like licenses.

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>524</wp:post_id>
		<wp:post_date>2011-05-18 12:26:15</wp:post_date>
		<wp:post_date_gmt>2011-05-18 16:26:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>imageresizer-v3-is-released</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>7146</wp:comment_id>
			<wp:comment_author><![CDATA[Carley Havely]]></wp:comment_author>
			<wp:comment_author_email>Abt961@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.zunya.org/</wp:comment_author_url>
			<wp:comment_author_IP>31.184.238.105</wp:comment_author_IP>
			<wp:comment_date>2011-11-17 17:09:43</wp:comment_date>
			<wp:comment_date_gmt>2011-11-17 22:09:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your blog is really outstanding. Keep going that way.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1321567783.8397";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:106:{s:15:"comment_post_ID";s:3:"524";s:14:"comment_author";s:13:"Carley Havely";s:20:"comment_author_email";s:18:"Abt961@hotmail.com";s:18:"comment_author_url";s:21:"http://www.zunya.org/";s:15:"comment_content";s:53:"Your blog is really outstanding. Keep going that way.";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:14:"31.184.238.105";s:10:"user_agent";s:69:"Mozilla/4.0 (compatible; MSIE 5.5; Windows NT 4.0; .NET CLR 1.0.2914)";s:8:"referrer";s:58:"http://nathanaeljones.com/524/imageresizer-v3-is-released/";s:4:"blog";s:25:"http://nathanaeljones.com";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:58:"http://nathanaeljones.com/524/imageresizer-v3-is-released/";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:13:"Carley Havely";s:10:"POST_email";s:18:"Abt961@hotmail.com";s:8:"POST_url";s:21:"http://www.zunya.org/";s:12:"POST_comment";s:53:"Your blog is really outstanding. Keep going that way.";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:3:"524";s:19:"POST_comment_parent";s:1:"0";s:26:"POST_akismet_comment_nonce";s:10:"41471930f9";s:15:"SERVER_SOFTWARE";s:17:"Microsoft-IIS/7.0";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:21:"PHP_FCGI_MAX_REQUESTS";s:5:"10000";s:5:"PHPRC";s:18:"C:Program FilesPHP";s:15:"ALLUSERSPROFILE";s:13:"C:ProgramData";s:7:"APPDATA";s:50:"C:Windowssystem32configsystemprofileAppDataRoaming";s:11:"APP_POOL_ID";s:13:"ndj-wordpress";s:18:"CommonProgramFiles";s:27:"C:Program FilesCommon Files";s:12:"COMPUTERNAME";s:6:"DED793";s:7:"ComSpec";s:24:"C:Windowssystem32cmd.exe";s:16:"FP_NO_HOST_CHECK";s:2:"NO";s:12:"LOCALAPPDATA";s:48:"C:Windowssystem32configsystemprofileAppDataLocal";s:20:"NUMBER_OF_PROCESSORS";s:1:"2";s:2:"OS";s:10:"Windows_NT";s:4:"Path";s:306:"C:Program FilesPHP;C:Windowssystem32;C:Windows;C:WindowsSystem32Wbem;C:Program FilesMySQLMySQL Server 5.0bin;C:WindowsSystem32WindowsPowerShellv1.0;c:Program FilesMicrosoft SQL Server100ToolsBinn;c:Program FilesMicrosoft SQL Server100DTSBinn;c:Program FilesMicrosoft SQL Server100ToolsBinnVSShellCommon7IDE";s:7:"PATHEXT";s:53:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC";s:22:"PROCESSOR_ARCHITECTURE";s:3:"x86";s:20:"PROCESSOR_IDENTIFIER";s:46:"x86 Family 15 Model 4 Stepping 1, GenuineIntel";s:15:"PROCESSOR_LEVEL";s:2:"15";s:18:"PROCESSOR_REVISION";s:4:"0401";s:11:"ProgramData";s:13:"C:ProgramData";s:12:"ProgramFiles";s:15:"C:Program Files";s:12:"PSModulePath";s:45:"C:Windowssystem32WindowsPowerShellv1.0Modules";s:6:"PUBLIC";s:13:"C:UsersPublic";s:11:"SystemDrive";s:2:"C:";s:10:"SystemRoot";s:9:"C:Windows";s:4:"TEMP";s:13:"C:WindowsTEMP";s:3:"TMP";s:13:"C:WindowsTEMP";s:10:"USERDOMAIN";s:15:"MAXIMUMASPLOCAL";s:8:"USERNAME";s:7:"DED793$";s:11:"USERPROFILE";s:36:"C:Windowssystem32configsystemprofile";s:6:"windir";s:9:"C:Windows";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:11:"HTTP_PRAGMA";s:8:"no-cache";s:19:"HTTP_CONTENT_LENGTH";s:3:"253";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:3:"*/*";s:9:"HTTP_HOST";s:18:"nathanaeljones.com";s:12:"HTTP_REFERER";s:58:"http://nathanaeljones.com/524/imageresizer-v3-is-released/";s:15:"HTTP_USER_AGENT";s:69:"Mozilla/4.0 (compatible; MSIE 5.5; Windows NT 4.0; .NET CLR 1.0.2914)";s:13:"DOCUMENT_ROOT";s:23:"C:Websitesndj-wordpress";s:15:"SCRIPT_FILENAME";s:43:"C:Websitesndj-wordpresswp-comments-post.php";s:20:"IIS_UrlRewriteModule";s:1:"1";s:12:"APPL_MD_PATH";s:16:"/LM/W3SVC/2/ROOT";s:18:"APPL_PHYSICAL_PATH";s:23:"C:Websitesndj-wordpress";s:9:"AUTH_TYPE";s:0:"";s:13:"AUTH_PASSWORD";s:0:"";s:9:"AUTH_USER";s:0:"";s:11:"CERT_COOKIE";s:0:"";s:10:"CERT_FLAGS";s:0:"";s:11:"CERT_ISSUER";s:0:"";s:17:"CERT_SERIALNUMBER";s:0:"";s:12:"CERT_SUBJECT";s:0:"";s:14:"CONTENT_LENGTH";s:3:"253";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:5:"HTTPS";s:3:"off";s:13:"HTTPS_KEYSIZE";s:0:"";s:19:"HTTPS_SECRETKEYSIZE";s:0:"";s:19:"HTTPS_SERVER_ISSUER";s:0:"";s:20:"HTTPS_SERVER_SUBJECT";s:0:"";s:11:"INSTANCE_ID";s:1:"2";s:18:"INSTANCE_META_PATH";s:11:"/LM/W3SVC/2";s:10:"LOCAL_ADDR";s:12:"66.29.219.39";s:10:"LOGON_USER";s:0:"";s:15:"PATH_TRANSLATED";s:43:"C:Websitesndj-wordpresswp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:11:"REMOTE_ADDR";s:14:"31.184.238.105";s:11:"REMOTE_HOST";s:14:"31.184.238.105";s:11:"REMOTE_PORT";s:4:"1326";s:11:"REMOTE_USER";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:11:"SERVER_NAME";s:18:"nathanaeljones.com";s:11:"SERVER_PORT";s:2:"80";s:18:"SERVER_PORT_SECURE";s:1:"0";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.0";s:3:"URL";s:21:"/wp-comments-post.php";s:14:"ORIG_PATH_INFO";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1321567782";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Image Resizer v2.8 is released - end of line</title>
		<link>http://nathanaeljones.com/562/image-resizer-v2-8-is-released-end-of-line/</link>
		<pubDate>Fri, 27 May 2011 21:16:04 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://nathanaeljones.com/?p=562</guid>
		<description></description>
		<content:encoded><![CDATA[This is a high-priority update for users of v2, as it blocks a potential avenue for a DOS attack and fixes many important bugs. 

This is probably the last update the v2 line will receive. v2.X is depreciated and discontinued, and support for it will be ending June 15, 2011.

<a href="http://imageresizing.net/releases/2-8">Read full article on imageresizing.net</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>562</wp:post_id>
		<wp:post_date>2011-05-27 17:16:04</wp:post_date>
		<wp:post_date_gmt>2011-05-27 21:16:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>image-resizer-v2-8-is-released-end-of-line</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="image-resizing"><![CDATA[Image Resizing]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>jCrop and ASP.NET server-side image resizing combined</title>
		<link>http://nathanaeljones.com/573/combining-jcrop-and-server-side-image-resizing/</link>
		<pubDate>Mon, 30 May 2011 23:07:29 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://nathanaeljones.com/?p=573</guid>
		<description></description>
		<content:encoded><![CDATA[Today, I'm going to show you how to combine <a href="http://jquery.com/">jQuery</a>, <a href="http://deepliquid.com/content/Jcrop.html">jCrop</a>, and <a href="http://imageresizing.net/">ImageResizing.Net</a> to create an AJAX cropping interface - in 11 lines of javascript. This produces true, cropped images that you can use anywhere on the site simply by referencing the generated URL. And all with free, mature, open-source software.

This technique works with .NET 2.0, 3.0, 3.5, 4.0, both MVC and WebForms.

If you're one of those people who reads books backwards, you can skip to the <a href="http://images.imageresizing.net/JCropSample/Basic.htm">basic demo</a>, the <a href="http://images.imageresizing.net/JCropSample/Advanced.aspx">advanced demo</a>, or just <a href="http://downloads.imageresizing.net/examples/JCropExample2.zip">ruin everything and download the sample project :)</a> 
<p>If you're using NuGet, you can just install the <a href="http://www.nuget.org/List/Packages/ImageResizer.Samples.Jcrop">ImageResizer.Samples.Jcrop package</a> into a Web Application project.</p>
<h2>Ingredients</h2>
<ul>
	<li>jquery.min.js - from the /js/ folder of <a href="http://deepliquid.com/content/Jcrop_Download.html">the jcrop download</a></li>
	<li>jquery.Jcrop.js - from /js/</li>
	<li>jquery.Jcrop.css - from /css/ (Provides CSS rules for styling the 'rubber band')</li>
	<li>Jcrop.gif - from /css</li>
	<li>ImageResizer.dll  - from the /dlls/release of the <a href="http://imageresizing.net/">ImageResizer download at imageresizing.net (Provides the server-side resizing and cropping).</a></li>
</ul>
<h2>Mixing instructions</h2>
<ol>
	<li>In Visual Studio, right click your project and choose "Add reference". Browse to ImageResizer.dlll and click "Add".</li>
	<li>Add <em>ImageResizer.InterceptModule</em> to the &lt;modules&gt; and/or &lt;httpModules&gt; section of web.config. This allows the ImageResizer to handle image requests that have a querystring. 
<pre class="brush:xml">&lt;configuration&gt;&#10;  &lt;system.web&gt;   &#10;    &lt;httpModules&gt;&#10;      &lt;!-- this is for Classic mode and Cassini --&gt;&#10;      &lt;add name=&quot;ImageResizingModule&quot; type=&quot;ImageResizer.InterceptModule&quot;/&gt;&#10;    &lt;/httpModules&gt;&#10;  &lt;/system.web&gt;&#10;  &lt;system.webServer&gt;&#10;    &lt;validation validateIntegratedModeConfiguration=&quot;false&quot;/&gt;&#10;    &lt;modules&gt;&#10;      &lt;!-- This is for Integrated mode--&gt;&#10;      &lt;add name=&quot;ImageResizingModule&quot; type=&quot;ImageResizer.InterceptModule&quot;/&gt;&#10;    &lt;/modules&gt;&#10;  &lt;/system.webServer&gt;&#10;&lt;/configuration&gt;</pre></li>
	<li> Add the first 4 ingredients to the project. If you keep the same directory structure, you won't have to modify the sample code below :)</li>
</ol>
<h2>The Code</h2>
This code is just HTML and javascript, so you can use it with WebForms, MVC, Razor - anything.
<ol>
	<li>Include the script files  <em>jquery.min.js</em>, <em>jquery.Jcrop.js</em>,  and the CSS file<em> jquery.Jcrop.js</em> in the head section.
<pre class="brush:xml">&lt;script src="js/jquery.min.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="js/jquery.Jcrop.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;link href="css/jquery.Jcrop.css" type="text/css" rel="stylesheet" /&gt;</pre>
</li>
	<li>In the body, insert a &lt;div&gt; containing an &lt;img&gt; and an &lt;a&gt; element.
<pre class="brush:xml">&lt;div class="image-cropper"&gt;
    &lt;img src="fountain-small.jpg?width=400" class="image" /&gt;
    &lt;a class="result"&gt;View the result&lt;/a&gt;
&lt;/div&gt;</pre>
Note the '?width=400' in the image URL. This instructs the ImageResizer to shrink the image before sending it to the client.</li>
	<li>Now for the fun part. Create a &lt;script  type="text/javascript"&gt;&lt;/script&gt; section inside &lt;head&gt;, below the references we added in step #1.</li>
	<li>Add the following code inside the &lt;script&gt; tags.
<pre class="brush:jscript">$(function () { //On DOM ready
    //Using the 'each' pattern allows multiple cropping image/link pairs per page.
	$('.image-cropper').each(function(unusedIndex, container) {
	    container = $(container); //We were passed a DOM reference, convert it to a jquery object

	    //Find the image inside 'container' by class ("image")
	    var image = container.find("img.image");

	    //Trim the querystring off the image URL.
	    var path = image.attr('src'); if (path.indexOf('?') &gt; 0) path = path.substr(0, path.indexOf('?'));

	    //Define a function to execute when the cropping rectangle changes.
	    var update = function (coords) {
	        if (parseInt(coords.w) &lt;= 0 || parseInt(coords.h) &lt;= 0) return; //Require valid width and height

	        //Build the URL based on the coordiantes. The resizing module will handle everything else.
	        var url = path + '?crop=(' + coords.x + ',' + coords.y + ',' + coords.x2 + ',' + coords.y2 +
            ')&amp;cropxunits=' + image.width() + '&amp;cropyunits=' + image.height()

	        //Now, update the link 'href' (you could update a hidden field just as easily)
	        container.find('a.result').attr('href', url);
	    }

	    //Start up jCrop on the image, specifying our function be called when the selection rectangle changes,
        // and that a 60% black shadow should cover the cropped regions.
	    image.Jcrop({ onChange: update, onSelect: update, bgColor: 'black', bgOpacity: 0.6 });
	});
});</pre>
</li>
</ol>
<p>
The secret is in the ?crop=(x1,y1,x2,y2) querystring that is appended to the image. The ImageResizer HttpModule detects the command, intercepts the image request, crops the image, and sends the result back, all in milliseconds.  
</p><p>If you're dealing with large images or high traffic volumes, you can <a href="http://imageresizing.net/plugins/diskcache">enable disk caching</a> so that duplicate requests are served from disk instead of wasting CPU and RAM resources. Disk caching eliminates 99% of the overhead associated with dynamic image resizing, making the ImageResizer scalable enough for even social networking sites.
</p>


<h2>Live demo and sample project download</h2>

<p>You can <a href="http://downloads.imageresizing.net/examples/JCropExample2.zip">download the complete sample project here.</a> 
</p>
<p>
Click <a href="http://images.imageresizing.net/JCropSample/Basic.htm">here to view the live demo of what we just did</a>, and <a href="http://images.imageresizing.net/JCropSample/Advanced.aspx">here to see an advanced demo with live preview, width/height resizing, and aspect locking.</a> The advanced demo also contains an example of how to send cropped images URLs to the server for storage in SQL, saving to disk, etc. Perhaps I'll cover building that in a later post. In the meantime, code fun!
</p>
<p> Oh, and dont forget to <a href='http://www.dzone.com/links/combine_jcrop_and_serverside_image_resizing_in_11.html?ref=rs'>vote this post up on DZone!</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>573</wp:post_id>
		<wp:post_date>2011-05-30 19:07:29</wp:post_date>
		<wp:post_date_gmt>2011-05-30 23:07:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>combining-jcrop-and-server-side-image-resizing</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>5562</wp:comment_id>
			<wp:comment_author><![CDATA[inboxit]]></wp:comment_author>
			<wp:comment_author_email>admin@inboxit.ru</wp:comment_author_email>
			<wp:comment_author_url>http://inboxit.ru</wp:comment_author_url>
			<wp:comment_author_IP>217.66.27.132</wp:comment_author_IP>
			<wp:comment_date>2011-05-31 09:29:12</wp:comment_date>
			<wp:comment_date_gmt>2011-05-31 13:29:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[works fine, may be usefull, thanks ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1306862952.9582";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:112:{s:15:"comment_post_ID";s:3:"573";s:14:"comment_author";s:7:"inboxit";s:20:"comment_author_email";s:16:"admin@inboxit.ru";s:18:"comment_author_url";s:17:"http://inboxit.ru";s:15:"comment_content";s:34:"works fine, may be usefull, thanks";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:13:"217.66.27.132";s:10:"user_agent";s:120:"Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit/534.16 (KHTML, like Gecko) Chrome/10.0.648.205 Safari/534.16";s:8:"referrer";s:77:"http://nathanaeljones.com/573/combining-jcrop-and-server-side-image-resizing/";s:4:"blog";s:25:"http://nathanaeljones.com";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:77:"http://nathanaeljones.com/573/combining-jcrop-and-server-side-image-resizing/";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:7:"inboxit";s:10:"POST_email";s:16:"admin@inboxit.ru";s:8:"POST_url";s:17:"http://inboxit.ru";s:12:"POST_comment";s:34:"works fine, may be usefull, thanks";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:3:"573";s:19:"POST_comment_parent";s:1:"0";s:26:"POST_akismet_comment_nonce";s:10:"7b3ef1bb00";s:15:"SERVER_SOFTWARE";s:17:"Microsoft-IIS/7.0";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:21:"PHP_FCGI_MAX_REQUESTS";s:5:"10000";s:5:"PHPRC";s:18:"C:Program FilesPHP";s:15:"ALLUSERSPROFILE";s:13:"C:ProgramData";s:7:"APPDATA";s:50:"C:Windowssystem32configsystemprofileAppDataRoaming";s:11:"APP_POOL_ID";s:13:"ndj-wordpress";s:18:"CommonProgramFiles";s:27:"C:Program FilesCommon Files";s:12:"COMPUTERNAME";s:6:"DED793";s:7:"ComSpec";s:24:"C:Windowssystem32cmd.exe";s:16:"FP_NO_HOST_CHECK";s:2:"NO";s:12:"LOCALAPPDATA";s:48:"C:Windowssystem32configsystemprofileAppDataLocal";s:20:"NUMBER_OF_PROCESSORS";s:1:"2";s:2:"OS";s:10:"Windows_NT";s:4:"Path";s:306:"C:Program FilesPHP;C:Windowssystem32;C:Windows;C:WindowsSystem32Wbem;C:Program FilesMySQLMySQL Server 5.0bin;C:WindowsSystem32WindowsPowerShellv1.0;c:Program FilesMicrosoft SQL Server100ToolsBinn;c:Program FilesMicrosoft SQL Server100DTSBinn;c:Program FilesMicrosoft SQL Server100ToolsBinnVSShellCommon7IDE";s:7:"PATHEXT";s:53:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC";s:22:"PROCESSOR_ARCHITECTURE";s:3:"x86";s:20:"PROCESSOR_IDENTIFIER";s:46:"x86 Family 15 Model 4 Stepping 1, GenuineIntel";s:15:"PROCESSOR_LEVEL";s:2:"15";s:18:"PROCESSOR_REVISION";s:4:"0401";s:11:"ProgramData";s:13:"C:ProgramData";s:12:"ProgramFiles";s:15:"C:Program Files";s:12:"PSModulePath";s:45:"C:Windowssystem32WindowsPowerShellv1.0Modules";s:6:"PUBLIC";s:13:"C:UsersPublic";s:11:"SystemDrive";s:2:"C:";s:10:"SystemRoot";s:9:"C:Windows";s:4:"TEMP";s:13:"C:WindowsTEMP";s:3:"TMP";s:13:"C:WindowsTEMP";s:10:"USERDOMAIN";s:15:"MAXIMUMASPLOCAL";s:8:"USERNAME";s:7:"DED793$";s:11:"USERPROFILE";s:36:"C:Windowssystem32configsystemprofile";s:6:"windir";s:9:"C:Windows";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:18:"HTTP_CACHE_CONTROL";s:9:"max-age=0";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:19:"HTTP_CONTENT_LENGTH";s:3:"226";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:90:"application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5";s:19:"HTTP_ACCEPT_CHARSET";s:32:"windows-1251,utf-8;q=0.7,*;q=0.3";s:20:"HTTP_ACCEPT_ENCODING";s:17:"gzip,deflate,sdch";s:20:"HTTP_ACCEPT_LANGUAGE";s:35:"ru-RU,ru;q=0.8,en-US;q=0.6,en;q=0.4";s:11:"HTTP_COOKIE";s:0:"";s:9:"HTTP_HOST";s:18:"nathanaeljones.com";s:12:"HTTP_REFERER";s:77:"http://nathanaeljones.com/573/combining-jcrop-and-server-side-image-resizing/";s:15:"HTTP_USER_AGENT";s:120:"Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit/534.16 (KHTML, like Gecko) Chrome/10.0.648.205 Safari/534.16";s:11:"HTTP_ORIGIN";s:25:"http://nathanaeljones.com";s:13:"DOCUMENT_ROOT";s:23:"C:Websitesndj-wordpress";s:15:"SCRIPT_FILENAME";s:43:"C:Websitesndj-wordpresswp-comments-post.php";s:20:"IIS_UrlRewriteModule";s:1:"1";s:12:"APPL_MD_PATH";s:16:"/LM/W3SVC/2/ROOT";s:18:"APPL_PHYSICAL_PATH";s:23:"C:Websitesndj-wordpress";s:9:"AUTH_TYPE";s:0:"";s:13:"AUTH_PASSWORD";s:0:"";s:9:"AUTH_USER";s:0:"";s:11:"CERT_COOKIE";s:0:"";s:10:"CERT_FLAGS";s:0:"";s:11:"CERT_ISSUER";s:0:"";s:17:"CERT_SERIALNUMBER";s:0:"";s:12:"CERT_SUBJECT";s:0:"";s:14:"CONTENT_LENGTH";s:3:"226";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:5:"HTTPS";s:3:"off";s:13:"HTTPS_KEYSIZE";s:0:"";s:19:"HTTPS_SECRETKEYSIZE";s:0:"";s:19:"HTTPS_SERVER_ISSUER";s:0:"";s:20:"HTTPS_SERVER_SUBJECT";s:0:"";s:11:"INSTANCE_ID";s:1:"2";s:18:"INSTANCE_META_PATH";s:11:"/LM/W3SVC/2";s:10:"LOCAL_ADDR";s:12:"66.29.219.39";s:10:"LOGON_USER";s:0:"";s:15:"PATH_TRANSLATED";s:43:"C:Websitesndj-wordpresswp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:11:"REMOTE_ADDR";s:13:"217.66.27.132";s:11:"REMOTE_HOST";s:13:"217.66.27.132";s:11:"REMOTE_PORT";s:4:"3227";s:11:"REMOTE_USER";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:11:"SERVER_NAME";s:18:"nathanaeljones.com";s:11:"SERVER_PORT";s:2:"80";s:18:"SERVER_PORT_SECURE";s:1:"0";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:3:"URL";s:21:"/wp-comments-post.php";s:14:"ORIG_PATH_INFO";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1306862952";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1306999893.8139";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>5563</wp:comment_id>
			<wp:comment_author><![CDATA[inboxit]]></wp:comment_author>
			<wp:comment_author_email>admin@inboxit.ru</wp:comment_author_email>
			<wp:comment_author_url>http://inboxit.ru</wp:comment_author_url>
			<wp:comment_author_IP>217.66.27.132</wp:comment_author_IP>
			<wp:comment_date>2011-05-31 09:30:16</wp:comment_date>
			<wp:comment_date_gmt>2011-05-31 13:30:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[what is the plugin name, wich highlights you souce code? ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1306863016.3637";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:112:{s:15:"comment_post_ID";s:3:"573";s:14:"comment_author";s:7:"inboxit";s:20:"comment_author_email";s:16:"admin@inboxit.ru";s:18:"comment_author_url";s:17:"http://inboxit.ru";s:15:"comment_content";s:56:"what is the plugin name, wich highlights you souce code?";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:13:"217.66.27.132";s:10:"user_agent";s:120:"Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit/534.16 (KHTML, like Gecko) Chrome/10.0.648.205 Safari/534.16";s:8:"referrer";s:92:"http://nathanaeljones.com/573/combining-jcrop-and-server-side-image-resizing/comment-page-1/";s:4:"blog";s:25:"http://nathanaeljones.com";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:77:"http://nathanaeljones.com/573/combining-jcrop-and-server-side-image-resizing/";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:7:"inboxit";s:10:"POST_email";s:16:"admin@inboxit.ru";s:8:"POST_url";s:17:"http://inboxit.ru";s:12:"POST_comment";s:56:"what is the plugin name, wich highlights you souce code?";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:3:"573";s:19:"POST_comment_parent";s:1:"0";s:26:"POST_akismet_comment_nonce";s:10:"7b3ef1bb00";s:15:"SERVER_SOFTWARE";s:17:"Microsoft-IIS/7.0";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:21:"PHP_FCGI_MAX_REQUESTS";s:5:"10000";s:5:"PHPRC";s:18:"C:Program FilesPHP";s:15:"ALLUSERSPROFILE";s:13:"C:ProgramData";s:7:"APPDATA";s:50:"C:Windowssystem32configsystemprofileAppDataRoaming";s:11:"APP_POOL_ID";s:13:"ndj-wordpress";s:18:"CommonProgramFiles";s:27:"C:Program FilesCommon Files";s:12:"COMPUTERNAME";s:6:"DED793";s:7:"ComSpec";s:24:"C:Windowssystem32cmd.exe";s:16:"FP_NO_HOST_CHECK";s:2:"NO";s:12:"LOCALAPPDATA";s:48:"C:Windowssystem32configsystemprofileAppDataLocal";s:20:"NUMBER_OF_PROCESSORS";s:1:"2";s:2:"OS";s:10:"Windows_NT";s:4:"Path";s:306:"C:Program FilesPHP;C:Windowssystem32;C:Windows;C:WindowsSystem32Wbem;C:Program FilesMySQLMySQL Server 5.0bin;C:WindowsSystem32WindowsPowerShellv1.0;c:Program FilesMicrosoft SQL Server100ToolsBinn;c:Program FilesMicrosoft SQL Server100DTSBinn;c:Program FilesMicrosoft SQL Server100ToolsBinnVSShellCommon7IDE";s:7:"PATHEXT";s:53:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC";s:22:"PROCESSOR_ARCHITECTURE";s:3:"x86";s:20:"PROCESSOR_IDENTIFIER";s:46:"x86 Family 15 Model 4 Stepping 1, GenuineIntel";s:15:"PROCESSOR_LEVEL";s:2:"15";s:18:"PROCESSOR_REVISION";s:4:"0401";s:11:"ProgramData";s:13:"C:ProgramData";s:12:"ProgramFiles";s:15:"C:Program Files";s:12:"PSModulePath";s:45:"C:Windowssystem32WindowsPowerShellv1.0Modules";s:6:"PUBLIC";s:13:"C:UsersPublic";s:11:"SystemDrive";s:2:"C:";s:10:"SystemRoot";s:9:"C:Windows";s:4:"TEMP";s:13:"C:WindowsTEMP";s:3:"TMP";s:13:"C:WindowsTEMP";s:10:"USERDOMAIN";s:15:"MAXIMUMASPLOCAL";s:8:"USERNAME";s:7:"DED793$";s:11:"USERPROFILE";s:36:"C:Windowssystem32configsystemprofile";s:6:"windir";s:9:"C:Windows";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:18:"HTTP_CACHE_CONTROL";s:9:"max-age=0";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:19:"HTTP_CONTENT_LENGTH";s:3:"248";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:90:"application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5";s:19:"HTTP_ACCEPT_CHARSET";s:32:"windows-1251,utf-8;q=0.7,*;q=0.3";s:20:"HTTP_ACCEPT_ENCODING";s:17:"gzip,deflate,sdch";s:20:"HTTP_ACCEPT_LANGUAGE";s:35:"ru-RU,ru;q=0.8,en-US;q=0.6,en;q=0.4";s:11:"HTTP_COOKIE";s:0:"";s:9:"HTTP_HOST";s:18:"nathanaeljones.com";s:12:"HTTP_REFERER";s:92:"http://nathanaeljones.com/573/combining-jcrop-and-server-side-image-resizing/comment-page-1/";s:15:"HTTP_USER_AGENT";s:120:"Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit/534.16 (KHTML, like Gecko) Chrome/10.0.648.205 Safari/534.16";s:11:"HTTP_ORIGIN";s:25:"http://nathanaeljones.com";s:13:"DOCUMENT_ROOT";s:23:"C:Websitesndj-wordpress";s:15:"SCRIPT_FILENAME";s:43:"C:Websitesndj-wordpresswp-comments-post.php";s:20:"IIS_UrlRewriteModule";s:1:"1";s:12:"APPL_MD_PATH";s:16:"/LM/W3SVC/2/ROOT";s:18:"APPL_PHYSICAL_PATH";s:23:"C:Websitesndj-wordpress";s:9:"AUTH_TYPE";s:0:"";s:13:"AUTH_PASSWORD";s:0:"";s:9:"AUTH_USER";s:0:"";s:11:"CERT_COOKIE";s:0:"";s:10:"CERT_FLAGS";s:0:"";s:11:"CERT_ISSUER";s:0:"";s:17:"CERT_SERIALNUMBER";s:0:"";s:12:"CERT_SUBJECT";s:0:"";s:14:"CONTENT_LENGTH";s:3:"248";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:5:"HTTPS";s:3:"off";s:13:"HTTPS_KEYSIZE";s:0:"";s:19:"HTTPS_SECRETKEYSIZE";s:0:"";s:19:"HTTPS_SERVER_ISSUER";s:0:"";s:20:"HTTPS_SERVER_SUBJECT";s:0:"";s:11:"INSTANCE_ID";s:1:"2";s:18:"INSTANCE_META_PATH";s:11:"/LM/W3SVC/2";s:10:"LOCAL_ADDR";s:12:"66.29.219.39";s:10:"LOGON_USER";s:0:"";s:15:"PATH_TRANSLATED";s:43:"C:Websitesndj-wordpresswp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:11:"REMOTE_ADDR";s:13:"217.66.27.132";s:11:"REMOTE_HOST";s:13:"217.66.27.132";s:11:"REMOTE_PORT";s:4:"3256";s:11:"REMOTE_USER";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:11:"SERVER_NAME";s:18:"nathanaeljones.com";s:11:"SERVER_PORT";s:2:"80";s:18:"SERVER_PORT_SECURE";s:1:"0";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:3:"URL";s:21:"/wp-comments-post.php";s:14:"ORIG_PATH_INFO";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1306863015";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1306999897.6678";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>5711</wp:comment_id>
			<wp:comment_author><![CDATA[Nathanael Jones]]></wp:comment_author>
			<wp:comment_author_email>nathanael.jones@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>93.146.244.69</wp:comment_author_IP>
			<wp:comment_date>2011-06-01 23:32:26</wp:comment_date>
			<wp:comment_date_gmt>2011-06-02 03:32:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[SyntaxHighlighter - <a href="http://alexgorbatchev.com/" rel="nofollow">http://alexgorbatchev.com/</a> ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>5563</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1306999946.8448";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:119:{s:15:"comment_post_ID";s:3:"573";s:14:"comment_author";s:15:"Nathanael Jones";s:20:"comment_author_email";s:25:"nathanael.jones@gmail.com";s:18:"comment_author_url";s:0:"";s:15:"comment_content";s:46:"SyntaxHighlighter - http://alexgorbatchev.com/";s:14:"comment_parent";s:4:"5563";s:7:"user_ID";s:1:"1";s:7:"user_ip";s:13:"93.146.244.69";s:10:"user_agent";s:118:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_7) AppleWebKit/534.24 (KHTML, like Gecko) Chrome/11.0.696.71 Safari/534.24";s:8:"referrer";s:52:"http://nathanaeljones.com/wp-admin/edit-comments.php";s:4:"blog";s:25:"http://nathanaeljones.com";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:77:"http://nathanaeljones.com/573/combining-jcrop-and-server-side-image-resizing/";s:9:"user_role";s:13:"administrator";s:21:"akismet_comment_nonce";s:6:"passed";s:22:"POST_newcomment_author";s:0:"";s:28:"POST_newcomment_author_email";s:0:"";s:26:"POST_newcomment_author_url";s:0:"";s:12:"POST_user_ID";s:1:"1";s:11:"POST_action";s:15:"replyto-comment";s:15:"POST_comment_ID";s:4:"5563";s:20:"POST_comment_post_ID";s:3:"573";s:11:"POST_status";s:0:"";s:13:"POST_position";s:2:"-1";s:13:"POST_checkbox";s:1:"1";s:9:"POST_mode";s:6:"detail";s:32:"POST__ajax_nonce-replyto-comment";s:10:"399b8d6bd8";s:32:"POST__wp_unfiltered_html_comment";s:10:"8557617d0f";s:12:"POST_content";s:47:"SyntaxHighlighter - http://alexgorbatchev.com/
";s:7:"POST_id";s:3:"573";s:21:"POST_comments_listing";s:3:"all";s:15:"SERVER_SOFTWARE";s:17:"Microsoft-IIS/7.0";s:11:"REQUEST_URI";s:24:"/wp-admin/admin-ajax.php";s:21:"PHP_FCGI_MAX_REQUESTS";s:5:"10000";s:5:"PHPRC";s:18:"C:Program FilesPHP";s:15:"ALLUSERSPROFILE";s:13:"C:ProgramData";s:7:"APPDATA";s:50:"C:Windowssystem32configsystemprofileAppDataRoaming";s:11:"APP_POOL_ID";s:13:"ndj-wordpress";s:18:"CommonProgramFiles";s:27:"C:Program FilesCommon Files";s:12:"COMPUTERNAME";s:6:"DED793";s:7:"ComSpec";s:24:"C:Windowssystem32cmd.exe";s:16:"FP_NO_HOST_CHECK";s:2:"NO";s:12:"LOCALAPPDATA";s:48:"C:Windowssystem32configsystemprofileAppDataLocal";s:20:"NUMBER_OF_PROCESSORS";s:1:"2";s:2:"OS";s:10:"Windows_NT";s:4:"Path";s:306:"C:Program FilesPHP;C:Windowssystem32;C:Windows;C:WindowsSystem32Wbem;C:Program FilesMySQLMySQL Server 5.0bin;C:WindowsSystem32WindowsPowerShellv1.0;c:Program FilesMicrosoft SQL Server100ToolsBinn;c:Program FilesMicrosoft SQL Server100DTSBinn;c:Program FilesMicrosoft SQL Server100ToolsBinnVSShellCommon7IDE";s:7:"PATHEXT";s:53:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC";s:22:"PROCESSOR_ARCHITECTURE";s:3:"x86";s:20:"PROCESSOR_IDENTIFIER";s:46:"x86 Family 15 Model 4 Stepping 1, GenuineIntel";s:15:"PROCESSOR_LEVEL";s:2:"15";s:18:"PROCESSOR_REVISION";s:4:"0401";s:11:"ProgramData";s:13:"C:ProgramData";s:12:"ProgramFiles";s:15:"C:Program Files";s:12:"PSModulePath";s:45:"C:Windowssystem32WindowsPowerShellv1.0Modules";s:6:"PUBLIC";s:13:"C:UsersPublic";s:11:"SystemDrive";s:2:"C:";s:10:"SystemRoot";s:9:"C:Windows";s:4:"TEMP";s:13:"C:WindowsTEMP";s:3:"TMP";s:13:"C:WindowsTEMP";s:10:"USERDOMAIN";s:15:"MAXIMUMASPLOCAL";s:8:"USERNAME";s:7:"DED793$";s:11:"USERPROFILE";s:36:"C:Windowssystem32configsystemprofile";s:6:"windir";s:9:"C:Windows";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:19:"HTTP_CONTENT_LENGTH";s:3:"362";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:3:"*/*";s:19:"HTTP_ACCEPT_CHARSET";s:30:"ISO-8859-1,utf-8;q=0.7,*;q=0.3";s:20:"HTTP_ACCEPT_ENCODING";s:17:"gzip,deflate,sdch";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"en-US,en;q=0.8";s:11:"HTTP_COOKIE";s:0:"";s:9:"HTTP_HOST";s:18:"nathanaeljones.com";s:12:"HTTP_REFERER";s:52:"http://nathanaeljones.com/wp-admin/edit-comments.php";s:15:"HTTP_USER_AGENT";s:118:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_7) AppleWebKit/534.24 (KHTML, like Gecko) Chrome/11.0.696.71 Safari/534.24";s:11:"HTTP_ORIGIN";s:25:"http://nathanaeljones.com";s:21:"HTTP_X_REQUESTED_WITH";s:14:"XMLHttpRequest";s:13:"DOCUMENT_ROOT";s:23:"C:Websitesndj-wordpress";s:15:"SCRIPT_FILENAME";s:45:"C:Websitesndj-wordpresswp-adminadmin-ajax.php";s:20:"IIS_UrlRewriteModule";s:1:"1";s:12:"APPL_MD_PATH";s:16:"/LM/W3SVC/2/ROOT";s:18:"APPL_PHYSICAL_PATH";s:23:"C:Websitesndj-wordpress";s:9:"AUTH_TYPE";s:0:"";s:13:"AUTH_PASSWORD";s:0:"";s:9:"AUTH_USER";s:0:"";s:11:"CERT_COOKIE";s:0:"";s:10:"CERT_FLAGS";s:0:"";s:11:"CERT_ISSUER";s:0:"";s:17:"CERT_SERIALNUMBER";s:0:"";s:12:"CERT_SUBJECT";s:0:"";s:14:"CONTENT_LENGTH";s:3:"362";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:5:"HTTPS";s:3:"off";s:13:"HTTPS_KEYSIZE";s:0:"";s:19:"HTTPS_SECRETKEYSIZE";s:0:"";s:19:"HTTPS_SERVER_ISSUER";s:0:"";s:20:"HTTPS_SERVER_SUBJECT";s:0:"";s:11:"INSTANCE_ID";s:1:"2";s:18:"INSTANCE_META_PATH";s:11:"/LM/W3SVC/2";s:10:"LOCAL_ADDR";s:12:"66.29.219.39";s:10:"LOGON_USER";s:0:"";s:15:"PATH_TRANSLATED";s:45:"C:Websitesndj-wordpresswp-adminadmin-ajax.php";s:12:"QUERY_STRING";s:0:"";s:11:"REMOTE_ADDR";s:13:"93.146.244.69";s:11:"REMOTE_HOST";s:13:"93.146.244.69";s:11:"REMOTE_PORT";s:5:"61317";s:11:"REMOTE_USER";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:11:"SCRIPT_NAME";s:24:"/wp-admin/admin-ajax.php";s:11:"SERVER_NAME";s:18:"nathanaeljones.com";s:11:"SERVER_PORT";s:2:"80";s:18:"SERVER_PORT_SECURE";s:1:"0";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:3:"URL";s:24:"/wp-admin/admin-ajax.php";s:14:"ORIG_PATH_INFO";s:24:"/wp-admin/admin-ajax.php";s:8:"PHP_SELF";s:24:"/wp-admin/admin-ajax.php";s:12:"REQUEST_TIME";s:10:"1306999945";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6172</wp:comment_id>
			<wp:comment_author><![CDATA[Al]]></wp:comment_author>
			<wp:comment_author_email>fghfgh@gfhfgh.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>89.145.102.10</wp:comment_author_IP>
			<wp:comment_date>2011-06-14 08:28:53</wp:comment_date>
			<wp:comment_date_gmt>2011-06-14 12:28:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This should be nicely wrapped up as a nuget feed!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1308054533.9741";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:112:{s:15:"comment_post_ID";s:3:"573";s:14:"comment_author";s:2:"Al";s:20:"comment_author_email";s:17:"fghfgh@gfhfgh.com";s:18:"comment_author_url";s:0:"";s:15:"comment_content";s:49:"This should be nicely wrapped up as a nuget feed!";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:13:"89.145.102.10";s:10:"user_agent";s:74:"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:2.0.1) Gecko/20100101 Firefox/4.0.1";s:8:"referrer";s:77:"http://nathanaeljones.com/573/combining-jcrop-and-server-side-image-resizing/";s:4:"blog";s:25:"http://nathanaeljones.com";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:77:"http://nathanaeljones.com/573/combining-jcrop-and-server-side-image-resizing/";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:2:"Al";s:10:"POST_email";s:17:"fghfgh@gfhfgh.com";s:8:"POST_url";s:0:"";s:12:"POST_comment";s:49:"This should be nicely wrapped up as a nuget feed!";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:3:"573";s:19:"POST_comment_parent";s:1:"0";s:26:"POST_akismet_comment_nonce";s:10:"1317464ce7";s:15:"SERVER_SOFTWARE";s:17:"Microsoft-IIS/7.0";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:21:"PHP_FCGI_MAX_REQUESTS";s:5:"10000";s:5:"PHPRC";s:18:"C:Program FilesPHP";s:15:"ALLUSERSPROFILE";s:13:"C:ProgramData";s:7:"APPDATA";s:50:"C:Windowssystem32configsystemprofileAppDataRoaming";s:11:"APP_POOL_ID";s:13:"ndj-wordpress";s:18:"CommonProgramFiles";s:27:"C:Program FilesCommon Files";s:12:"COMPUTERNAME";s:6:"DED793";s:7:"ComSpec";s:24:"C:Windowssystem32cmd.exe";s:16:"FP_NO_HOST_CHECK";s:2:"NO";s:12:"LOCALAPPDATA";s:48:"C:Windowssystem32configsystemprofileAppDataLocal";s:20:"NUMBER_OF_PROCESSORS";s:1:"2";s:2:"OS";s:10:"Windows_NT";s:4:"Path";s:306:"C:Program FilesPHP;C:Windowssystem32;C:Windows;C:WindowsSystem32Wbem;C:Program FilesMySQLMySQL Server 5.0bin;C:WindowsSystem32WindowsPowerShellv1.0;c:Program FilesMicrosoft SQL Server100ToolsBinn;c:Program FilesMicrosoft SQL Server100DTSBinn;c:Program FilesMicrosoft SQL Server100ToolsBinnVSShellCommon7IDE";s:7:"PATHEXT";s:53:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC";s:22:"PROCESSOR_ARCHITECTURE";s:3:"x86";s:20:"PROCESSOR_IDENTIFIER";s:46:"x86 Family 15 Model 4 Stepping 1, GenuineIntel";s:15:"PROCESSOR_LEVEL";s:2:"15";s:18:"PROCESSOR_REVISION";s:4:"0401";s:11:"ProgramData";s:13:"C:ProgramData";s:12:"ProgramFiles";s:15:"C:Program Files";s:12:"PSModulePath";s:45:"C:Windowssystem32WindowsPowerShellv1.0Modules";s:6:"PUBLIC";s:13:"C:UsersPublic";s:11:"SystemDrive";s:2:"C:";s:10:"SystemRoot";s:9:"C:Windows";s:4:"TEMP";s:13:"C:WindowsTEMP";s:3:"TMP";s:13:"C:WindowsTEMP";s:10:"USERDOMAIN";s:15:"MAXIMUMASPLOCAL";s:8:"USERNAME";s:7:"DED793$";s:11:"USERPROFILE";s:36:"C:Windowssystem32configsystemprofile";s:6:"windir";s:9:"C:Windows";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:15:"HTTP_CONNECTION";s:10:"Keep-Alive";s:15:"HTTP_KEEP_ALIVE";s:3:"115";s:8:"HTTP_VIA";s:8:"1.1 TMG1";s:19:"HTTP_CONTENT_LENGTH";s:3:"212";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:19:"HTTP_ACCEPT_CHARSET";s:30:"ISO-8859-1,utf-8;q=0.7,*;q=0.7";s:20:"HTTP_ACCEPT_ENCODING";s:4:"gzip";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"en-gb,en;q=0.5";s:11:"HTTP_COOKIE";s:0:"";s:9:"HTTP_HOST";s:18:"nathanaeljones.com";s:12:"HTTP_REFERER";s:77:"http://nathanaeljones.com/573/combining-jcrop-and-server-side-image-resizing/";s:15:"HTTP_USER_AGENT";s:74:"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:2.0.1) Gecko/20100101 Firefox/4.0.1";s:13:"DOCUMENT_ROOT";s:23:"C:Websitesndj-wordpress";s:15:"SCRIPT_FILENAME";s:43:"C:Websitesndj-wordpresswp-comments-post.php";s:20:"IIS_UrlRewriteModule";s:1:"1";s:12:"APPL_MD_PATH";s:16:"/LM/W3SVC/2/ROOT";s:18:"APPL_PHYSICAL_PATH";s:23:"C:Websitesndj-wordpress";s:9:"AUTH_TYPE";s:0:"";s:13:"AUTH_PASSWORD";s:0:"";s:9:"AUTH_USER";s:0:"";s:11:"CERT_COOKIE";s:0:"";s:10:"CERT_FLAGS";s:0:"";s:11:"CERT_ISSUER";s:0:"";s:17:"CERT_SERIALNUMBER";s:0:"";s:12:"CERT_SUBJECT";s:0:"";s:14:"CONTENT_LENGTH";s:3:"212";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:5:"HTTPS";s:3:"off";s:13:"HTTPS_KEYSIZE";s:0:"";s:19:"HTTPS_SECRETKEYSIZE";s:0:"";s:19:"HTTPS_SERVER_ISSUER";s:0:"";s:20:"HTTPS_SERVER_SUBJECT";s:0:"";s:11:"INSTANCE_ID";s:1:"2";s:18:"INSTANCE_META_PATH";s:11:"/LM/W3SVC/2";s:10:"LOCAL_ADDR";s:12:"66.29.219.39";s:10:"LOGON_USER";s:0:"";s:15:"PATH_TRANSLATED";s:43:"C:Websitesndj-wordpresswp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:11:"REMOTE_ADDR";s:13:"89.145.102.10";s:11:"REMOTE_HOST";s:13:"89.145.102.10";s:11:"REMOTE_PORT";s:5:"34789";s:11:"REMOTE_USER";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:11:"SERVER_NAME";s:18:"nathanaeljones.com";s:11:"SERVER_PORT";s:2:"80";s:18:"SERVER_PORT_SECURE";s:1:"0";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:3:"URL";s:21:"/wp-comments-post.php";s:14:"ORIG_PATH_INFO";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1308054533";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1308123684.4433";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6198</wp:comment_id>
			<wp:comment_author><![CDATA[Steve B]]></wp:comment_author>
			<wp:comment_author_email>sboschi@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.steveboschi.com</wp:comment_author_url>
			<wp:comment_author_IP>68.195.87.213</wp:comment_author_IP>
			<wp:comment_date>2011-06-14 19:00:33</wp:comment_date>
			<wp:comment_date_gmt>2011-06-14 23:00:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Wow.  That&#039;s impressive.  Can&#039;t wait to use this. 
 
Thanks for sharing ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1308106833.8911";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:109:{s:15:"comment_post_ID";s:3:"573";s:14:"comment_author";s:7:"Steve B";s:20:"comment_author_email";s:19:"sboschi@hotmail.com";s:18:"comment_author_url";s:19:"www.steveboschi.com";s:15:"comment_content";s:71:"Wow.  That's impressive.  Can't wait to use this.

Thanks for sharing";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:13:"68.195.87.213";s:10:"user_agent";s:63:"Opera/9.80 (Windows NT 6.0; U; en) Presto/2.8.131 Version/11.11";s:8:"referrer";s:77:"http://nathanaeljones.com/573/combining-jcrop-and-server-side-image-resizing/";s:4:"blog";s:25:"http://nathanaeljones.com";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:77:"http://nathanaeljones.com/573/combining-jcrop-and-server-side-image-resizing/";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:7:"Steve B";s:10:"POST_email";s:19:"sboschi@hotmail.com";s:8:"POST_url";s:19:"www.steveboschi.com";s:12:"POST_comment";s:71:"Wow.  That's impressive.  Can't wait to use this.

Thanks for sharing";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:3:"573";s:19:"POST_comment_parent";s:1:"0";s:26:"POST_akismet_comment_nonce";s:10:"f1d0b0176f";s:15:"SERVER_SOFTWARE";s:17:"Microsoft-IIS/7.0";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:21:"PHP_FCGI_MAX_REQUESTS";s:5:"10000";s:5:"PHPRC";s:18:"C:Program FilesPHP";s:15:"ALLUSERSPROFILE";s:13:"C:ProgramData";s:7:"APPDATA";s:50:"C:Windowssystem32configsystemprofileAppDataRoaming";s:11:"APP_POOL_ID";s:13:"ndj-wordpress";s:18:"CommonProgramFiles";s:27:"C:Program FilesCommon Files";s:12:"COMPUTERNAME";s:6:"DED793";s:7:"ComSpec";s:24:"C:Windowssystem32cmd.exe";s:16:"FP_NO_HOST_CHECK";s:2:"NO";s:12:"LOCALAPPDATA";s:48:"C:Windowssystem32configsystemprofileAppDataLocal";s:20:"NUMBER_OF_PROCESSORS";s:1:"2";s:2:"OS";s:10:"Windows_NT";s:4:"Path";s:306:"C:Program FilesPHP;C:Windowssystem32;C:Windows;C:WindowsSystem32Wbem;C:Program FilesMySQLMySQL Server 5.0bin;C:WindowsSystem32WindowsPowerShellv1.0;c:Program FilesMicrosoft SQL Server100ToolsBinn;c:Program FilesMicrosoft SQL Server100DTSBinn;c:Program FilesMicrosoft SQL Server100ToolsBinnVSShellCommon7IDE";s:7:"PATHEXT";s:53:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC";s:22:"PROCESSOR_ARCHITECTURE";s:3:"x86";s:20:"PROCESSOR_IDENTIFIER";s:46:"x86 Family 15 Model 4 Stepping 1, GenuineIntel";s:15:"PROCESSOR_LEVEL";s:2:"15";s:18:"PROCESSOR_REVISION";s:4:"0401";s:11:"ProgramData";s:13:"C:ProgramData";s:12:"ProgramFiles";s:15:"C:Program Files";s:12:"PSModulePath";s:45:"C:Windowssystem32WindowsPowerShellv1.0Modules";s:6:"PUBLIC";s:13:"C:UsersPublic";s:11:"SystemDrive";s:2:"C:";s:10:"SystemRoot";s:9:"C:Windows";s:4:"TEMP";s:13:"C:WindowsTEMP";s:3:"TMP";s:13:"C:WindowsTEMP";s:10:"USERDOMAIN";s:15:"MAXIMUMASPLOCAL";s:8:"USERNAME";s:7:"DED793$";s:11:"USERPROFILE";s:36:"C:Windowssystem32configsystemprofile";s:6:"windir";s:9:"C:Windows";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:15:"HTTP_CONNECTION";s:10:"Keep-Alive";s:19:"HTTP_CONTENT_LENGTH";s:3:"270";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:129:"text/html, application/xml;q=0.9, application/xhtml+xml, image/png, image/webp, image/jpeg, image/gif, image/x-xbitmap, */*;q=0.1";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"en-US,en;q=0.9";s:11:"HTTP_COOKIE";s:0:"";s:9:"HTTP_HOST";s:18:"nathanaeljones.com";s:12:"HTTP_REFERER";s:77:"http://nathanaeljones.com/573/combining-jcrop-and-server-side-image-resizing/";s:15:"HTTP_USER_AGENT";s:63:"Opera/9.80 (Windows NT 6.0; U; en) Presto/2.8.131 Version/11.11";s:13:"DOCUMENT_ROOT";s:23:"C:Websitesndj-wordpress";s:15:"SCRIPT_FILENAME";s:43:"C:Websitesndj-wordpresswp-comments-post.php";s:20:"IIS_UrlRewriteModule";s:1:"1";s:12:"APPL_MD_PATH";s:16:"/LM/W3SVC/2/ROOT";s:18:"APPL_PHYSICAL_PATH";s:23:"C:Websitesndj-wordpress";s:9:"AUTH_TYPE";s:0:"";s:13:"AUTH_PASSWORD";s:0:"";s:9:"AUTH_USER";s:0:"";s:11:"CERT_COOKIE";s:0:"";s:10:"CERT_FLAGS";s:0:"";s:11:"CERT_ISSUER";s:0:"";s:17:"CERT_SERIALNUMBER";s:0:"";s:12:"CERT_SUBJECT";s:0:"";s:14:"CONTENT_LENGTH";s:3:"270";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:5:"HTTPS";s:3:"off";s:13:"HTTPS_KEYSIZE";s:0:"";s:19:"HTTPS_SECRETKEYSIZE";s:0:"";s:19:"HTTPS_SERVER_ISSUER";s:0:"";s:20:"HTTPS_SERVER_SUBJECT";s:0:"";s:11:"INSTANCE_ID";s:1:"2";s:18:"INSTANCE_META_PATH";s:11:"/LM/W3SVC/2";s:10:"LOCAL_ADDR";s:12:"66.29.219.39";s:10:"LOGON_USER";s:0:"";s:15:"PATH_TRANSLATED";s:43:"C:Websitesndj-wordpresswp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:11:"REMOTE_ADDR";s:13:"68.195.87.213";s:11:"REMOTE_HOST";s:13:"68.195.87.213";s:11:"REMOTE_PORT";s:5:"51090";s:11:"REMOTE_USER";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:11:"SERVER_NAME";s:18:"nathanaeljones.com";s:11:"SERVER_PORT";s:2:"80";s:18:"SERVER_PORT_SECURE";s:1:"0";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:3:"URL";s:21:"/wp-comments-post.php";s:14:"ORIG_PATH_INFO";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1308106833";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1308123682.3807";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6216</wp:comment_id>
			<wp:comment_author><![CDATA[Nathanael Jones]]></wp:comment_author>
			<wp:comment_author_email>nathanael.jones@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>93.146.244.98</wp:comment_author_IP>
			<wp:comment_date>2011-06-15 08:36:24</wp:comment_date>
			<wp:comment_date_gmt>2011-06-15 12:36:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Al - I just uploaded it, it&#039;s listed under ImageResizer.Samples.Jcrop ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>6172</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1308155784.1808";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:110:{s:15:"comment_post_ID";s:3:"573";s:14:"comment_author";s:15:"Nathanael Jones";s:20:"comment_author_email";s:25:"nathanael.jones@gmail.com";s:18:"comment_author_url";s:0:"";s:15:"comment_content";s:70:"@Al - I just uploaded it, it's listed under ImageResizer.Samples.Jcrop";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:4:"6172";s:7:"user_ID";s:1:"1";s:7:"user_ip";s:13:"93.146.244.98";s:10:"user_agent";s:118:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_7) AppleWebKit/534.30 (KHTML, like Gecko) Chrome/12.0.742.91 Safari/534.30";s:8:"referrer";s:77:"http://nathanaeljones.com/573/combining-jcrop-and-server-side-image-resizing/";s:4:"blog";s:25:"http://nathanaeljones.com";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:77:"http://nathanaeljones.com/573/combining-jcrop-and-server-side-image-resizing/";s:9:"user_role";s:13:"administrator";s:21:"akismet_comment_nonce";s:6:"passed";s:12:"POST_comment";s:70:"@Al - I just uploaded it, it's listed under ImageResizer.Samples.Jcrop";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:3:"573";s:19:"POST_comment_parent";s:4:"6172";s:32:"POST__wp_unfiltered_html_comment";s:10:"d051952f1a";s:26:"POST_akismet_comment_nonce";s:10:"9be1367dfc";s:15:"SERVER_SOFTWARE";s:17:"Microsoft-IIS/7.0";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:21:"PHP_FCGI_MAX_REQUESTS";s:5:"10000";s:5:"PHPRC";s:18:"C:Program FilesPHP";s:15:"ALLUSERSPROFILE";s:13:"C:ProgramData";s:7:"APPDATA";s:50:"C:Windowssystem32configsystemprofileAppDataRoaming";s:11:"APP_POOL_ID";s:13:"ndj-wordpress";s:18:"CommonProgramFiles";s:27:"C:Program FilesCommon Files";s:12:"COMPUTERNAME";s:6:"DED793";s:7:"ComSpec";s:24:"C:Windowssystem32cmd.exe";s:16:"FP_NO_HOST_CHECK";s:2:"NO";s:12:"LOCALAPPDATA";s:48:"C:Windowssystem32configsystemprofileAppDataLocal";s:20:"NUMBER_OF_PROCESSORS";s:1:"2";s:2:"OS";s:10:"Windows_NT";s:4:"Path";s:306:"C:Program FilesPHP;C:Windowssystem32;C:Windows;C:WindowsSystem32Wbem;C:Program FilesMySQLMySQL Server 5.0bin;C:WindowsSystem32WindowsPowerShellv1.0;c:Program FilesMicrosoft SQL Server100ToolsBinn;c:Program FilesMicrosoft SQL Server100DTSBinn;c:Program FilesMicrosoft SQL Server100ToolsBinnVSShellCommon7IDE";s:7:"PATHEXT";s:53:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC";s:22:"PROCESSOR_ARCHITECTURE";s:3:"x86";s:20:"PROCESSOR_IDENTIFIER";s:46:"x86 Family 15 Model 4 Stepping 1, GenuineIntel";s:15:"PROCESSOR_LEVEL";s:2:"15";s:18:"PROCESSOR_REVISION";s:4:"0401";s:11:"ProgramData";s:13:"C:ProgramData";s:12:"ProgramFiles";s:15:"C:Program Files";s:12:"PSModulePath";s:45:"C:Windowssystem32WindowsPowerShellv1.0Modules";s:6:"PUBLIC";s:13:"C:UsersPublic";s:11:"SystemDrive";s:2:"C:";s:10:"SystemRoot";s:9:"C:Windows";s:4:"TEMP";s:13:"C:WindowsTEMP";s:3:"TMP";s:13:"C:WindowsTEMP";s:10:"USERDOMAIN";s:15:"MAXIMUMASPLOCAL";s:8:"USERNAME";s:7:"DED793$";s:11:"USERPROFILE";s:36:"C:Windowssystem32configsystemprofile";s:6:"windir";s:9:"C:Windows";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:18:"HTTP_CACHE_CONTROL";s:9:"max-age=0";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:19:"HTTP_CONTENT_LENGTH";s:3:"238";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:19:"HTTP_ACCEPT_CHARSET";s:30:"ISO-8859-1,utf-8;q=0.7,*;q=0.3";s:20:"HTTP_ACCEPT_ENCODING";s:17:"gzip,deflate,sdch";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"en-US,en;q=0.8";s:11:"HTTP_COOKIE";s:0:"";s:9:"HTTP_HOST";s:18:"nathanaeljones.com";s:12:"HTTP_REFERER";s:77:"http://nathanaeljones.com/573/combining-jcrop-and-server-side-image-resizing/";s:15:"HTTP_USER_AGENT";s:118:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_7) AppleWebKit/534.30 (KHTML, like Gecko) Chrome/12.0.742.91 Safari/534.30";s:11:"HTTP_ORIGIN";s:25:"http://nathanaeljones.com";s:13:"DOCUMENT_ROOT";s:23:"C:Websitesndj-wordpress";s:15:"SCRIPT_FILENAME";s:43:"C:Websitesndj-wordpresswp-comments-post.php";s:20:"IIS_UrlRewriteModule";s:1:"1";s:12:"APPL_MD_PATH";s:16:"/LM/W3SVC/2/ROOT";s:18:"APPL_PHYSICAL_PATH";s:23:"C:Websitesndj-wordpress";s:9:"AUTH_TYPE";s:0:"";s:13:"AUTH_PASSWORD";s:0:"";s:9:"AUTH_USER";s:0:"";s:11:"CERT_COOKIE";s:0:"";s:10:"CERT_FLAGS";s:0:"";s:11:"CERT_ISSUER";s:0:"";s:17:"CERT_SERIALNUMBER";s:0:"";s:12:"CERT_SUBJECT";s:0:"";s:14:"CONTENT_LENGTH";s:3:"238";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:5:"HTTPS";s:3:"off";s:13:"HTTPS_KEYSIZE";s:0:"";s:19:"HTTPS_SECRETKEYSIZE";s:0:"";s:19:"HTTPS_SERVER_ISSUER";s:0:"";s:20:"HTTPS_SERVER_SUBJECT";s:0:"";s:11:"INSTANCE_ID";s:1:"2";s:18:"INSTANCE_META_PATH";s:11:"/LM/W3SVC/2";s:10:"LOCAL_ADDR";s:12:"66.29.219.39";s:10:"LOGON_USER";s:0:"";s:15:"PATH_TRANSLATED";s:43:"C:Websitesndj-wordpresswp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:11:"REMOTE_ADDR";s:13:"93.146.244.98";s:11:"REMOTE_HOST";s:13:"93.146.244.98";s:11:"REMOTE_PORT";s:5:"59321";s:11:"REMOTE_USER";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:11:"SERVER_NAME";s:18:"nathanaeljones.com";s:11:"SERVER_PORT";s:2:"80";s:18:"SERVER_PORT_SECURE";s:1:"0";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:3:"URL";s:21:"/wp-comments-post.php";s:14:"ORIG_PATH_INFO";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1308155782";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6955</wp:comment_id>
			<wp:comment_author><![CDATA[Asif Iqbal]]></wp:comment_author>
			<wp:comment_author_email>webwizo@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.webwizo.com</wp:comment_author_url>
			<wp:comment_author_IP>110.34.39.226</wp:comment_author_IP>
			<wp:comment_date>2011-07-27 22:11:34</wp:comment_date>
			<wp:comment_date_gmt>2011-07-28 02:11:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I just loved it! It is really easy and awesome, I must use this next time in my project. 
 
Thanks man =) ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1311833494.9963";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:114:{s:15:"comment_post_ID";s:3:"573";s:14:"comment_author";s:10:"Asif Iqbal";s:20:"comment_author_email";s:19:"webwizo@hotmail.com";s:18:"comment_author_url";s:22:"http://www.webwizo.com";s:15:"comment_content";s:105:"I just loved it! It is really easy and awesome, I must use this next time in my project.

Thanks man =)";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:13:"110.34.39.226";s:10:"user_agent";s:63:"Mozilla/5.0 (Windows NT 6.1; rv:5.0) Gecko/20100101 Firefox/5.0";s:8:"referrer";s:77:"http://nathanaeljones.com/573/combining-jcrop-and-server-side-image-resizing/";s:4:"blog";s:25:"http://nathanaeljones.com";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:77:"http://nathanaeljones.com/573/combining-jcrop-and-server-side-image-resizing/";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:10:"Asif Iqbal";s:10:"POST_email";s:19:"webwizo@hotmail.com";s:8:"POST_url";s:22:"http://www.webwizo.com";s:12:"POST_comment";s:105:"I just loved it! It is really easy and awesome, I must use this next time in my project.

Thanks man =)";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:3:"573";s:19:"POST_comment_parent";s:1:"0";s:26:"POST_akismet_comment_nonce";s:10:"f638c236b5";s:15:"SERVER_SOFTWARE";s:17:"Microsoft-IIS/7.0";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:21:"PHP_FCGI_MAX_REQUESTS";s:5:"10000";s:5:"PHPRC";s:18:"C:Program FilesPHP";s:15:"ALLUSERSPROFILE";s:13:"C:ProgramData";s:7:"APPDATA";s:50:"C:Windowssystem32configsystemprofileAppDataRoaming";s:11:"APP_POOL_ID";s:13:"ndj-wordpress";s:18:"CommonProgramFiles";s:27:"C:Program FilesCommon Files";s:12:"COMPUTERNAME";s:6:"DED793";s:7:"ComSpec";s:24:"C:Windowssystem32cmd.exe";s:16:"FP_NO_HOST_CHECK";s:2:"NO";s:12:"LOCALAPPDATA";s:48:"C:Windowssystem32configsystemprofileAppDataLocal";s:20:"NUMBER_OF_PROCESSORS";s:1:"2";s:2:"OS";s:10:"Windows_NT";s:4:"Path";s:306:"C:Program FilesPHP;C:Windowssystem32;C:Windows;C:WindowsSystem32Wbem;C:Program FilesMySQLMySQL Server 5.0bin;C:WindowsSystem32WindowsPowerShellv1.0;c:Program FilesMicrosoft SQL Server100ToolsBinn;c:Program FilesMicrosoft SQL Server100DTSBinn;c:Program FilesMicrosoft SQL Server100ToolsBinnVSShellCommon7IDE";s:7:"PATHEXT";s:53:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC";s:22:"PROCESSOR_ARCHITECTURE";s:3:"x86";s:20:"PROCESSOR_IDENTIFIER";s:46:"x86 Family 15 Model 4 Stepping 1, GenuineIntel";s:15:"PROCESSOR_LEVEL";s:2:"15";s:18:"PROCESSOR_REVISION";s:4:"0401";s:11:"ProgramData";s:13:"C:ProgramData";s:12:"ProgramFiles";s:15:"C:Program Files";s:12:"PSModulePath";s:45:"C:Windowssystem32WindowsPowerShellv1.0Modules";s:6:"PUBLIC";s:13:"C:UsersPublic";s:11:"SystemDrive";s:2:"C:";s:10:"SystemRoot";s:9:"C:Windows";s:4:"TEMP";s:13:"C:WindowsTEMP";s:3:"TMP";s:13:"C:WindowsTEMP";s:10:"USERDOMAIN";s:15:"MAXIMUMASPLOCAL";s:8:"USERNAME";s:7:"DED793$";s:11:"USERPROFILE";s:36:"C:Windowssystem32configsystemprofile";s:6:"windir";s:9:"C:Windows";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:18:"HTTP_CACHE_CONTROL";s:14:"max-age=259200";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:8:"HTTP_VIA";s:40:"1.1 linux-xae4.site (squid/3.0.STABLE18)";s:19:"HTTP_CONTENT_LENGTH";s:3:"320";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:19:"HTTP_ACCEPT_CHARSET";s:30:"ISO-8859-1,utf-8;q=0.7,*;q=0.7";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"en-us,en;q=0.5";s:11:"HTTP_COOKIE";s:0:"";s:9:"HTTP_HOST";s:18:"nathanaeljones.com";s:12:"HTTP_REFERER";s:77:"http://nathanaeljones.com/573/combining-jcrop-and-server-side-image-resizing/";s:15:"HTTP_USER_AGENT";s:63:"Mozilla/5.0 (Windows NT 6.1; rv:5.0) Gecko/20100101 Firefox/5.0";s:25:"HTTP_SURROGATE_CAPABILITY";s:32:"unset-id="Surrogate/1.0 ESI/1.0"";s:20:"HTTP_X_FORWARDED_FOR";s:14:"192.168.11.158";s:13:"DOCUMENT_ROOT";s:23:"C:Websitesndj-wordpress";s:15:"SCRIPT_FILENAME";s:43:"C:Websitesndj-wordpresswp-comments-post.php";s:20:"IIS_UrlRewriteModule";s:1:"1";s:12:"APPL_MD_PATH";s:16:"/LM/W3SVC/2/ROOT";s:18:"APPL_PHYSICAL_PATH";s:23:"C:Websitesndj-wordpress";s:9:"AUTH_TYPE";s:0:"";s:13:"AUTH_PASSWORD";s:0:"";s:9:"AUTH_USER";s:0:"";s:11:"CERT_COOKIE";s:0:"";s:10:"CERT_FLAGS";s:0:"";s:11:"CERT_ISSUER";s:0:"";s:17:"CERT_SERIALNUMBER";s:0:"";s:12:"CERT_SUBJECT";s:0:"";s:14:"CONTENT_LENGTH";s:3:"320";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:5:"HTTPS";s:3:"off";s:13:"HTTPS_KEYSIZE";s:0:"";s:19:"HTTPS_SECRETKEYSIZE";s:0:"";s:19:"HTTPS_SERVER_ISSUER";s:0:"";s:20:"HTTPS_SERVER_SUBJECT";s:0:"";s:11:"INSTANCE_ID";s:1:"2";s:18:"INSTANCE_META_PATH";s:11:"/LM/W3SVC/2";s:10:"LOCAL_ADDR";s:12:"66.29.219.39";s:10:"LOGON_USER";s:0:"";s:15:"PATH_TRANSLATED";s:43:"C:Websitesndj-wordpresswp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:11:"REMOTE_ADDR";s:13:"110.34.39.226";s:11:"REMOTE_HOST";s:13:"110.34.39.226";s:11:"REMOTE_PORT";s:5:"39020";s:11:"REMOTE_USER";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:11:"SERVER_NAME";s:18:"nathanaeljones.com";s:11:"SERVER_PORT";s:2:"80";s:18:"SERVER_PORT_SECURE";s:1:"0";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.0";s:3:"URL";s:21:"/wp-comments-post.php";s:14:"ORIG_PATH_INFO";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1311833494";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1312297275.3816";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6969</wp:comment_id>
			<wp:comment_author><![CDATA[Richard Long]]></wp:comment_author>
			<wp:comment_author_email>rlong405@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>92.28.78.138</wp:comment_author_IP>
			<wp:comment_date>2011-07-31 13:40:32</wp:comment_date>
			<wp:comment_date_gmt>2011-07-31 17:40:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, 
 
I&#039;m attempting to adopt this into a asp website using VB rather than C# and also using images uploaded by the user; 
 
I have modified it and the cropping works when you click on the &quot;view the result&quot; link but not when you click send to server. 
 
I think this is because I am not implementing either the JCropExample.csproj or the .designer.cs files correctly. All I have done is change the first line on the .designer.cs file from &quot;public partial class Advanced&quot; to public partial class Default2 (name of vb page I have adapted from Advanced.aspx). 
 
Is this possibly because the .designer.cs files are c# only or do I need to modify further code in this file. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1312148433.0758";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:110:{s:15:"comment_post_ID";s:3:"573";s:14:"comment_author";s:12:"Richard Long";s:20:"comment_author_email";s:18:"rlong405@gmail.com";s:18:"comment_author_url";s:0:"";s:15:"comment_content";s:670:"Hi,

I'm attempting to adopt this into a asp website using VB rather than C# and also using images uploaded by the user;

I have modified it and the cropping works when you click on the "view the result" link but not when you click send to server.

I think this is because I am not implementing either the JCropExample.csproj or the .designer.cs files correctly. All I have done is change the first line on the .designer.cs file from "public partial class Advanced" to public partial class Default2 (name of vb page I have adapted from Advanced.aspx).

Is this possibly because the .designer.cs files are c# only or do I need to modify further code in this file.";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:12:"92.28.78.138";s:10:"user_agent";s:70:"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:5.0) Gecko/20100101 Firefox/5.0";s:8:"referrer";s:77:"http://nathanaeljones.com/573/combining-jcrop-and-server-side-image-resizing/";s:4:"blog";s:25:"http://nathanaeljones.com";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:77:"http://nathanaeljones.com/573/combining-jcrop-and-server-side-image-resizing/";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:12:"Richard Long";s:10:"POST_email";s:18:"rlong405@gmail.com";s:8:"POST_url";s:0:"";s:12:"POST_comment";s:678:"
Hi,

I'm attempting to adopt this into a asp website using VB rather than C# and also using images uploaded by the user;

I have modified it and the cropping works when you click on the "view the result" link but not when you click send to server.

I think this is because I am not implementing either the JCropExample.csproj or the .designer.cs files correctly. All I have done is change the first line on the .designer.cs file from "public partial class Advanced" to public partial class Default2 (name of vb page I have adapted from Advanced.aspx).

Is this possibly because the .designer.cs files are c# only or do I need to modify further code in this file.  

";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:3:"573";s:19:"POST_comment_parent";s:1:"0";s:26:"POST_akismet_comment_nonce";s:10:"b990df0ded";s:15:"SERVER_SOFTWARE";s:17:"Microsoft-IIS/7.0";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:21:"PHP_FCGI_MAX_REQUESTS";s:5:"10000";s:5:"PHPRC";s:18:"C:Program FilesPHP";s:15:"ALLUSERSPROFILE";s:13:"C:ProgramData";s:7:"APPDATA";s:50:"C:Windowssystem32configsystemprofileAppDataRoaming";s:11:"APP_POOL_ID";s:13:"ndj-wordpress";s:18:"CommonProgramFiles";s:27:"C:Program FilesCommon Files";s:12:"COMPUTERNAME";s:6:"DED793";s:7:"ComSpec";s:24:"C:Windowssystem32cmd.exe";s:16:"FP_NO_HOST_CHECK";s:2:"NO";s:12:"LOCALAPPDATA";s:48:"C:Windowssystem32configsystemprofileAppDataLocal";s:20:"NUMBER_OF_PROCESSORS";s:1:"2";s:2:"OS";s:10:"Windows_NT";s:4:"Path";s:306:"C:Program FilesPHP;C:Windowssystem32;C:Windows;C:WindowsSystem32Wbem;C:Program FilesMySQLMySQL Server 5.0bin;C:WindowsSystem32WindowsPowerShellv1.0;c:Program FilesMicrosoft SQL Server100ToolsBinn;c:Program FilesMicrosoft SQL Server100DTSBinn;c:Program FilesMicrosoft SQL Server100ToolsBinnVSShellCommon7IDE";s:7:"PATHEXT";s:53:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC";s:22:"PROCESSOR_ARCHITECTURE";s:3:"x86";s:20:"PROCESSOR_IDENTIFIER";s:46:"x86 Family 15 Model 4 Stepping 1, GenuineIntel";s:15:"PROCESSOR_LEVEL";s:2:"15";s:18:"PROCESSOR_REVISION";s:4:"0401";s:11:"ProgramData";s:13:"C:ProgramData";s:12:"ProgramFiles";s:15:"C:Program Files";s:12:"PSModulePath";s:45:"C:Windowssystem32WindowsPowerShellv1.0Modules";s:6:"PUBLIC";s:13:"C:UsersPublic";s:11:"SystemDrive";s:2:"C:";s:10:"SystemRoot";s:9:"C:Windows";s:4:"TEMP";s:13:"C:WindowsTEMP";s:3:"TMP";s:13:"C:WindowsTEMP";s:10:"USERDOMAIN";s:15:"MAXIMUMASPLOCAL";s:8:"USERNAME";s:7:"DED793$";s:11:"USERPROFILE";s:36:"C:Windowssystem32configsystemprofile";s:6:"windir";s:9:"C:Windows";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:19:"HTTP_CONTENT_LENGTH";s:3:"916";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:19:"HTTP_ACCEPT_CHARSET";s:30:"ISO-8859-1,utf-8;q=0.7,*;q=0.7";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"en-gb,en;q=0.5";s:11:"HTTP_COOKIE";s:0:"";s:9:"HTTP_HOST";s:18:"nathanaeljones.com";s:12:"HTTP_REFERER";s:77:"http://nathanaeljones.com/573/combining-jcrop-and-server-side-image-resizing/";s:15:"HTTP_USER_AGENT";s:70:"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:5.0) Gecko/20100101 Firefox/5.0";s:13:"DOCUMENT_ROOT";s:23:"C:Websitesndj-wordpress";s:15:"SCRIPT_FILENAME";s:43:"C:Websitesndj-wordpresswp-comments-post.php";s:20:"IIS_UrlRewriteModule";s:1:"1";s:12:"APPL_MD_PATH";s:16:"/LM/W3SVC/2/ROOT";s:18:"APPL_PHYSICAL_PATH";s:23:"C:Websitesndj-wordpress";s:9:"AUTH_TYPE";s:0:"";s:13:"AUTH_PASSWORD";s:0:"";s:9:"AUTH_USER";s:0:"";s:11:"CERT_COOKIE";s:0:"";s:10:"CERT_FLAGS";s:0:"";s:11:"CERT_ISSUER";s:0:"";s:17:"CERT_SERIALNUMBER";s:0:"";s:12:"CERT_SUBJECT";s:0:"";s:14:"CONTENT_LENGTH";s:3:"916";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:5:"HTTPS";s:3:"off";s:13:"HTTPS_KEYSIZE";s:0:"";s:19:"HTTPS_SECRETKEYSIZE";s:0:"";s:19:"HTTPS_SERVER_ISSUER";s:0:"";s:20:"HTTPS_SERVER_SUBJECT";s:0:"";s:11:"INSTANCE_ID";s:1:"2";s:18:"INSTANCE_META_PATH";s:11:"/LM/W3SVC/2";s:10:"LOCAL_ADDR";s:12:"66.29.219.39";s:10:"LOGON_USER";s:0:"";s:15:"PATH_TRANSLATED";s:43:"C:Websitesndj-wordpresswp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:11:"REMOTE_ADDR";s:12:"92.28.78.138";s:11:"REMOTE_HOST";s:12:"92.28.78.138";s:11:"REMOTE_PORT";s:5:"53153";s:11:"REMOTE_USER";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:11:"SERVER_NAME";s:18:"nathanaeljones.com";s:11:"SERVER_PORT";s:2:"80";s:18:"SERVER_PORT_SECURE";s:1:"0";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:3:"URL";s:21:"/wp-comments-post.php";s:14:"ORIG_PATH_INFO";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1312148431";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1312297277.2735";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6974</wp:comment_id>
			<wp:comment_author><![CDATA[Nathanael Jones]]></wp:comment_author>
			<wp:comment_author_email>nathanael.jones@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>2.45.239.236</wp:comment_author_IP>
			<wp:comment_date>2011-08-02 07:02:33</wp:comment_date>
			<wp:comment_date_gmt>2011-08-02 11:02:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[If you could e-mail me your current VB files at support@imageresizing.net, I&#039;d be happy to help get the working.  
 
Best regards, 
Nathanael Jones ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>6969</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1312297353.665";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:120:{s:15:"comment_post_ID";s:3:"573";s:14:"comment_author";s:15:"Nathanael Jones";s:20:"comment_author_email";s:25:"nathanael.jones@gmail.com";s:18:"comment_author_url";s:0:"";s:15:"comment_content";s:144:"If you could e-mail me your current VB files at support@imageresizing.net, I'd be happy to help get the working. 

Best regards,
Nathanael Jones";s:14:"comment_parent";s:4:"6969";s:7:"user_ID";s:1:"1";s:7:"user_ip";s:12:"2.45.239.236";s:10:"user_agent";s:119:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/534.30 (KHTML, like Gecko) Chrome/12.0.742.122 Safari/534.30";s:8:"referrer";s:52:"http://nathanaeljones.com/wp-admin/edit-comments.php";s:4:"blog";s:25:"http://nathanaeljones.com";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:77:"http://nathanaeljones.com/573/combining-jcrop-and-server-side-image-resizing/";s:9:"user_role";s:13:"administrator";s:21:"akismet_comment_nonce";s:6:"passed";s:22:"POST_newcomment_author";s:0:"";s:28:"POST_newcomment_author_email";s:0:"";s:26:"POST_newcomment_author_url";s:0:"";s:12:"POST_user_ID";s:1:"1";s:11:"POST_action";s:15:"replyto-comment";s:15:"POST_comment_ID";s:4:"6969";s:20:"POST_comment_post_ID";s:3:"573";s:11:"POST_status";s:0:"";s:13:"POST_position";s:2:"-1";s:13:"POST_checkbox";s:1:"1";s:9:"POST_mode";s:6:"detail";s:32:"POST__ajax_nonce-replyto-comment";s:10:"7372d54448";s:32:"POST__wp_unfiltered_html_comment";s:10:"4e1f81a755";s:12:"POST_content";s:144:"If you could e-mail me your current VB files at support@imageresizing.net, I'd be happy to help get the working. 

Best regards,
Nathanael Jones";s:7:"POST_id";s:3:"573";s:21:"POST_comments_listing";s:3:"all";s:15:"SERVER_SOFTWARE";s:17:"Microsoft-IIS/7.0";s:11:"REQUEST_URI";s:24:"/wp-admin/admin-ajax.php";s:21:"PHP_FCGI_MAX_REQUESTS";s:5:"10000";s:5:"PHPRC";s:18:"C:Program FilesPHP";s:15:"ALLUSERSPROFILE";s:13:"C:ProgramData";s:7:"APPDATA";s:50:"C:Windowssystem32configsystemprofileAppDataRoaming";s:11:"APP_POOL_ID";s:13:"ndj-wordpress";s:18:"CommonProgramFiles";s:27:"C:Program FilesCommon Files";s:12:"COMPUTERNAME";s:6:"DED793";s:7:"ComSpec";s:24:"C:Windowssystem32cmd.exe";s:16:"FP_NO_HOST_CHECK";s:2:"NO";s:12:"LOCALAPPDATA";s:48:"C:Windowssystem32configsystemprofileAppDataLocal";s:20:"NUMBER_OF_PROCESSORS";s:1:"2";s:2:"OS";s:10:"Windows_NT";s:4:"Path";s:306:"C:Program FilesPHP;C:Windowssystem32;C:Windows;C:WindowsSystem32Wbem;C:Program FilesMySQLMySQL Server 5.0bin;C:WindowsSystem32WindowsPowerShellv1.0;c:Program FilesMicrosoft SQL Server100ToolsBinn;c:Program FilesMicrosoft SQL Server100DTSBinn;c:Program FilesMicrosoft SQL Server100ToolsBinnVSShellCommon7IDE";s:7:"PATHEXT";s:53:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC";s:22:"PROCESSOR_ARCHITECTURE";s:3:"x86";s:20:"PROCESSOR_IDENTIFIER";s:46:"x86 Family 15 Model 4 Stepping 1, GenuineIntel";s:15:"PROCESSOR_LEVEL";s:2:"15";s:18:"PROCESSOR_REVISION";s:4:"0401";s:11:"ProgramData";s:13:"C:ProgramData";s:12:"ProgramFiles";s:15:"C:Program Files";s:12:"PSModulePath";s:45:"C:Windowssystem32WindowsPowerShellv1.0Modules";s:6:"PUBLIC";s:13:"C:UsersPublic";s:11:"SystemDrive";s:2:"C:";s:10:"SystemRoot";s:9:"C:Windows";s:4:"TEMP";s:13:"C:WindowsTEMP";s:3:"TMP";s:13:"C:WindowsTEMP";s:10:"USERDOMAIN";s:15:"MAXIMUMASPLOCAL";s:8:"USERNAME";s:7:"DED793$";s:11:"USERPROFILE";s:36:"C:Windowssystem32configsystemprofile";s:6:"windir";s:9:"C:Windows";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:18:"HTTP_CACHE_CONTROL";s:13:"max-age=43200";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:19:"HTTP_CONTENT_LENGTH";s:3:"461";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:3:"*/*";s:19:"HTTP_ACCEPT_CHARSET";s:30:"ISO-8859-1,utf-8;q=0.7,*;q=0.3";s:20:"HTTP_ACCEPT_ENCODING";s:17:"gzip,deflate,sdch";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"en-US,en;q=0.8";s:11:"HTTP_COOKIE";s:0:"";s:9:"HTTP_HOST";s:18:"nathanaeljones.com";s:12:"HTTP_REFERER";s:52:"http://nathanaeljones.com/wp-admin/edit-comments.php";s:15:"HTTP_USER_AGENT";s:119:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/534.30 (KHTML, like Gecko) Chrome/12.0.742.122 Safari/534.30";s:11:"HTTP_ORIGIN";s:25:"http://nathanaeljones.com";s:21:"HTTP_X_REQUESTED_WITH";s:14:"XMLHttpRequest";s:13:"DOCUMENT_ROOT";s:23:"C:Websitesndj-wordpress";s:15:"SCRIPT_FILENAME";s:45:"C:Websitesndj-wordpresswp-adminadmin-ajax.php";s:20:"IIS_UrlRewriteModule";s:1:"1";s:12:"APPL_MD_PATH";s:16:"/LM/W3SVC/2/ROOT";s:18:"APPL_PHYSICAL_PATH";s:23:"C:Websitesndj-wordpress";s:9:"AUTH_TYPE";s:0:"";s:13:"AUTH_PASSWORD";s:0:"";s:9:"AUTH_USER";s:0:"";s:11:"CERT_COOKIE";s:0:"";s:10:"CERT_FLAGS";s:0:"";s:11:"CERT_ISSUER";s:0:"";s:17:"CERT_SERIALNUMBER";s:0:"";s:12:"CERT_SUBJECT";s:0:"";s:14:"CONTENT_LENGTH";s:3:"461";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:5:"HTTPS";s:3:"off";s:13:"HTTPS_KEYSIZE";s:0:"";s:19:"HTTPS_SECRETKEYSIZE";s:0:"";s:19:"HTTPS_SERVER_ISSUER";s:0:"";s:20:"HTTPS_SERVER_SUBJECT";s:0:"";s:11:"INSTANCE_ID";s:1:"2";s:18:"INSTANCE_META_PATH";s:11:"/LM/W3SVC/2";s:10:"LOCAL_ADDR";s:12:"66.29.219.39";s:10:"LOGON_USER";s:0:"";s:15:"PATH_TRANSLATED";s:45:"C:Websitesndj-wordpresswp-adminadmin-ajax.php";s:12:"QUERY_STRING";s:0:"";s:11:"REMOTE_ADDR";s:12:"2.45.239.236";s:11:"REMOTE_HOST";s:12:"2.45.239.236";s:11:"REMOTE_PORT";s:5:"55180";s:11:"REMOTE_USER";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:11:"SCRIPT_NAME";s:24:"/wp-admin/admin-ajax.php";s:11:"SERVER_NAME";s:18:"nathanaeljones.com";s:11:"SERVER_PORT";s:2:"80";s:18:"SERVER_PORT_SECURE";s:1:"0";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:3:"URL";s:24:"/wp-admin/admin-ajax.php";s:14:"ORIG_PATH_INFO";s:24:"/wp-admin/admin-ajax.php";s:8:"PHP_SELF";s:24:"/wp-admin/admin-ajax.php";s:12:"REQUEST_TIME";s:10:"1312297352";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7042</wp:comment_id>
			<wp:comment_author><![CDATA[Prakash]]></wp:comment_author>
			<wp:comment_author_email>volety.kiran@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>178.119.100.107</wp:comment_author_IP>
			<wp:comment_date>2011-08-31 11:10:36</wp:comment_date>
			<wp:comment_date_gmt>2011-08-31 15:10:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I would like to add in my webiste which is a commercial site can I use it or do i need any license for Image resizing.Net component? ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7043</wp:comment_id>
			<wp:comment_author><![CDATA[Nathanael Jones]]></wp:comment_author>
			<wp:comment_author_email>nathanael.jones@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>93.44.111.126</wp:comment_author_IP>
			<wp:comment_date>2011-08-31 11:22:15</wp:comment_date>
			<wp:comment_date_gmt>2011-08-31 15:22:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[ImageResizer.dll is completely free. See <a href="http://imageresizing.net/licenses/freedom" rel="nofollow">http://imageresizing.net/licenses/freedom</a> for the license.  There are plugins (see <a href="http://imageresizing.net/plugins)" rel="nofollow">http://imageresizing.net/plugins)</a> that you might want to add; those cost $99 per bundle (each bundle includes an average of 5 plugins) ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>7042</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7086</wp:comment_id>
			<wp:comment_author><![CDATA[Krishna]]></wp:comment_author>
			<wp:comment_author_email>a.krishnateja@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>64.244.176.187</wp:comment_author_IP>
			<wp:comment_date>2011-10-10 16:47:37</wp:comment_date>
			<wp:comment_date_gmt>2011-10-10 20:47:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, I was just using your code for one of my application. I just wanted to know how to save the cropped images to disk, as the cropped image is not getting stored when I remove the commented out code for saving the file. It would be very helpful for me if you could assist me. You can email me at a.krishnateja@gmail.com . Thank you ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7087</wp:comment_id>
			<wp:comment_author><![CDATA[Nathanael Jones]]></wp:comment_author>
			<wp:comment_author_email>nathanael.jones@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>93.146.240.212</wp:comment_author_IP>
			<wp:comment_date>2011-10-11 03:29:11</wp:comment_date>
			<wp:comment_date_gmt>2011-10-11 07:29:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It&#039;s not enough to uncomment the line - you also need to comment out the line that performs the redirect - otherwise the second line never gets executed. Also, make sure you create a &#039;savedimages&#039; folder in the app root.  ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>7086</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7088</wp:comment_id>
			<wp:comment_author><![CDATA[Krishna]]></wp:comment_author>
			<wp:comment_author_email>a.krishnateja@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>64.244.176.187</wp:comment_author_IP>
			<wp:comment_date>2011-10-11 09:13:14</wp:comment_date>
			<wp:comment_date_gmt>2011-10-11 13:13:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for the quick reply, I have commented the redirect line, and created the savedimages folder in the app root , but still it does not save the cropped file.  ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>7087</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7089</wp:comment_id>
			<wp:comment_author><![CDATA[Nathanael Jones]]></wp:comment_author>
			<wp:comment_author_email>nathanael.jones@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>93.146.241.146</wp:comment_author_IP>
			<wp:comment_date>2011-10-11 09:22:50</wp:comment_date>
			<wp:comment_date_gmt>2011-10-11 13:22:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Looks like there was a bug in the commented-out code: It should read (this is inside Advanced.aspx.cs, in Page_Load):      
     
if (Page.IsPostBack &amp;&amp; !string.IsNullOrEmpty(img1.Value))     
                ImageBuilder.Current.Build(&quot;~/&quot;    ImageResizer.Util.PathUtils.RemoveQueryString(img1.Value), &quot;~/cropped.jpg&quot;, new ResizeSettings(img1.Value)); 
 
Put a plus symbol between &quot;~/&quot; and ImageResizer.Util... The comment system is stripping it out.. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>7088</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7092</wp:comment_id>
			<wp:comment_author><![CDATA[Krishna]]></wp:comment_author>
			<wp:comment_author_email>a.krishnateja@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>64.244.176.187</wp:comment_author_IP>
			<wp:comment_date>2011-10-11 09:52:32</wp:comment_date>
			<wp:comment_date_gmt>2011-10-11 13:52:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I have tried this code but it still does not create the image. It gives an error at img1 saying that the img1 does not exist in the current context. I guess its not referencing the namespace. I have tried to manually reference it globally by inserting &quot;protected global::System.Web.UI.HtmlControls.HtmlInputHidden img1;&quot; in the Advanced class , but still it would not create the file in the app root. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>7089</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7093</wp:comment_id>
			<wp:comment_author><![CDATA[Nathanael Jones]]></wp:comment_author>
			<wp:comment_author_email>nathanael.jones@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>93.146.241.146</wp:comment_author_IP>
			<wp:comment_date>2011-10-11 10:01:42</wp:comment_date>
			<wp:comment_date_gmt>2011-10-11 14:01:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[What version of Visual Studio are you using? Are you using the original JCropExample project or did you copy it into your own? It sounds like Advanced.aspx.designer.cs is not being compiled.   
  
Try creating a new .aspx page in your project (so that it will use the correct files appropriate to your specific project type), then copy and paste the sample code into Page_Load, and the contents of the .aspx into the new .aspx page. Leave the &amp;lt;%@ Page&amp;gt; declaration alone - don&#039;t replace it with the declaration from the sample code.   
  
Try that, and see if it will compile for you. I suspect you&#039;re using a Web Site project instead of a Web Application project. 
 
FYI, login to IntenseDebate if you want your comments to be automatically approved... anonymous comments have to be individually moderated. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>7092</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7094</wp:comment_id>
			<wp:comment_author><![CDATA[krishh86]]></wp:comment_author>
			<wp:comment_author_email>a.krishnateja@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>64.244.176.187</wp:comment_author_IP>
			<wp:comment_date>2011-10-11 11:23:44</wp:comment_date>
			<wp:comment_date_gmt>2011-10-11 15:23:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for your patience in answering me.  I have build the project and references to img1 were corrected, but the cropped.jpg is not getting stored in the app root.  ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>7093</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7095</wp:comment_id>
			<wp:comment_author><![CDATA[Nathanael Jones]]></wp:comment_author>
			<wp:comment_author_email>nathanael.jones@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>93.146.241.146</wp:comment_author_IP>
			<wp:comment_date>2011-10-11 11:28:11</wp:comment_date>
			<wp:comment_date_gmt>2011-10-11 15:28:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Well, in lieu of answering questions, perhaps you could e-mail me a .zip of your project so I can take a look? ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>7094</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7096</wp:comment_id>
			<wp:comment_author><![CDATA[krishh86]]></wp:comment_author>
			<wp:comment_author_email>a.krishnateja@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>64.244.176.187</wp:comment_author_IP>
			<wp:comment_date>2011-10-11 11:40:28</wp:comment_date>
			<wp:comment_date_gmt>2011-10-11 15:40:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I have mailed to computer.linguist@gmail.com. Thanks for your help Jones. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>7095</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7097</wp:comment_id>
			<wp:comment_author><![CDATA[Nathanael Jones]]></wp:comment_author>
			<wp:comment_author_email>nathanael.jones@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>93.146.241.146</wp:comment_author_IP>
			<wp:comment_date>2011-10-11 11:48:06</wp:comment_date>
			<wp:comment_date_gmt>2011-10-11 15:48:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The issue is that you were trying to use the sample project as a &quot;Web Site&quot; instead of a &quot;Web Project&quot;, and thus the files were not compiling correctly. If you open a Web Project as a Web Site, you must change &quot;Codebehind&quot; to &quot;Codefile&quot; in the first line of each .aspx file.  ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>7096</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7098</wp:comment_id>
			<wp:comment_author><![CDATA[krishh86]]></wp:comment_author>
			<wp:comment_author_email>a.krishnateja@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>64.244.176.187</wp:comment_author_IP>
			<wp:comment_date>2011-10-11 11:56:49</wp:comment_date>
			<wp:comment_date_gmt>2011-10-11 15:56:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Wow.. Thanks for the info. It works now.. I just started to learn .net so I am just getting familiar with it.   ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>7097</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7099</wp:comment_id>
			<wp:comment_author><![CDATA[Nathanael Jones]]></wp:comment_author>
			<wp:comment_author_email>nathanael.jones@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>93.146.241.146</wp:comment_author_IP>
			<wp:comment_date>2011-10-11 12:04:14</wp:comment_date>
			<wp:comment_date_gmt>2011-10-11 16:04:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Glad I could help :) ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>7098</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7100</wp:comment_id>
			<wp:comment_author><![CDATA[kmac23va]]></wp:comment_author>
			<wp:comment_author_email>kmac23va@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>38.100.31.150</wp:comment_author_IP>
			<wp:comment_date>2011-10-11 13:53:48</wp:comment_date>
			<wp:comment_date_gmt>2011-10-11 17:53:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[With the aspect ratio lock in the advanced sample, can a specific aspect ratio not related to the image be set? That is, the source file is a 4x3 image that a user wants to crop to a 16x9 image...rather than take the aspect ratio from the original image as the code does can it be forced to a pull area for 16x9? Thanks. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7101</wp:comment_id>
			<wp:comment_author><![CDATA[Nathanael Jones]]></wp:comment_author>
			<wp:comment_author_email>nathanael.jones@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>93.146.241.146</wp:comment_author_IP>
			<wp:comment_date>2011-10-11 14:07:13</wp:comment_date>
			<wp:comment_date_gmt>2011-10-11 18:07:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yep, and it&#039;s easy. Just call   
  
jcrop_reference.setOptions({ aspectRatio: 16/9 });  
  
Notice that that&#039;s the same code used by the event handler for the &#039;lock aspect ratio&#039; checkbox. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>7100</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7102</wp:comment_id>
			<wp:comment_author><![CDATA[kmac23va]]></wp:comment_author>
			<wp:comment_author_email>kmac23va@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>38.100.31.150</wp:comment_author_IP>
			<wp:comment_date>2011-10-11 14:31:41</wp:comment_date>
			<wp:comment_date_gmt>2011-10-11 18:31:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Zipped right past that part when I was looking at the page source. Excellent, just what I need, thanks! ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>7101</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7140</wp:comment_id>
			<wp:comment_author><![CDATA[MartinC]]></wp:comment_author>
			<wp:comment_author_email>martin@cmainfo.co.za</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>41.133.198.36</wp:comment_author_IP>
			<wp:comment_date>2011-11-01 09:54:19</wp:comment_date>
			<wp:comment_date_gmt>2011-11-01 13:54:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[anyways of detecting if the cropping rectangle size has changed, I want to enable an asp.net submit button only once a user begins cropping a image. help plz! ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7152</wp:comment_id>
			<wp:comment_author><![CDATA[Chiropractor Markham]]></wp:comment_author>
			<wp:comment_author_email>serviceseo170@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.chiropractormarkham.com</wp:comment_author_url>
			<wp:comment_author_IP>117.206.79.250</wp:comment_author_IP>
			<wp:comment_date>2011-12-28 08:09:36</wp:comment_date>
			<wp:comment_date_gmt>2011-12-28 13:09:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Possess a exceptional evening!. Concerning examine many of the posts with your web site currently, along with Love it if more for instance ones type of posting. My partner and i put in that to help this favorites forum checklist all of which will often be verifying returning in the near future. Remember to look at this web site too along with allow me to really know what you consider.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1325077776.8929";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:108:{s:15:"comment_post_ID";s:3:"573";s:14:"comment_author";s:20:"Chiropractor Markham";s:20:"comment_author_email";s:23:"serviceseo170@gmail.com";s:18:"comment_author_url";s:34:"http://www.chiropractormarkham.com";s:15:"comment_content";s:387:"Possess a exceptional evening!. Concerning examine many of the posts with your web site currently, along with Love it if more for instance ones type of posting. My partner and i put in that to help this favorites forum checklist all of which will often be verifying returning in the near future. Remember to look at this web site too along with allow me to really know what you consider.";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:14:"117.206.79.250";s:10:"user_agent";s:67:"Mozilla/5.0 (Windows NT 6.1; rv:2.0.1) Gecko/20100101 Firefox/4.0.1";s:8:"referrer";s:77:"http://nathanaeljones.com/573/combining-jcrop-and-server-side-image-resizing/";s:4:"blog";s:25:"http://nathanaeljones.com";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:77:"http://nathanaeljones.com/573/combining-jcrop-and-server-side-image-resizing/";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:20:"Chiropractor Markham";s:10:"POST_email";s:23:"serviceseo170@gmail.com";s:8:"POST_url";s:34:"http://www.chiropractormarkham.com";s:12:"POST_comment";s:387:"Possess a exceptional evening!. Concerning examine many of the posts with your web site currently, along with Love it if more for instance ones type of posting. My partner and i put in that to help this favorites forum checklist all of which will often be verifying returning in the near future. Remember to look at this web site too along with allow me to really know what you consider.";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:3:"573";s:19:"POST_comment_parent";s:1:"0";s:26:"POST_akismet_comment_nonce";s:10:"2d2f8d8b0b";s:15:"SERVER_SOFTWARE";s:17:"Microsoft-IIS/7.0";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:21:"PHP_FCGI_MAX_REQUESTS";s:5:"10000";s:5:"PHPRC";s:18:"C:Program FilesPHP";s:15:"ALLUSERSPROFILE";s:13:"C:ProgramData";s:7:"APPDATA";s:50:"C:Windowssystem32configsystemprofileAppDataRoaming";s:11:"APP_POOL_ID";s:13:"ndj-wordpress";s:18:"CommonProgramFiles";s:27:"C:Program FilesCommon Files";s:12:"COMPUTERNAME";s:6:"DED793";s:7:"ComSpec";s:24:"C:Windowssystem32cmd.exe";s:16:"FP_NO_HOST_CHECK";s:2:"NO";s:12:"LOCALAPPDATA";s:48:"C:Windowssystem32configsystemprofileAppDataLocal";s:20:"NUMBER_OF_PROCESSORS";s:1:"2";s:2:"OS";s:10:"Windows_NT";s:4:"Path";s:306:"C:Program FilesPHP;C:Windowssystem32;C:Windows;C:WindowsSystem32Wbem;C:Program FilesMySQLMySQL Server 5.0bin;C:WindowsSystem32WindowsPowerShellv1.0;c:Program FilesMicrosoft SQL Server100ToolsBinn;c:Program FilesMicrosoft SQL Server100DTSBinn;c:Program FilesMicrosoft SQL Server100ToolsBinnVSShellCommon7IDE";s:7:"PATHEXT";s:53:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC";s:22:"PROCESSOR_ARCHITECTURE";s:3:"x86";s:20:"PROCESSOR_IDENTIFIER";s:46:"x86 Family 15 Model 4 Stepping 1, GenuineIntel";s:15:"PROCESSOR_LEVEL";s:2:"15";s:18:"PROCESSOR_REVISION";s:4:"0401";s:11:"ProgramData";s:13:"C:ProgramData";s:12:"ProgramFiles";s:15:"C:Program Files";s:12:"PSModulePath";s:45:"C:Windowssystem32WindowsPowerShellv1.0Modules";s:6:"PUBLIC";s:13:"C:UsersPublic";s:11:"SystemDrive";s:2:"C:";s:10:"SystemRoot";s:9:"C:Windows";s:4:"TEMP";s:13:"C:WindowsTEMP";s:3:"TMP";s:13:"C:WindowsTEMP";s:10:"USERDOMAIN";s:15:"MAXIMUMASPLOCAL";s:8:"USERNAME";s:7:"DED793$";s:11:"USERPROFILE";s:36:"C:Windowssystem32configsystemprofile";s:6:"windir";s:9:"C:Windows";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:19:"HTTP_CONTENT_LENGTH";s:3:"594";s:17:"HTTP_CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:11:"HTTP_ACCEPT";s:3:"*/*";s:19:"HTTP_ACCEPT_CHARSET";s:30:"ISO-8859-1,utf-8;q=0.7,*;q=0.7";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"en-us,en;q=0.5";s:9:"HTTP_HOST";s:18:"nathanaeljones.com";s:12:"HTTP_REFERER";s:77:"http://nathanaeljones.com/573/combining-jcrop-and-server-side-image-resizing/";s:15:"HTTP_USER_AGENT";s:67:"Mozilla/5.0 (Windows NT 6.1; rv:2.0.1) Gecko/20100101 Firefox/4.0.1";s:13:"DOCUMENT_ROOT";s:23:"C:Websitesndj-wordpress";s:15:"SCRIPT_FILENAME";s:43:"C:Websitesndj-wordpresswp-comments-post.php";s:20:"IIS_UrlRewriteModule";s:1:"1";s:12:"APPL_MD_PATH";s:16:"/LM/W3SVC/2/ROOT";s:18:"APPL_PHYSICAL_PATH";s:23:"C:Websitesndj-wordpress";s:9:"AUTH_TYPE";s:0:"";s:13:"AUTH_PASSWORD";s:0:"";s:9:"AUTH_USER";s:0:"";s:11:"CERT_COOKIE";s:0:"";s:10:"CERT_FLAGS";s:0:"";s:11:"CERT_ISSUER";s:0:"";s:17:"CERT_SERIALNUMBER";s:0:"";s:12:"CERT_SUBJECT";s:0:"";s:14:"CONTENT_LENGTH";s:3:"594";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:5:"HTTPS";s:3:"off";s:13:"HTTPS_KEYSIZE";s:0:"";s:19:"HTTPS_SECRETKEYSIZE";s:0:"";s:19:"HTTPS_SERVER_ISSUER";s:0:"";s:20:"HTTPS_SERVER_SUBJECT";s:0:"";s:11:"INSTANCE_ID";s:1:"2";s:18:"INSTANCE_META_PATH";s:11:"/LM/W3SVC/2";s:10:"LOCAL_ADDR";s:12:"66.29.219.39";s:10:"LOGON_USER";s:0:"";s:15:"PATH_TRANSLATED";s:43:"C:Websitesndj-wordpresswp-comments-post.php";s:12:"QUERY_STRING";s:0:"";s:11:"REMOTE_ADDR";s:14:"117.206.79.250";s:11:"REMOTE_HOST";s:14:"117.206.79.250";s:11:"REMOTE_PORT";s:5:"11225";s:11:"REMOTE_USER";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:11:"SERVER_NAME";s:18:"nathanaeljones.com";s:11:"SERVER_PORT";s:2:"80";s:18:"SERVER_PORT_SECURE";s:1:"0";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:3:"URL";s:21:"/wp-comments-post.php";s:14:"ORIG_PATH_INFO";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1325077776";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7153</wp:comment_id>
			<wp:comment_author><![CDATA[Cropping, Resizing, and Panning pictures | JeffHolst.net]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.jeffholst.net/?p=81</wp:comment_author_url>
			<wp:comment_author_IP>72.183.118.126</wp:comment_author_IP>
			<wp:comment_date>2011-12-30 01:11:01</wp:comment_date>
			<wp:comment_date_gmt>2011-12-30 06:11:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] http://nathanaeljones.com/573/combining-jcrop-and-server-side-image-resizing/ [...] ]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1325225461.3762";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:95:{s:15:"comment_post_ID";s:3:"573";s:14:"comment_author";s:56:"Cropping, Resizing, and Panning pictures | JeffHolst.net";s:18:"comment_author_url";s:30:"http://www.jeffholst.net/?p=81";s:20:"comment_author_email";s:0:"";s:15:"comment_content";s:89:"[...] http://nathanaeljones.com/573/combining-jcrop-and-server-side-image-resizing/ [...]";s:12:"comment_type";s:8:"pingback";s:7:"user_ip";s:14:"72.183.118.126";s:10:"user_agent";s:48:"The Incutio XML-RPC PHP Library -- WordPress/3.3";s:8:"referrer";s:0:"";s:4:"blog";s:25:"http://nathanaeljones.com";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:77:"http://nathanaeljones.com/573/combining-jcrop-and-server-side-image-resizing/";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"failed";s:15:"SERVER_SOFTWARE";s:17:"Microsoft-IIS/7.0";s:11:"REQUEST_URI";s:11:"/xmlrpc.php";s:21:"PHP_FCGI_MAX_REQUESTS";s:5:"10000";s:5:"PHPRC";s:18:"C:Program FilesPHP";s:15:"ALLUSERSPROFILE";s:13:"C:ProgramData";s:7:"APPDATA";s:50:"C:Windowssystem32configsystemprofileAppDataRoaming";s:11:"APP_POOL_ID";s:13:"ndj-wordpress";s:18:"CommonProgramFiles";s:27:"C:Program FilesCommon Files";s:12:"COMPUTERNAME";s:6:"DED793";s:7:"ComSpec";s:24:"C:Windowssystem32cmd.exe";s:16:"FP_NO_HOST_CHECK";s:2:"NO";s:12:"LOCALAPPDATA";s:48:"C:Windowssystem32configsystemprofileAppDataLocal";s:20:"NUMBER_OF_PROCESSORS";s:1:"2";s:2:"OS";s:10:"Windows_NT";s:4:"Path";s:306:"C:Program FilesPHP;C:Windowssystem32;C:Windows;C:WindowsSystem32Wbem;C:Program FilesMySQLMySQL Server 5.0bin;C:WindowsSystem32WindowsPowerShellv1.0;c:Program FilesMicrosoft SQL Server100ToolsBinn;c:Program FilesMicrosoft SQL Server100DTSBinn;c:Program FilesMicrosoft SQL Server100ToolsBinnVSShellCommon7IDE";s:7:"PATHEXT";s:53:".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC";s:22:"PROCESSOR_ARCHITECTURE";s:3:"x86";s:20:"PROCESSOR_IDENTIFIER";s:46:"x86 Family 15 Model 4 Stepping 1, GenuineIntel";s:15:"PROCESSOR_LEVEL";s:2:"15";s:18:"PROCESSOR_REVISION";s:4:"0401";s:11:"ProgramData";s:13:"C:ProgramData";s:12:"ProgramFiles";s:15:"C:Program Files";s:12:"PSModulePath";s:45:"C:Windowssystem32WindowsPowerShellv1.0Modules";s:6:"PUBLIC";s:13:"C:UsersPublic";s:11:"SystemDrive";s:2:"C:";s:10:"SystemRoot";s:9:"C:Windows";s:4:"TEMP";s:13:"C:WindowsTEMP";s:3:"TMP";s:13:"C:WindowsTEMP";s:10:"USERDOMAIN";s:15:"MAXIMUMASPLOCAL";s:8:"USERNAME";s:7:"DED793$";s:11:"USERPROFILE";s:36:"C:Windowssystem32configsystemprofile";s:6:"windir";s:9:"C:Windows";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:19:"HTTP_CONTENT_LENGTH";s:3:"308";s:17:"HTTP_CONTENT_TYPE";s:8:"text/xml";s:11:"HTTP_ACCEPT";s:3:"*/*";s:20:"HTTP_ACCEPT_ENCODING";s:29:"deflate;q=1.0, compress;q=0.5";s:9:"HTTP_HOST";s:18:"nathanaeljones.com";s:15:"HTTP_USER_AGENT";s:48:"The Incutio XML-RPC PHP Library -- WordPress/3.3";s:13:"DOCUMENT_ROOT";s:23:"C:Websitesndj-wordpress";s:15:"SCRIPT_FILENAME";s:33:"C:Websitesndj-wordpressxmlrpc.php";s:20:"IIS_UrlRewriteModule";s:1:"1";s:12:"APPL_MD_PATH";s:16:"/LM/W3SVC/2/ROOT";s:18:"APPL_PHYSICAL_PATH";s:23:"C:Websitesndj-wordpress";s:9:"AUTH_TYPE";s:0:"";s:13:"AUTH_PASSWORD";s:0:"";s:9:"AUTH_USER";s:0:"";s:11:"CERT_COOKIE";s:0:"";s:10:"CERT_FLAGS";s:0:"";s:11:"CERT_ISSUER";s:0:"";s:17:"CERT_SERIALNUMBER";s:0:"";s:12:"CERT_SUBJECT";s:0:"";s:14:"CONTENT_LENGTH";s:3:"308";s:12:"CONTENT_TYPE";s:8:"text/xml";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:5:"HTTPS";s:3:"off";s:13:"HTTPS_KEYSIZE";s:0:"";s:19:"HTTPS_SECRETKEYSIZE";s:0:"";s:19:"HTTPS_SERVER_ISSUER";s:0:"";s:20:"HTTPS_SERVER_SUBJECT";s:0:"";s:11:"INSTANCE_ID";s:1:"2";s:18:"INSTANCE_META_PATH";s:11:"/LM/W3SVC/2";s:10:"LOCAL_ADDR";s:12:"66.29.219.39";s:10:"LOGON_USER";s:0:"";s:15:"PATH_TRANSLATED";s:33:"C:Websitesndj-wordpressxmlrpc.php";s:12:"QUERY_STRING";s:0:"";s:11:"REMOTE_ADDR";s:14:"72.183.118.126";s:11:"REMOTE_HOST";s:14:"72.183.118.126";s:11:"REMOTE_PORT";s:4:"9552";s:11:"REMOTE_USER";s:0:"";s:14:"REQUEST_METHOD";s:4:"POST";s:11:"SCRIPT_NAME";s:11:"/xmlrpc.php";s:11:"SERVER_NAME";s:18:"nathanaeljones.com";s:11:"SERVER_PORT";s:2:"80";s:18:"SERVER_PORT_SECURE";s:1:"0";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.0";s:3:"URL";s:11:"/xmlrpc.php";s:14:"ORIG_PATH_INFO";s:11:"/xmlrpc.php";s:8:"PHP_SELF";s:11:"/xmlrpc.php";s:12:"REQUEST_TIME";s:10:"1325225458";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Dynamic seam carving with ImageResizing.net</title>
		<link>http://nathanaeljones.com/596/dynamic-seam-carving-with-imageresizing-net/</link>
		<pubDate>Tue, 02 Aug 2011 15:29:04 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://nathanaeljones.com/?p=596</guid>
		<description></description>
		<content:encoded><![CDATA[The <a href="http://imageresizing.net/releases/3-0-11">latest</a> version of <a href="http://imageresizing.net">ImageResizing.Net</a> supports dynamic <a href="http://en.wikipedia.org/wiki/Seam_carving">seam carving</a> (content-aware image resizing) and <a href="http://imageresizing.net/plugins/remotereader">remote image resizing</a>.


Seam carving allows low-energy (unimportant) parts of the image to be removed in order to shrink an image.

<strong>Original image</strong>

<p><img src="http://img.imageresizing.net/mountain.jpg;width=300" /></p>

<strong>Stretched (distorted image) to 300x150</strong>

<p><img src="http://img.imageresizing.net/mountain.jpg;width=300;height=150;stretch=fill" /></p>


<strong>Seam carved to 300x150</strong>

<p><img src="http://img.imageresizing.net/mountain.jpg;width=300;height=150;carve=true" /></p>

<strong>Original image</strong>

<p><img src="http://img.imageresizing.net/night-bridge.jpg;width=300" /></p>

<strong>Stretched (distorted image) to 150x300</strong>

<p><img src="http://img.imageresizing.net/night-bridge.jpg;width=150;height=300;stretch=fill" /></p>


<strong>Seam carved to 150x300</strong>

<p><img src="http://img.imageresizing.net/night-bridge.jpg;width=150;height=300;carve=true" /></p>

While not a panacea, seam carving can be very useful when you need to change the aspect ratio of an image without cropping any features out. 

The Image Resizer's implementation of seam carving is based on  <a href="https://sites.google.com/site/brainrecall/cair">CAIR</a>, which allows for extremely high-performance seam carving.
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>596</wp:post_id>
		<wp:post_date>2011-08-02 11:29:04</wp:post_date>
		<wp:post_date_gmt>2011-08-02 15:29:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dynamic-seam-carving-with-imageresizing-net</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Anyone have Massive Dynamic&#039;s phone number?</title>
		<link>http://nathanaeljones.com/602/massive-dynamic-hasnt-responded/</link>
		<pubDate>Fri, 05 Aug 2011 15:37:33 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://nathanaeljones.com/?p=602</guid>
		<description></description>
		<content:encoded><![CDATA[Several weeks ago, I applied for <a href="http://www.massivedynamic.com/opening002.php">the Neuroprogrammer position</a> at <a href="http://massivedynamic.com">Massive Dynamic</a>. I still haven't heard back from them, and I'm wondering why.

Here's the job listing: 

<blockquote>NEUROPROGRAMMER

Responsibilities: Manage and coordinate the operation, modification, and encryption of files and programs on neural hardware and networks.

You will:
Manage uploads and downloads of software to and from neural hardware and networks by means of digital-to-organic interfaces.
Modify digital management processes to improve efficiencies and quality.
Coordinate, track, and implement neuro-server installation requests, as well as the migration of project resources across platforms.
Monitor and troubleshoot neural hardware, software, and networking problems.
Provide weekly status reports to the supervisors in Computing and Biological divisions.
Some travel maybe required.


Qualifications:
Master’s degree in Computer Science or minimum 8 years IT experience.
Working knowledge of binary-quaternary language translation.
Familiarity with multiple operating systems and cross-platform transitions.</blockquote>

I submitted a <a href='http://nathanaeljones.com/wp-content/uploads/2011/08/massive-dynamic-resume.pdf'>carefully written, precise, and accurate resumé</a> that should have landed me the job in a heartbeat. </a>

I didn't want to seem needy, but I e-mailed to make sure they had received the application. Still no response.

I even tried calling to see if they had somehow missed the application - but their listed number was incorrect, probably due to a typo. 

Does anyone have their phone number? Someone suggested that <a href="http://fringepedia.net/wiki/Massive_Dynamic">they're not actually a real corporation</a>, but I think that's just a conspiracy theory.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>602</wp:post_id>
		<wp:post_date>2011-08-05 11:37:33</wp:post_date>
		<wp:post_date_gmt>2011-08-05 15:37:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>massive-dynamic-hasnt-responded</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>7040</wp:comment_id>
			<wp:comment_author><![CDATA[bro]]></wp:comment_author>
			<wp:comment_author_email>mfleming@spareegg.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>150.101.218.178</wp:comment_author_IP>
			<wp:comment_date>2011-08-31 08:24:19</wp:comment_date>
			<wp:comment_date_gmt>2011-08-31 12:24:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Have you ever seen the TV show Fringe 
  <a href="http://en.wikipedia.org/wiki/Fringe_%28TV_series%29" rel="nofollow">http://en.wikipedia.org/wiki/Fringe_%28TV_series%...</a> 
  <a href="http://fringepedia.net/wiki/Massive_Dynamic" rel="nofollow">http://fringepedia.net/wiki/Massive_Dynamic</a> 
 
BTW supercopy is awesome ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7050</wp:comment_id>
			<wp:comment_author><![CDATA[Nathanael Jones]]></wp:comment_author>
			<wp:comment_author_email>nathanael.jones@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>95.75.17.202</wp:comment_author_IP>
			<wp:comment_date>2011-09-02 19:51:55</wp:comment_date>
			<wp:comment_date_gmt>2011-09-02 23:51:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for the SuperCopy props!   
  
BTW, Notice the last link in the article... ;)  ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>7040</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7148</wp:comment_id>
			<wp:comment_author><![CDATA[Lo&iuml;c Carr&egrave;re]]></wp:comment_author>
			<wp:comment_author_email>l.carrere@gdpicture.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.gdpicture.com</wp:comment_author_url>
			<wp:comment_author_IP>88.171.48.52</wp:comment_author_IP>
			<wp:comment_date>2011-11-25 15:34:07</wp:comment_date>
			<wp:comment_date_gmt>2011-11-25 20:34:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[HAHA good joke :) 
I am also a fan of the Fringe TV show. 
Greetings from France! 
 
Lo&iuml;c ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
</channel>
</rss>
